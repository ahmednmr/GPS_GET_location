
GPS_Get_location.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001fe2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000202  00800060  00001fe2  00002076  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000095  00800262  00800262  00002278  2**0
                  ALLOC
  3 .stab         00001920  00000000  00000000  00002278  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001273  00000000  00000000  00003b98  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000160  00000000  00000000  00004e0b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 000001b6  00000000  00000000  00004f6b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001f0d  00000000  00000000  00005121  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000010d2  00000000  00000000  0000702e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00001030  00000000  00000000  00008100  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000180  00000000  00000000  00009130  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000002e6  00000000  00000000  000092b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000008f6  00000000  00000000  00009596  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00009e8c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 a7 0b 	jmp	0x174e	; 0x174e <__vector_10>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	12 e0       	ldi	r17, 0x02	; 2
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 ee       	ldi	r30, 0xE2	; 226
      68:	ff e1       	ldi	r31, 0x1F	; 31
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 36       	cpi	r26, 0x62	; 98
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	12 e0       	ldi	r17, 0x02	; 2
      78:	a2 e6       	ldi	r26, 0x62	; 98
      7a:	b2 e0       	ldi	r27, 0x02	; 2
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a7 3f       	cpi	r26, 0xF7	; 247
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 6a 07 	call	0xed4	; 0xed4 <main>
      8a:	0c 94 ef 0f 	jmp	0x1fde	; 0x1fde <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 c5 03 	call	0x78a	; 0x78a <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 b2 0d 	jmp	0x1b64	; 0x1b64 <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	aa e5       	ldi	r26, 0x5A	; 90
     128:	b1 e0       	ldi	r27, 0x01	; 1
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 ce 0d 	jmp	0x1b9c	; 0x1b9c <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 be 0d 	jmp	0x1b7c	; 0x1b7c <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 11 05 	call	0xa22	; 0xa22 <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 da 0d 	jmp	0x1bb4	; 0x1bb4 <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 be 0d 	jmp	0x1b7c	; 0x1b7c <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 11 05 	call	0xa22	; 0xa22 <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 da 0d 	jmp	0x1bb4	; 0x1bb4 <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 b2 0d 	jmp	0x1b64	; 0x1b64 <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	8a e5       	ldi	r24, 0x5A	; 90
     496:	91 e0       	ldi	r25, 0x01	; 1
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 11 05 	call	0xa22	; 0xa22 <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 ce 0d 	jmp	0x1b9c	; 0x1b9c <__epilogue_restores__>

00000632 <__divsf3>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 ba 0d 	jmp	0x1b74	; 0x1b74 <__prologue_saves__+0x10>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	b9 e0       	ldi	r27, 0x09	; 9
     650:	eb 2e       	mov	r14, r27
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     672:	29 85       	ldd	r18, Y+9	; 0x09
     674:	22 30       	cpi	r18, 0x02	; 2
     676:	08 f4       	brcc	.+2      	; 0x67a <__divsf3+0x48>
     678:	7e c0       	rjmp	.+252    	; 0x776 <__divsf3+0x144>
     67a:	39 89       	ldd	r19, Y+17	; 0x11
     67c:	32 30       	cpi	r19, 0x02	; 2
     67e:	10 f4       	brcc	.+4      	; 0x684 <__divsf3+0x52>
     680:	b8 01       	movw	r22, r16
     682:	7c c0       	rjmp	.+248    	; 0x77c <__divsf3+0x14a>
     684:	8a 85       	ldd	r24, Y+10	; 0x0a
     686:	9a 89       	ldd	r25, Y+18	; 0x12
     688:	89 27       	eor	r24, r25
     68a:	8a 87       	std	Y+10, r24	; 0x0a
     68c:	24 30       	cpi	r18, 0x04	; 4
     68e:	11 f0       	breq	.+4      	; 0x694 <__divsf3+0x62>
     690:	22 30       	cpi	r18, 0x02	; 2
     692:	31 f4       	brne	.+12     	; 0x6a0 <__divsf3+0x6e>
     694:	23 17       	cp	r18, r19
     696:	09 f0       	breq	.+2      	; 0x69a <__divsf3+0x68>
     698:	6e c0       	rjmp	.+220    	; 0x776 <__divsf3+0x144>
     69a:	6a e5       	ldi	r22, 0x5A	; 90
     69c:	71 e0       	ldi	r23, 0x01	; 1
     69e:	6e c0       	rjmp	.+220    	; 0x77c <__divsf3+0x14a>
     6a0:	34 30       	cpi	r19, 0x04	; 4
     6a2:	39 f4       	brne	.+14     	; 0x6b2 <__divsf3+0x80>
     6a4:	1d 86       	std	Y+13, r1	; 0x0d
     6a6:	1e 86       	std	Y+14, r1	; 0x0e
     6a8:	1f 86       	std	Y+15, r1	; 0x0f
     6aa:	18 8a       	std	Y+16, r1	; 0x10
     6ac:	1c 86       	std	Y+12, r1	; 0x0c
     6ae:	1b 86       	std	Y+11, r1	; 0x0b
     6b0:	04 c0       	rjmp	.+8      	; 0x6ba <__divsf3+0x88>
     6b2:	32 30       	cpi	r19, 0x02	; 2
     6b4:	21 f4       	brne	.+8      	; 0x6be <__divsf3+0x8c>
     6b6:	84 e0       	ldi	r24, 0x04	; 4
     6b8:	89 87       	std	Y+9, r24	; 0x09
     6ba:	b7 01       	movw	r22, r14
     6bc:	5f c0       	rjmp	.+190    	; 0x77c <__divsf3+0x14a>
     6be:	2b 85       	ldd	r18, Y+11	; 0x0b
     6c0:	3c 85       	ldd	r19, Y+12	; 0x0c
     6c2:	8b 89       	ldd	r24, Y+19	; 0x13
     6c4:	9c 89       	ldd	r25, Y+20	; 0x14
     6c6:	28 1b       	sub	r18, r24
     6c8:	39 0b       	sbc	r19, r25
     6ca:	3c 87       	std	Y+12, r19	; 0x0c
     6cc:	2b 87       	std	Y+11, r18	; 0x0b
     6ce:	ed 84       	ldd	r14, Y+13	; 0x0d
     6d0:	fe 84       	ldd	r15, Y+14	; 0x0e
     6d2:	0f 85       	ldd	r16, Y+15	; 0x0f
     6d4:	18 89       	ldd	r17, Y+16	; 0x10
     6d6:	ad 88       	ldd	r10, Y+21	; 0x15
     6d8:	be 88       	ldd	r11, Y+22	; 0x16
     6da:	cf 88       	ldd	r12, Y+23	; 0x17
     6dc:	d8 8c       	ldd	r13, Y+24	; 0x18
     6de:	ea 14       	cp	r14, r10
     6e0:	fb 04       	cpc	r15, r11
     6e2:	0c 05       	cpc	r16, r12
     6e4:	1d 05       	cpc	r17, r13
     6e6:	40 f4       	brcc	.+16     	; 0x6f8 <__divsf3+0xc6>
     6e8:	ee 0c       	add	r14, r14
     6ea:	ff 1c       	adc	r15, r15
     6ec:	00 1f       	adc	r16, r16
     6ee:	11 1f       	adc	r17, r17
     6f0:	21 50       	subi	r18, 0x01	; 1
     6f2:	30 40       	sbci	r19, 0x00	; 0
     6f4:	3c 87       	std	Y+12, r19	; 0x0c
     6f6:	2b 87       	std	Y+11, r18	; 0x0b
     6f8:	20 e0       	ldi	r18, 0x00	; 0
     6fa:	30 e0       	ldi	r19, 0x00	; 0
     6fc:	40 e0       	ldi	r20, 0x00	; 0
     6fe:	50 e0       	ldi	r21, 0x00	; 0
     700:	80 e0       	ldi	r24, 0x00	; 0
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	a0 e0       	ldi	r26, 0x00	; 0
     706:	b0 e4       	ldi	r27, 0x40	; 64
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	ea 14       	cp	r14, r10
     70e:	fb 04       	cpc	r15, r11
     710:	0c 05       	cpc	r16, r12
     712:	1d 05       	cpc	r17, r13
     714:	40 f0       	brcs	.+16     	; 0x726 <__divsf3+0xf4>
     716:	28 2b       	or	r18, r24
     718:	39 2b       	or	r19, r25
     71a:	4a 2b       	or	r20, r26
     71c:	5b 2b       	or	r21, r27
     71e:	ea 18       	sub	r14, r10
     720:	fb 08       	sbc	r15, r11
     722:	0c 09       	sbc	r16, r12
     724:	1d 09       	sbc	r17, r13
     726:	b6 95       	lsr	r27
     728:	a7 95       	ror	r26
     72a:	97 95       	ror	r25
     72c:	87 95       	ror	r24
     72e:	ee 0c       	add	r14, r14
     730:	ff 1c       	adc	r15, r15
     732:	00 1f       	adc	r16, r16
     734:	11 1f       	adc	r17, r17
     736:	6f 5f       	subi	r22, 0xFF	; 255
     738:	7f 4f       	sbci	r23, 0xFF	; 255
     73a:	6f 31       	cpi	r22, 0x1F	; 31
     73c:	71 05       	cpc	r23, r1
     73e:	31 f7       	brne	.-52     	; 0x70c <__divsf3+0xda>
     740:	da 01       	movw	r26, r20
     742:	c9 01       	movw	r24, r18
     744:	8f 77       	andi	r24, 0x7F	; 127
     746:	90 70       	andi	r25, 0x00	; 0
     748:	a0 70       	andi	r26, 0x00	; 0
     74a:	b0 70       	andi	r27, 0x00	; 0
     74c:	80 34       	cpi	r24, 0x40	; 64
     74e:	91 05       	cpc	r25, r1
     750:	a1 05       	cpc	r26, r1
     752:	b1 05       	cpc	r27, r1
     754:	61 f4       	brne	.+24     	; 0x76e <__divsf3+0x13c>
     756:	27 fd       	sbrc	r18, 7
     758:	0a c0       	rjmp	.+20     	; 0x76e <__divsf3+0x13c>
     75a:	e1 14       	cp	r14, r1
     75c:	f1 04       	cpc	r15, r1
     75e:	01 05       	cpc	r16, r1
     760:	11 05       	cpc	r17, r1
     762:	29 f0       	breq	.+10     	; 0x76e <__divsf3+0x13c>
     764:	20 5c       	subi	r18, 0xC0	; 192
     766:	3f 4f       	sbci	r19, 0xFF	; 255
     768:	4f 4f       	sbci	r20, 0xFF	; 255
     76a:	5f 4f       	sbci	r21, 0xFF	; 255
     76c:	20 78       	andi	r18, 0x80	; 128
     76e:	2d 87       	std	Y+13, r18	; 0x0d
     770:	3e 87       	std	Y+14, r19	; 0x0e
     772:	4f 87       	std	Y+15, r20	; 0x0f
     774:	58 8b       	std	Y+16, r21	; 0x10
     776:	be 01       	movw	r22, r28
     778:	67 5f       	subi	r22, 0xF7	; 247
     77a:	7f 4f       	sbci	r23, 0xFF	; 255
     77c:	cb 01       	movw	r24, r22
     77e:	0e 94 11 05 	call	0xa22	; 0xa22 <__pack_f>
     782:	68 96       	adiw	r28, 0x18	; 24
     784:	ea e0       	ldi	r30, 0x0A	; 10
     786:	0c 94 d6 0d 	jmp	0x1bac	; 0x1bac <__epilogue_restores__+0x10>

0000078a <__gesf2>:
     78a:	a8 e1       	ldi	r26, 0x18	; 24
     78c:	b0 e0       	ldi	r27, 0x00	; 0
     78e:	eb ec       	ldi	r30, 0xCB	; 203
     790:	f3 e0       	ldi	r31, 0x03	; 3
     792:	0c 94 be 0d 	jmp	0x1b7c	; 0x1b7c <__prologue_saves__+0x18>
     796:	69 83       	std	Y+1, r22	; 0x01
     798:	7a 83       	std	Y+2, r23	; 0x02
     79a:	8b 83       	std	Y+3, r24	; 0x03
     79c:	9c 83       	std	Y+4, r25	; 0x04
     79e:	2d 83       	std	Y+5, r18	; 0x05
     7a0:	3e 83       	std	Y+6, r19	; 0x06
     7a2:	4f 83       	std	Y+7, r20	; 0x07
     7a4:	58 87       	std	Y+8, r21	; 0x08
     7a6:	89 e0       	ldi	r24, 0x09	; 9
     7a8:	e8 2e       	mov	r14, r24
     7aa:	f1 2c       	mov	r15, r1
     7ac:	ec 0e       	add	r14, r28
     7ae:	fd 1e       	adc	r15, r29
     7b0:	ce 01       	movw	r24, r28
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	b7 01       	movw	r22, r14
     7b6:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     7ba:	8e 01       	movw	r16, r28
     7bc:	0f 5e       	subi	r16, 0xEF	; 239
     7be:	1f 4f       	sbci	r17, 0xFF	; 255
     7c0:	ce 01       	movw	r24, r28
     7c2:	05 96       	adiw	r24, 0x05	; 5
     7c4:	b8 01       	movw	r22, r16
     7c6:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     7ca:	89 85       	ldd	r24, Y+9	; 0x09
     7cc:	82 30       	cpi	r24, 0x02	; 2
     7ce:	40 f0       	brcs	.+16     	; 0x7e0 <__gesf2+0x56>
     7d0:	89 89       	ldd	r24, Y+17	; 0x11
     7d2:	82 30       	cpi	r24, 0x02	; 2
     7d4:	28 f0       	brcs	.+10     	; 0x7e0 <__gesf2+0x56>
     7d6:	c7 01       	movw	r24, r14
     7d8:	b8 01       	movw	r22, r16
     7da:	0e 94 5e 06 	call	0xcbc	; 0xcbc <__fpcmp_parts_f>
     7de:	01 c0       	rjmp	.+2      	; 0x7e2 <__gesf2+0x58>
     7e0:	8f ef       	ldi	r24, 0xFF	; 255
     7e2:	68 96       	adiw	r28, 0x18	; 24
     7e4:	e6 e0       	ldi	r30, 0x06	; 6
     7e6:	0c 94 da 0d 	jmp	0x1bb4	; 0x1bb4 <__epilogue_restores__+0x18>

000007ea <__fixsfsi>:
     7ea:	ac e0       	ldi	r26, 0x0C	; 12
     7ec:	b0 e0       	ldi	r27, 0x00	; 0
     7ee:	eb ef       	ldi	r30, 0xFB	; 251
     7f0:	f3 e0       	ldi	r31, 0x03	; 3
     7f2:	0c 94 c2 0d 	jmp	0x1b84	; 0x1b84 <__prologue_saves__+0x20>
     7f6:	69 83       	std	Y+1, r22	; 0x01
     7f8:	7a 83       	std	Y+2, r23	; 0x02
     7fa:	8b 83       	std	Y+3, r24	; 0x03
     7fc:	9c 83       	std	Y+4, r25	; 0x04
     7fe:	ce 01       	movw	r24, r28
     800:	01 96       	adiw	r24, 0x01	; 1
     802:	be 01       	movw	r22, r28
     804:	6b 5f       	subi	r22, 0xFB	; 251
     806:	7f 4f       	sbci	r23, 0xFF	; 255
     808:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__unpack_f>
     80c:	8d 81       	ldd	r24, Y+5	; 0x05
     80e:	82 30       	cpi	r24, 0x02	; 2
     810:	61 f1       	breq	.+88     	; 0x86a <__stack+0xb>
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	50 f1       	brcs	.+84     	; 0x86a <__stack+0xb>
     816:	84 30       	cpi	r24, 0x04	; 4
     818:	21 f4       	brne	.+8      	; 0x822 <__fixsfsi+0x38>
     81a:	8e 81       	ldd	r24, Y+6	; 0x06
     81c:	88 23       	and	r24, r24
     81e:	51 f1       	breq	.+84     	; 0x874 <__stack+0x15>
     820:	2e c0       	rjmp	.+92     	; 0x87e <__stack+0x1f>
     822:	2f 81       	ldd	r18, Y+7	; 0x07
     824:	38 85       	ldd	r19, Y+8	; 0x08
     826:	37 fd       	sbrc	r19, 7
     828:	20 c0       	rjmp	.+64     	; 0x86a <__stack+0xb>
     82a:	6e 81       	ldd	r22, Y+6	; 0x06
     82c:	2f 31       	cpi	r18, 0x1F	; 31
     82e:	31 05       	cpc	r19, r1
     830:	1c f0       	brlt	.+6      	; 0x838 <__fixsfsi+0x4e>
     832:	66 23       	and	r22, r22
     834:	f9 f0       	breq	.+62     	; 0x874 <__stack+0x15>
     836:	23 c0       	rjmp	.+70     	; 0x87e <__stack+0x1f>
     838:	8e e1       	ldi	r24, 0x1E	; 30
     83a:	90 e0       	ldi	r25, 0x00	; 0
     83c:	82 1b       	sub	r24, r18
     83e:	93 0b       	sbc	r25, r19
     840:	29 85       	ldd	r18, Y+9	; 0x09
     842:	3a 85       	ldd	r19, Y+10	; 0x0a
     844:	4b 85       	ldd	r20, Y+11	; 0x0b
     846:	5c 85       	ldd	r21, Y+12	; 0x0c
     848:	04 c0       	rjmp	.+8      	; 0x852 <__fixsfsi+0x68>
     84a:	56 95       	lsr	r21
     84c:	47 95       	ror	r20
     84e:	37 95       	ror	r19
     850:	27 95       	ror	r18
     852:	8a 95       	dec	r24
     854:	d2 f7       	brpl	.-12     	; 0x84a <__fixsfsi+0x60>
     856:	66 23       	and	r22, r22
     858:	b1 f0       	breq	.+44     	; 0x886 <__stack+0x27>
     85a:	50 95       	com	r21
     85c:	40 95       	com	r20
     85e:	30 95       	com	r19
     860:	21 95       	neg	r18
     862:	3f 4f       	sbci	r19, 0xFF	; 255
     864:	4f 4f       	sbci	r20, 0xFF	; 255
     866:	5f 4f       	sbci	r21, 0xFF	; 255
     868:	0e c0       	rjmp	.+28     	; 0x886 <__stack+0x27>
     86a:	20 e0       	ldi	r18, 0x00	; 0
     86c:	30 e0       	ldi	r19, 0x00	; 0
     86e:	40 e0       	ldi	r20, 0x00	; 0
     870:	50 e0       	ldi	r21, 0x00	; 0
     872:	09 c0       	rjmp	.+18     	; 0x886 <__stack+0x27>
     874:	2f ef       	ldi	r18, 0xFF	; 255
     876:	3f ef       	ldi	r19, 0xFF	; 255
     878:	4f ef       	ldi	r20, 0xFF	; 255
     87a:	5f e7       	ldi	r21, 0x7F	; 127
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	20 e0       	ldi	r18, 0x00	; 0
     880:	30 e0       	ldi	r19, 0x00	; 0
     882:	40 e0       	ldi	r20, 0x00	; 0
     884:	50 e8       	ldi	r21, 0x80	; 128
     886:	b9 01       	movw	r22, r18
     888:	ca 01       	movw	r24, r20
     88a:	2c 96       	adiw	r28, 0x0c	; 12
     88c:	e2 e0       	ldi	r30, 0x02	; 2
     88e:	0c 94 de 0d 	jmp	0x1bbc	; 0x1bbc <__epilogue_restores__+0x20>

00000892 <__floatunsisf>:
     892:	a8 e0       	ldi	r26, 0x08	; 8
     894:	b0 e0       	ldi	r27, 0x00	; 0
     896:	ef e4       	ldi	r30, 0x4F	; 79
     898:	f4 e0       	ldi	r31, 0x04	; 4
     89a:	0c 94 ba 0d 	jmp	0x1b74	; 0x1b74 <__prologue_saves__+0x10>
     89e:	7b 01       	movw	r14, r22
     8a0:	8c 01       	movw	r16, r24
     8a2:	61 15       	cp	r22, r1
     8a4:	71 05       	cpc	r23, r1
     8a6:	81 05       	cpc	r24, r1
     8a8:	91 05       	cpc	r25, r1
     8aa:	19 f4       	brne	.+6      	; 0x8b2 <__floatunsisf+0x20>
     8ac:	82 e0       	ldi	r24, 0x02	; 2
     8ae:	89 83       	std	Y+1, r24	; 0x01
     8b0:	60 c0       	rjmp	.+192    	; 0x972 <__floatunsisf+0xe0>
     8b2:	83 e0       	ldi	r24, 0x03	; 3
     8b4:	89 83       	std	Y+1, r24	; 0x01
     8b6:	8e e1       	ldi	r24, 0x1E	; 30
     8b8:	c8 2e       	mov	r12, r24
     8ba:	d1 2c       	mov	r13, r1
     8bc:	dc 82       	std	Y+4, r13	; 0x04
     8be:	cb 82       	std	Y+3, r12	; 0x03
     8c0:	ed 82       	std	Y+5, r14	; 0x05
     8c2:	fe 82       	std	Y+6, r15	; 0x06
     8c4:	0f 83       	std	Y+7, r16	; 0x07
     8c6:	18 87       	std	Y+8, r17	; 0x08
     8c8:	c8 01       	movw	r24, r16
     8ca:	b7 01       	movw	r22, r14
     8cc:	0e 94 c2 04 	call	0x984	; 0x984 <__clzsi2>
     8d0:	fc 01       	movw	r30, r24
     8d2:	31 97       	sbiw	r30, 0x01	; 1
     8d4:	f7 ff       	sbrs	r31, 7
     8d6:	3b c0       	rjmp	.+118    	; 0x94e <__floatunsisf+0xbc>
     8d8:	22 27       	eor	r18, r18
     8da:	33 27       	eor	r19, r19
     8dc:	2e 1b       	sub	r18, r30
     8de:	3f 0b       	sbc	r19, r31
     8e0:	57 01       	movw	r10, r14
     8e2:	68 01       	movw	r12, r16
     8e4:	02 2e       	mov	r0, r18
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__floatunsisf+0x5e>
     8e8:	d6 94       	lsr	r13
     8ea:	c7 94       	ror	r12
     8ec:	b7 94       	ror	r11
     8ee:	a7 94       	ror	r10
     8f0:	0a 94       	dec	r0
     8f2:	d2 f7       	brpl	.-12     	; 0x8e8 <__floatunsisf+0x56>
     8f4:	40 e0       	ldi	r20, 0x00	; 0
     8f6:	50 e0       	ldi	r21, 0x00	; 0
     8f8:	60 e0       	ldi	r22, 0x00	; 0
     8fa:	70 e0       	ldi	r23, 0x00	; 0
     8fc:	81 e0       	ldi	r24, 0x01	; 1
     8fe:	90 e0       	ldi	r25, 0x00	; 0
     900:	a0 e0       	ldi	r26, 0x00	; 0
     902:	b0 e0       	ldi	r27, 0x00	; 0
     904:	04 c0       	rjmp	.+8      	; 0x90e <__floatunsisf+0x7c>
     906:	88 0f       	add	r24, r24
     908:	99 1f       	adc	r25, r25
     90a:	aa 1f       	adc	r26, r26
     90c:	bb 1f       	adc	r27, r27
     90e:	2a 95       	dec	r18
     910:	d2 f7       	brpl	.-12     	; 0x906 <__floatunsisf+0x74>
     912:	01 97       	sbiw	r24, 0x01	; 1
     914:	a1 09       	sbc	r26, r1
     916:	b1 09       	sbc	r27, r1
     918:	8e 21       	and	r24, r14
     91a:	9f 21       	and	r25, r15
     91c:	a0 23       	and	r26, r16
     91e:	b1 23       	and	r27, r17
     920:	00 97       	sbiw	r24, 0x00	; 0
     922:	a1 05       	cpc	r26, r1
     924:	b1 05       	cpc	r27, r1
     926:	21 f0       	breq	.+8      	; 0x930 <__floatunsisf+0x9e>
     928:	41 e0       	ldi	r20, 0x01	; 1
     92a:	50 e0       	ldi	r21, 0x00	; 0
     92c:	60 e0       	ldi	r22, 0x00	; 0
     92e:	70 e0       	ldi	r23, 0x00	; 0
     930:	4a 29       	or	r20, r10
     932:	5b 29       	or	r21, r11
     934:	6c 29       	or	r22, r12
     936:	7d 29       	or	r23, r13
     938:	4d 83       	std	Y+5, r20	; 0x05
     93a:	5e 83       	std	Y+6, r21	; 0x06
     93c:	6f 83       	std	Y+7, r22	; 0x07
     93e:	78 87       	std	Y+8, r23	; 0x08
     940:	8e e1       	ldi	r24, 0x1E	; 30
     942:	90 e0       	ldi	r25, 0x00	; 0
     944:	8e 1b       	sub	r24, r30
     946:	9f 0b       	sbc	r25, r31
     948:	9c 83       	std	Y+4, r25	; 0x04
     94a:	8b 83       	std	Y+3, r24	; 0x03
     94c:	12 c0       	rjmp	.+36     	; 0x972 <__floatunsisf+0xe0>
     94e:	30 97       	sbiw	r30, 0x00	; 0
     950:	81 f0       	breq	.+32     	; 0x972 <__floatunsisf+0xe0>
     952:	0e 2e       	mov	r0, r30
     954:	04 c0       	rjmp	.+8      	; 0x95e <__floatunsisf+0xcc>
     956:	ee 0c       	add	r14, r14
     958:	ff 1c       	adc	r15, r15
     95a:	00 1f       	adc	r16, r16
     95c:	11 1f       	adc	r17, r17
     95e:	0a 94       	dec	r0
     960:	d2 f7       	brpl	.-12     	; 0x956 <__floatunsisf+0xc4>
     962:	ed 82       	std	Y+5, r14	; 0x05
     964:	fe 82       	std	Y+6, r15	; 0x06
     966:	0f 83       	std	Y+7, r16	; 0x07
     968:	18 87       	std	Y+8, r17	; 0x08
     96a:	ce 1a       	sub	r12, r30
     96c:	df 0a       	sbc	r13, r31
     96e:	dc 82       	std	Y+4, r13	; 0x04
     970:	cb 82       	std	Y+3, r12	; 0x03
     972:	1a 82       	std	Y+2, r1	; 0x02
     974:	ce 01       	movw	r24, r28
     976:	01 96       	adiw	r24, 0x01	; 1
     978:	0e 94 11 05 	call	0xa22	; 0xa22 <__pack_f>
     97c:	28 96       	adiw	r28, 0x08	; 8
     97e:	ea e0       	ldi	r30, 0x0A	; 10
     980:	0c 94 d6 0d 	jmp	0x1bac	; 0x1bac <__epilogue_restores__+0x10>

00000984 <__clzsi2>:
     984:	ef 92       	push	r14
     986:	ff 92       	push	r15
     988:	0f 93       	push	r16
     98a:	1f 93       	push	r17
     98c:	7b 01       	movw	r14, r22
     98e:	8c 01       	movw	r16, r24
     990:	80 e0       	ldi	r24, 0x00	; 0
     992:	e8 16       	cp	r14, r24
     994:	80 e0       	ldi	r24, 0x00	; 0
     996:	f8 06       	cpc	r15, r24
     998:	81 e0       	ldi	r24, 0x01	; 1
     99a:	08 07       	cpc	r16, r24
     99c:	80 e0       	ldi	r24, 0x00	; 0
     99e:	18 07       	cpc	r17, r24
     9a0:	88 f4       	brcc	.+34     	; 0x9c4 <__clzsi2+0x40>
     9a2:	8f ef       	ldi	r24, 0xFF	; 255
     9a4:	e8 16       	cp	r14, r24
     9a6:	f1 04       	cpc	r15, r1
     9a8:	01 05       	cpc	r16, r1
     9aa:	11 05       	cpc	r17, r1
     9ac:	31 f0       	breq	.+12     	; 0x9ba <__clzsi2+0x36>
     9ae:	28 f0       	brcs	.+10     	; 0x9ba <__clzsi2+0x36>
     9b0:	88 e0       	ldi	r24, 0x08	; 8
     9b2:	90 e0       	ldi	r25, 0x00	; 0
     9b4:	a0 e0       	ldi	r26, 0x00	; 0
     9b6:	b0 e0       	ldi	r27, 0x00	; 0
     9b8:	17 c0       	rjmp	.+46     	; 0x9e8 <__clzsi2+0x64>
     9ba:	80 e0       	ldi	r24, 0x00	; 0
     9bc:	90 e0       	ldi	r25, 0x00	; 0
     9be:	a0 e0       	ldi	r26, 0x00	; 0
     9c0:	b0 e0       	ldi	r27, 0x00	; 0
     9c2:	12 c0       	rjmp	.+36     	; 0x9e8 <__clzsi2+0x64>
     9c4:	80 e0       	ldi	r24, 0x00	; 0
     9c6:	e8 16       	cp	r14, r24
     9c8:	80 e0       	ldi	r24, 0x00	; 0
     9ca:	f8 06       	cpc	r15, r24
     9cc:	80 e0       	ldi	r24, 0x00	; 0
     9ce:	08 07       	cpc	r16, r24
     9d0:	81 e0       	ldi	r24, 0x01	; 1
     9d2:	18 07       	cpc	r17, r24
     9d4:	28 f0       	brcs	.+10     	; 0x9e0 <__clzsi2+0x5c>
     9d6:	88 e1       	ldi	r24, 0x18	; 24
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	a0 e0       	ldi	r26, 0x00	; 0
     9dc:	b0 e0       	ldi	r27, 0x00	; 0
     9de:	04 c0       	rjmp	.+8      	; 0x9e8 <__clzsi2+0x64>
     9e0:	80 e1       	ldi	r24, 0x10	; 16
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	a0 e0       	ldi	r26, 0x00	; 0
     9e6:	b0 e0       	ldi	r27, 0x00	; 0
     9e8:	20 e2       	ldi	r18, 0x20	; 32
     9ea:	30 e0       	ldi	r19, 0x00	; 0
     9ec:	40 e0       	ldi	r20, 0x00	; 0
     9ee:	50 e0       	ldi	r21, 0x00	; 0
     9f0:	28 1b       	sub	r18, r24
     9f2:	39 0b       	sbc	r19, r25
     9f4:	4a 0b       	sbc	r20, r26
     9f6:	5b 0b       	sbc	r21, r27
     9f8:	04 c0       	rjmp	.+8      	; 0xa02 <__clzsi2+0x7e>
     9fa:	16 95       	lsr	r17
     9fc:	07 95       	ror	r16
     9fe:	f7 94       	ror	r15
     a00:	e7 94       	ror	r14
     a02:	8a 95       	dec	r24
     a04:	d2 f7       	brpl	.-12     	; 0x9fa <__clzsi2+0x76>
     a06:	f7 01       	movw	r30, r14
     a08:	ee 59       	subi	r30, 0x9E	; 158
     a0a:	fe 4f       	sbci	r31, 0xFE	; 254
     a0c:	80 81       	ld	r24, Z
     a0e:	28 1b       	sub	r18, r24
     a10:	31 09       	sbc	r19, r1
     a12:	41 09       	sbc	r20, r1
     a14:	51 09       	sbc	r21, r1
     a16:	c9 01       	movw	r24, r18
     a18:	1f 91       	pop	r17
     a1a:	0f 91       	pop	r16
     a1c:	ff 90       	pop	r15
     a1e:	ef 90       	pop	r14
     a20:	08 95       	ret

00000a22 <__pack_f>:
     a22:	df 92       	push	r13
     a24:	ef 92       	push	r14
     a26:	ff 92       	push	r15
     a28:	0f 93       	push	r16
     a2a:	1f 93       	push	r17
     a2c:	fc 01       	movw	r30, r24
     a2e:	e4 80       	ldd	r14, Z+4	; 0x04
     a30:	f5 80       	ldd	r15, Z+5	; 0x05
     a32:	06 81       	ldd	r16, Z+6	; 0x06
     a34:	17 81       	ldd	r17, Z+7	; 0x07
     a36:	d1 80       	ldd	r13, Z+1	; 0x01
     a38:	80 81       	ld	r24, Z
     a3a:	82 30       	cpi	r24, 0x02	; 2
     a3c:	48 f4       	brcc	.+18     	; 0xa50 <__pack_f+0x2e>
     a3e:	80 e0       	ldi	r24, 0x00	; 0
     a40:	90 e0       	ldi	r25, 0x00	; 0
     a42:	a0 e1       	ldi	r26, 0x10	; 16
     a44:	b0 e0       	ldi	r27, 0x00	; 0
     a46:	e8 2a       	or	r14, r24
     a48:	f9 2a       	or	r15, r25
     a4a:	0a 2b       	or	r16, r26
     a4c:	1b 2b       	or	r17, r27
     a4e:	a5 c0       	rjmp	.+330    	; 0xb9a <__pack_f+0x178>
     a50:	84 30       	cpi	r24, 0x04	; 4
     a52:	09 f4       	brne	.+2      	; 0xa56 <__pack_f+0x34>
     a54:	9f c0       	rjmp	.+318    	; 0xb94 <__pack_f+0x172>
     a56:	82 30       	cpi	r24, 0x02	; 2
     a58:	21 f4       	brne	.+8      	; 0xa62 <__pack_f+0x40>
     a5a:	ee 24       	eor	r14, r14
     a5c:	ff 24       	eor	r15, r15
     a5e:	87 01       	movw	r16, r14
     a60:	05 c0       	rjmp	.+10     	; 0xa6c <__pack_f+0x4a>
     a62:	e1 14       	cp	r14, r1
     a64:	f1 04       	cpc	r15, r1
     a66:	01 05       	cpc	r16, r1
     a68:	11 05       	cpc	r17, r1
     a6a:	19 f4       	brne	.+6      	; 0xa72 <__pack_f+0x50>
     a6c:	e0 e0       	ldi	r30, 0x00	; 0
     a6e:	f0 e0       	ldi	r31, 0x00	; 0
     a70:	96 c0       	rjmp	.+300    	; 0xb9e <__pack_f+0x17c>
     a72:	62 81       	ldd	r22, Z+2	; 0x02
     a74:	73 81       	ldd	r23, Z+3	; 0x03
     a76:	9f ef       	ldi	r25, 0xFF	; 255
     a78:	62 38       	cpi	r22, 0x82	; 130
     a7a:	79 07       	cpc	r23, r25
     a7c:	0c f0       	brlt	.+2      	; 0xa80 <__pack_f+0x5e>
     a7e:	5b c0       	rjmp	.+182    	; 0xb36 <__pack_f+0x114>
     a80:	22 e8       	ldi	r18, 0x82	; 130
     a82:	3f ef       	ldi	r19, 0xFF	; 255
     a84:	26 1b       	sub	r18, r22
     a86:	37 0b       	sbc	r19, r23
     a88:	2a 31       	cpi	r18, 0x1A	; 26
     a8a:	31 05       	cpc	r19, r1
     a8c:	2c f0       	brlt	.+10     	; 0xa98 <__pack_f+0x76>
     a8e:	20 e0       	ldi	r18, 0x00	; 0
     a90:	30 e0       	ldi	r19, 0x00	; 0
     a92:	40 e0       	ldi	r20, 0x00	; 0
     a94:	50 e0       	ldi	r21, 0x00	; 0
     a96:	2a c0       	rjmp	.+84     	; 0xaec <__pack_f+0xca>
     a98:	b8 01       	movw	r22, r16
     a9a:	a7 01       	movw	r20, r14
     a9c:	02 2e       	mov	r0, r18
     a9e:	04 c0       	rjmp	.+8      	; 0xaa8 <__pack_f+0x86>
     aa0:	76 95       	lsr	r23
     aa2:	67 95       	ror	r22
     aa4:	57 95       	ror	r21
     aa6:	47 95       	ror	r20
     aa8:	0a 94       	dec	r0
     aaa:	d2 f7       	brpl	.-12     	; 0xaa0 <__pack_f+0x7e>
     aac:	81 e0       	ldi	r24, 0x01	; 1
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	a0 e0       	ldi	r26, 0x00	; 0
     ab2:	b0 e0       	ldi	r27, 0x00	; 0
     ab4:	04 c0       	rjmp	.+8      	; 0xabe <__pack_f+0x9c>
     ab6:	88 0f       	add	r24, r24
     ab8:	99 1f       	adc	r25, r25
     aba:	aa 1f       	adc	r26, r26
     abc:	bb 1f       	adc	r27, r27
     abe:	2a 95       	dec	r18
     ac0:	d2 f7       	brpl	.-12     	; 0xab6 <__pack_f+0x94>
     ac2:	01 97       	sbiw	r24, 0x01	; 1
     ac4:	a1 09       	sbc	r26, r1
     ac6:	b1 09       	sbc	r27, r1
     ac8:	8e 21       	and	r24, r14
     aca:	9f 21       	and	r25, r15
     acc:	a0 23       	and	r26, r16
     ace:	b1 23       	and	r27, r17
     ad0:	00 97       	sbiw	r24, 0x00	; 0
     ad2:	a1 05       	cpc	r26, r1
     ad4:	b1 05       	cpc	r27, r1
     ad6:	21 f0       	breq	.+8      	; 0xae0 <__pack_f+0xbe>
     ad8:	81 e0       	ldi	r24, 0x01	; 1
     ada:	90 e0       	ldi	r25, 0x00	; 0
     adc:	a0 e0       	ldi	r26, 0x00	; 0
     ade:	b0 e0       	ldi	r27, 0x00	; 0
     ae0:	9a 01       	movw	r18, r20
     ae2:	ab 01       	movw	r20, r22
     ae4:	28 2b       	or	r18, r24
     ae6:	39 2b       	or	r19, r25
     ae8:	4a 2b       	or	r20, r26
     aea:	5b 2b       	or	r21, r27
     aec:	da 01       	movw	r26, r20
     aee:	c9 01       	movw	r24, r18
     af0:	8f 77       	andi	r24, 0x7F	; 127
     af2:	90 70       	andi	r25, 0x00	; 0
     af4:	a0 70       	andi	r26, 0x00	; 0
     af6:	b0 70       	andi	r27, 0x00	; 0
     af8:	80 34       	cpi	r24, 0x40	; 64
     afa:	91 05       	cpc	r25, r1
     afc:	a1 05       	cpc	r26, r1
     afe:	b1 05       	cpc	r27, r1
     b00:	39 f4       	brne	.+14     	; 0xb10 <__pack_f+0xee>
     b02:	27 ff       	sbrs	r18, 7
     b04:	09 c0       	rjmp	.+18     	; 0xb18 <__pack_f+0xf6>
     b06:	20 5c       	subi	r18, 0xC0	; 192
     b08:	3f 4f       	sbci	r19, 0xFF	; 255
     b0a:	4f 4f       	sbci	r20, 0xFF	; 255
     b0c:	5f 4f       	sbci	r21, 0xFF	; 255
     b0e:	04 c0       	rjmp	.+8      	; 0xb18 <__pack_f+0xf6>
     b10:	21 5c       	subi	r18, 0xC1	; 193
     b12:	3f 4f       	sbci	r19, 0xFF	; 255
     b14:	4f 4f       	sbci	r20, 0xFF	; 255
     b16:	5f 4f       	sbci	r21, 0xFF	; 255
     b18:	e0 e0       	ldi	r30, 0x00	; 0
     b1a:	f0 e0       	ldi	r31, 0x00	; 0
     b1c:	20 30       	cpi	r18, 0x00	; 0
     b1e:	a0 e0       	ldi	r26, 0x00	; 0
     b20:	3a 07       	cpc	r19, r26
     b22:	a0 e0       	ldi	r26, 0x00	; 0
     b24:	4a 07       	cpc	r20, r26
     b26:	a0 e4       	ldi	r26, 0x40	; 64
     b28:	5a 07       	cpc	r21, r26
     b2a:	10 f0       	brcs	.+4      	; 0xb30 <__pack_f+0x10e>
     b2c:	e1 e0       	ldi	r30, 0x01	; 1
     b2e:	f0 e0       	ldi	r31, 0x00	; 0
     b30:	79 01       	movw	r14, r18
     b32:	8a 01       	movw	r16, r20
     b34:	27 c0       	rjmp	.+78     	; 0xb84 <__pack_f+0x162>
     b36:	60 38       	cpi	r22, 0x80	; 128
     b38:	71 05       	cpc	r23, r1
     b3a:	64 f5       	brge	.+88     	; 0xb94 <__pack_f+0x172>
     b3c:	fb 01       	movw	r30, r22
     b3e:	e1 58       	subi	r30, 0x81	; 129
     b40:	ff 4f       	sbci	r31, 0xFF	; 255
     b42:	d8 01       	movw	r26, r16
     b44:	c7 01       	movw	r24, r14
     b46:	8f 77       	andi	r24, 0x7F	; 127
     b48:	90 70       	andi	r25, 0x00	; 0
     b4a:	a0 70       	andi	r26, 0x00	; 0
     b4c:	b0 70       	andi	r27, 0x00	; 0
     b4e:	80 34       	cpi	r24, 0x40	; 64
     b50:	91 05       	cpc	r25, r1
     b52:	a1 05       	cpc	r26, r1
     b54:	b1 05       	cpc	r27, r1
     b56:	39 f4       	brne	.+14     	; 0xb66 <__pack_f+0x144>
     b58:	e7 fe       	sbrs	r14, 7
     b5a:	0d c0       	rjmp	.+26     	; 0xb76 <__pack_f+0x154>
     b5c:	80 e4       	ldi	r24, 0x40	; 64
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	a0 e0       	ldi	r26, 0x00	; 0
     b62:	b0 e0       	ldi	r27, 0x00	; 0
     b64:	04 c0       	rjmp	.+8      	; 0xb6e <__pack_f+0x14c>
     b66:	8f e3       	ldi	r24, 0x3F	; 63
     b68:	90 e0       	ldi	r25, 0x00	; 0
     b6a:	a0 e0       	ldi	r26, 0x00	; 0
     b6c:	b0 e0       	ldi	r27, 0x00	; 0
     b6e:	e8 0e       	add	r14, r24
     b70:	f9 1e       	adc	r15, r25
     b72:	0a 1f       	adc	r16, r26
     b74:	1b 1f       	adc	r17, r27
     b76:	17 ff       	sbrs	r17, 7
     b78:	05 c0       	rjmp	.+10     	; 0xb84 <__pack_f+0x162>
     b7a:	16 95       	lsr	r17
     b7c:	07 95       	ror	r16
     b7e:	f7 94       	ror	r15
     b80:	e7 94       	ror	r14
     b82:	31 96       	adiw	r30, 0x01	; 1
     b84:	87 e0       	ldi	r24, 0x07	; 7
     b86:	16 95       	lsr	r17
     b88:	07 95       	ror	r16
     b8a:	f7 94       	ror	r15
     b8c:	e7 94       	ror	r14
     b8e:	8a 95       	dec	r24
     b90:	d1 f7       	brne	.-12     	; 0xb86 <__pack_f+0x164>
     b92:	05 c0       	rjmp	.+10     	; 0xb9e <__pack_f+0x17c>
     b94:	ee 24       	eor	r14, r14
     b96:	ff 24       	eor	r15, r15
     b98:	87 01       	movw	r16, r14
     b9a:	ef ef       	ldi	r30, 0xFF	; 255
     b9c:	f0 e0       	ldi	r31, 0x00	; 0
     b9e:	6e 2f       	mov	r22, r30
     ba0:	67 95       	ror	r22
     ba2:	66 27       	eor	r22, r22
     ba4:	67 95       	ror	r22
     ba6:	90 2f       	mov	r25, r16
     ba8:	9f 77       	andi	r25, 0x7F	; 127
     baa:	d7 94       	ror	r13
     bac:	dd 24       	eor	r13, r13
     bae:	d7 94       	ror	r13
     bb0:	8e 2f       	mov	r24, r30
     bb2:	86 95       	lsr	r24
     bb4:	49 2f       	mov	r20, r25
     bb6:	46 2b       	or	r20, r22
     bb8:	58 2f       	mov	r21, r24
     bba:	5d 29       	or	r21, r13
     bbc:	b7 01       	movw	r22, r14
     bbe:	ca 01       	movw	r24, r20
     bc0:	1f 91       	pop	r17
     bc2:	0f 91       	pop	r16
     bc4:	ff 90       	pop	r15
     bc6:	ef 90       	pop	r14
     bc8:	df 90       	pop	r13
     bca:	08 95       	ret

00000bcc <__unpack_f>:
     bcc:	fc 01       	movw	r30, r24
     bce:	db 01       	movw	r26, r22
     bd0:	40 81       	ld	r20, Z
     bd2:	51 81       	ldd	r21, Z+1	; 0x01
     bd4:	22 81       	ldd	r18, Z+2	; 0x02
     bd6:	62 2f       	mov	r22, r18
     bd8:	6f 77       	andi	r22, 0x7F	; 127
     bda:	70 e0       	ldi	r23, 0x00	; 0
     bdc:	22 1f       	adc	r18, r18
     bde:	22 27       	eor	r18, r18
     be0:	22 1f       	adc	r18, r18
     be2:	93 81       	ldd	r25, Z+3	; 0x03
     be4:	89 2f       	mov	r24, r25
     be6:	88 0f       	add	r24, r24
     be8:	82 2b       	or	r24, r18
     bea:	28 2f       	mov	r18, r24
     bec:	30 e0       	ldi	r19, 0x00	; 0
     bee:	99 1f       	adc	r25, r25
     bf0:	99 27       	eor	r25, r25
     bf2:	99 1f       	adc	r25, r25
     bf4:	11 96       	adiw	r26, 0x01	; 1
     bf6:	9c 93       	st	X, r25
     bf8:	11 97       	sbiw	r26, 0x01	; 1
     bfa:	21 15       	cp	r18, r1
     bfc:	31 05       	cpc	r19, r1
     bfe:	a9 f5       	brne	.+106    	; 0xc6a <__unpack_f+0x9e>
     c00:	41 15       	cp	r20, r1
     c02:	51 05       	cpc	r21, r1
     c04:	61 05       	cpc	r22, r1
     c06:	71 05       	cpc	r23, r1
     c08:	11 f4       	brne	.+4      	; 0xc0e <__unpack_f+0x42>
     c0a:	82 e0       	ldi	r24, 0x02	; 2
     c0c:	37 c0       	rjmp	.+110    	; 0xc7c <__unpack_f+0xb0>
     c0e:	82 e8       	ldi	r24, 0x82	; 130
     c10:	9f ef       	ldi	r25, 0xFF	; 255
     c12:	13 96       	adiw	r26, 0x03	; 3
     c14:	9c 93       	st	X, r25
     c16:	8e 93       	st	-X, r24
     c18:	12 97       	sbiw	r26, 0x02	; 2
     c1a:	9a 01       	movw	r18, r20
     c1c:	ab 01       	movw	r20, r22
     c1e:	67 e0       	ldi	r22, 0x07	; 7
     c20:	22 0f       	add	r18, r18
     c22:	33 1f       	adc	r19, r19
     c24:	44 1f       	adc	r20, r20
     c26:	55 1f       	adc	r21, r21
     c28:	6a 95       	dec	r22
     c2a:	d1 f7       	brne	.-12     	; 0xc20 <__unpack_f+0x54>
     c2c:	83 e0       	ldi	r24, 0x03	; 3
     c2e:	8c 93       	st	X, r24
     c30:	0d c0       	rjmp	.+26     	; 0xc4c <__unpack_f+0x80>
     c32:	22 0f       	add	r18, r18
     c34:	33 1f       	adc	r19, r19
     c36:	44 1f       	adc	r20, r20
     c38:	55 1f       	adc	r21, r21
     c3a:	12 96       	adiw	r26, 0x02	; 2
     c3c:	8d 91       	ld	r24, X+
     c3e:	9c 91       	ld	r25, X
     c40:	13 97       	sbiw	r26, 0x03	; 3
     c42:	01 97       	sbiw	r24, 0x01	; 1
     c44:	13 96       	adiw	r26, 0x03	; 3
     c46:	9c 93       	st	X, r25
     c48:	8e 93       	st	-X, r24
     c4a:	12 97       	sbiw	r26, 0x02	; 2
     c4c:	20 30       	cpi	r18, 0x00	; 0
     c4e:	80 e0       	ldi	r24, 0x00	; 0
     c50:	38 07       	cpc	r19, r24
     c52:	80 e0       	ldi	r24, 0x00	; 0
     c54:	48 07       	cpc	r20, r24
     c56:	80 e4       	ldi	r24, 0x40	; 64
     c58:	58 07       	cpc	r21, r24
     c5a:	58 f3       	brcs	.-42     	; 0xc32 <__unpack_f+0x66>
     c5c:	14 96       	adiw	r26, 0x04	; 4
     c5e:	2d 93       	st	X+, r18
     c60:	3d 93       	st	X+, r19
     c62:	4d 93       	st	X+, r20
     c64:	5c 93       	st	X, r21
     c66:	17 97       	sbiw	r26, 0x07	; 7
     c68:	08 95       	ret
     c6a:	2f 3f       	cpi	r18, 0xFF	; 255
     c6c:	31 05       	cpc	r19, r1
     c6e:	79 f4       	brne	.+30     	; 0xc8e <__unpack_f+0xc2>
     c70:	41 15       	cp	r20, r1
     c72:	51 05       	cpc	r21, r1
     c74:	61 05       	cpc	r22, r1
     c76:	71 05       	cpc	r23, r1
     c78:	19 f4       	brne	.+6      	; 0xc80 <__unpack_f+0xb4>
     c7a:	84 e0       	ldi	r24, 0x04	; 4
     c7c:	8c 93       	st	X, r24
     c7e:	08 95       	ret
     c80:	64 ff       	sbrs	r22, 4
     c82:	03 c0       	rjmp	.+6      	; 0xc8a <__unpack_f+0xbe>
     c84:	81 e0       	ldi	r24, 0x01	; 1
     c86:	8c 93       	st	X, r24
     c88:	12 c0       	rjmp	.+36     	; 0xcae <__unpack_f+0xe2>
     c8a:	1c 92       	st	X, r1
     c8c:	10 c0       	rjmp	.+32     	; 0xcae <__unpack_f+0xe2>
     c8e:	2f 57       	subi	r18, 0x7F	; 127
     c90:	30 40       	sbci	r19, 0x00	; 0
     c92:	13 96       	adiw	r26, 0x03	; 3
     c94:	3c 93       	st	X, r19
     c96:	2e 93       	st	-X, r18
     c98:	12 97       	sbiw	r26, 0x02	; 2
     c9a:	83 e0       	ldi	r24, 0x03	; 3
     c9c:	8c 93       	st	X, r24
     c9e:	87 e0       	ldi	r24, 0x07	; 7
     ca0:	44 0f       	add	r20, r20
     ca2:	55 1f       	adc	r21, r21
     ca4:	66 1f       	adc	r22, r22
     ca6:	77 1f       	adc	r23, r23
     ca8:	8a 95       	dec	r24
     caa:	d1 f7       	brne	.-12     	; 0xca0 <__unpack_f+0xd4>
     cac:	70 64       	ori	r23, 0x40	; 64
     cae:	14 96       	adiw	r26, 0x04	; 4
     cb0:	4d 93       	st	X+, r20
     cb2:	5d 93       	st	X+, r21
     cb4:	6d 93       	st	X+, r22
     cb6:	7c 93       	st	X, r23
     cb8:	17 97       	sbiw	r26, 0x07	; 7
     cba:	08 95       	ret

00000cbc <__fpcmp_parts_f>:
     cbc:	1f 93       	push	r17
     cbe:	dc 01       	movw	r26, r24
     cc0:	fb 01       	movw	r30, r22
     cc2:	9c 91       	ld	r25, X
     cc4:	92 30       	cpi	r25, 0x02	; 2
     cc6:	08 f4       	brcc	.+2      	; 0xcca <__fpcmp_parts_f+0xe>
     cc8:	47 c0       	rjmp	.+142    	; 0xd58 <__fpcmp_parts_f+0x9c>
     cca:	80 81       	ld	r24, Z
     ccc:	82 30       	cpi	r24, 0x02	; 2
     cce:	08 f4       	brcc	.+2      	; 0xcd2 <__fpcmp_parts_f+0x16>
     cd0:	43 c0       	rjmp	.+134    	; 0xd58 <__fpcmp_parts_f+0x9c>
     cd2:	94 30       	cpi	r25, 0x04	; 4
     cd4:	51 f4       	brne	.+20     	; 0xcea <__fpcmp_parts_f+0x2e>
     cd6:	11 96       	adiw	r26, 0x01	; 1
     cd8:	1c 91       	ld	r17, X
     cda:	84 30       	cpi	r24, 0x04	; 4
     cdc:	99 f5       	brne	.+102    	; 0xd44 <__fpcmp_parts_f+0x88>
     cde:	81 81       	ldd	r24, Z+1	; 0x01
     ce0:	68 2f       	mov	r22, r24
     ce2:	70 e0       	ldi	r23, 0x00	; 0
     ce4:	61 1b       	sub	r22, r17
     ce6:	71 09       	sbc	r23, r1
     ce8:	3f c0       	rjmp	.+126    	; 0xd68 <__fpcmp_parts_f+0xac>
     cea:	84 30       	cpi	r24, 0x04	; 4
     cec:	21 f0       	breq	.+8      	; 0xcf6 <__fpcmp_parts_f+0x3a>
     cee:	92 30       	cpi	r25, 0x02	; 2
     cf0:	31 f4       	brne	.+12     	; 0xcfe <__fpcmp_parts_f+0x42>
     cf2:	82 30       	cpi	r24, 0x02	; 2
     cf4:	b9 f1       	breq	.+110    	; 0xd64 <__fpcmp_parts_f+0xa8>
     cf6:	81 81       	ldd	r24, Z+1	; 0x01
     cf8:	88 23       	and	r24, r24
     cfa:	89 f1       	breq	.+98     	; 0xd5e <__fpcmp_parts_f+0xa2>
     cfc:	2d c0       	rjmp	.+90     	; 0xd58 <__fpcmp_parts_f+0x9c>
     cfe:	11 96       	adiw	r26, 0x01	; 1
     d00:	1c 91       	ld	r17, X
     d02:	11 97       	sbiw	r26, 0x01	; 1
     d04:	82 30       	cpi	r24, 0x02	; 2
     d06:	f1 f0       	breq	.+60     	; 0xd44 <__fpcmp_parts_f+0x88>
     d08:	81 81       	ldd	r24, Z+1	; 0x01
     d0a:	18 17       	cp	r17, r24
     d0c:	d9 f4       	brne	.+54     	; 0xd44 <__fpcmp_parts_f+0x88>
     d0e:	12 96       	adiw	r26, 0x02	; 2
     d10:	2d 91       	ld	r18, X+
     d12:	3c 91       	ld	r19, X
     d14:	13 97       	sbiw	r26, 0x03	; 3
     d16:	82 81       	ldd	r24, Z+2	; 0x02
     d18:	93 81       	ldd	r25, Z+3	; 0x03
     d1a:	82 17       	cp	r24, r18
     d1c:	93 07       	cpc	r25, r19
     d1e:	94 f0       	brlt	.+36     	; 0xd44 <__fpcmp_parts_f+0x88>
     d20:	28 17       	cp	r18, r24
     d22:	39 07       	cpc	r19, r25
     d24:	bc f0       	brlt	.+46     	; 0xd54 <__fpcmp_parts_f+0x98>
     d26:	14 96       	adiw	r26, 0x04	; 4
     d28:	8d 91       	ld	r24, X+
     d2a:	9d 91       	ld	r25, X+
     d2c:	0d 90       	ld	r0, X+
     d2e:	bc 91       	ld	r27, X
     d30:	a0 2d       	mov	r26, r0
     d32:	24 81       	ldd	r18, Z+4	; 0x04
     d34:	35 81       	ldd	r19, Z+5	; 0x05
     d36:	46 81       	ldd	r20, Z+6	; 0x06
     d38:	57 81       	ldd	r21, Z+7	; 0x07
     d3a:	28 17       	cp	r18, r24
     d3c:	39 07       	cpc	r19, r25
     d3e:	4a 07       	cpc	r20, r26
     d40:	5b 07       	cpc	r21, r27
     d42:	18 f4       	brcc	.+6      	; 0xd4a <__fpcmp_parts_f+0x8e>
     d44:	11 23       	and	r17, r17
     d46:	41 f0       	breq	.+16     	; 0xd58 <__fpcmp_parts_f+0x9c>
     d48:	0a c0       	rjmp	.+20     	; 0xd5e <__fpcmp_parts_f+0xa2>
     d4a:	82 17       	cp	r24, r18
     d4c:	93 07       	cpc	r25, r19
     d4e:	a4 07       	cpc	r26, r20
     d50:	b5 07       	cpc	r27, r21
     d52:	40 f4       	brcc	.+16     	; 0xd64 <__fpcmp_parts_f+0xa8>
     d54:	11 23       	and	r17, r17
     d56:	19 f0       	breq	.+6      	; 0xd5e <__fpcmp_parts_f+0xa2>
     d58:	61 e0       	ldi	r22, 0x01	; 1
     d5a:	70 e0       	ldi	r23, 0x00	; 0
     d5c:	05 c0       	rjmp	.+10     	; 0xd68 <__fpcmp_parts_f+0xac>
     d5e:	6f ef       	ldi	r22, 0xFF	; 255
     d60:	7f ef       	ldi	r23, 0xFF	; 255
     d62:	02 c0       	rjmp	.+4      	; 0xd68 <__fpcmp_parts_f+0xac>
     d64:	60 e0       	ldi	r22, 0x00	; 0
     d66:	70 e0       	ldi	r23, 0x00	; 0
     d68:	cb 01       	movw	r24, r22
     d6a:	1f 91       	pop	r17
     d6c:	08 95       	ret

00000d6e <UART_init>:




void UART_init(void)
{
     d6e:	df 93       	push	r29
     d70:	cf 93       	push	r28
     d72:	cd b7       	in	r28, 0x3d	; 61
     d74:	de b7       	in	r29, 0x3e	; 62
//	unsigned int Value_of_UBBR = 0;


//	    UCSRA= (1<<U2X);
		UCSRB = (1 << RXEN) | (1 << TXEN)|(1<<RXCIE);
     d76:	ea e2       	ldi	r30, 0x2A	; 42
     d78:	f0 e0       	ldi	r31, 0x00	; 0
     d7a:	88 e9       	ldi	r24, 0x98	; 152
     d7c:	80 83       	st	Z, r24
       UCSRC = (1 << URSEL) | (3 << UCSZ0);
     d7e:	e0 e4       	ldi	r30, 0x40	; 64
     d80:	f0 e0       	ldi	r31, 0x00	; 0
     d82:	86 e8       	ldi	r24, 0x86	; 134
     d84:	80 83       	st	Z, r24
				UBRRL = 51;
     d86:	e9 e2       	ldi	r30, 0x29	; 41
     d88:	f0 e0       	ldi	r31, 0x00	; 0
     d8a:	83 e3       	ldi	r24, 0x33	; 51
     d8c:	80 83       	st	Z, r24
				UBRRH =0;
     d8e:	e0 e4       	ldi	r30, 0x40	; 64
     d90:	f0 e0       	ldi	r31, 0x00	; 0
     d92:	10 82       	st	Z, r1
}
     d94:	cf 91       	pop	r28
     d96:	df 91       	pop	r29
     d98:	08 95       	ret

00000d9a <UART_SendChar>:


void UART_SendChar(char data)
{
     d9a:	df 93       	push	r29
     d9c:	cf 93       	push	r28
     d9e:	0f 92       	push	r0
     da0:	cd b7       	in	r28, 0x3d	; 61
     da2:	de b7       	in	r29, 0x3e	; 62
     da4:	89 83       	std	Y+1, r24	; 0x01
	while (!( UCSRA & (1<<UDRE))) ;  /* Wait for empty transmit buffer */
     da6:	eb e2       	ldi	r30, 0x2B	; 43
     da8:	f0 e0       	ldi	r31, 0x00	; 0
     daa:	80 81       	ld	r24, Z
     dac:	88 2f       	mov	r24, r24
     dae:	90 e0       	ldi	r25, 0x00	; 0
     db0:	80 72       	andi	r24, 0x20	; 32
     db2:	90 70       	andi	r25, 0x00	; 0
     db4:	00 97       	sbiw	r24, 0x00	; 0
     db6:	b9 f3       	breq	.-18     	; 0xda6 <UART_SendChar+0xc>

	UDR = data;                     /* Put data into buffer, sends the data */
     db8:	ec e2       	ldi	r30, 0x2C	; 44
     dba:	f0 e0       	ldi	r31, 0x00	; 0
     dbc:	89 81       	ldd	r24, Y+1	; 0x01
     dbe:	80 83       	st	Z, r24
}
     dc0:	0f 90       	pop	r0
     dc2:	cf 91       	pop	r28
     dc4:	df 91       	pop	r29
     dc6:	08 95       	ret

00000dc8 <UART_getChar>:


char UART_getChar(void)
{
     dc8:	df 93       	push	r29
     dca:	cf 93       	push	r28
     dcc:	cd b7       	in	r28, 0x3d	; 61
     dce:	de b7       	in	r29, 0x3e	; 62
	while (!(UCSRA & (1<<RXC)));   /* Wait until reveived flag set */
     dd0:	eb e2       	ldi	r30, 0x2B	; 43
     dd2:	f0 e0       	ldi	r31, 0x00	; 0
     dd4:	80 81       	ld	r24, Z
     dd6:	88 23       	and	r24, r24
     dd8:	dc f7       	brge	.-10     	; 0xdd0 <UART_getChar+0x8>

	return UDR;                   /* Return data in received buffer */
     dda:	ec e2       	ldi	r30, 0x2C	; 44
     ddc:	f0 e0       	ldi	r31, 0x00	; 0
     dde:	80 81       	ld	r24, Z
}
     de0:	cf 91       	pop	r28
     de2:	df 91       	pop	r29
     de4:	08 95       	ret

00000de6 <UART_SEND_string>:


void UART_SEND_string(char *array)
{
     de6:	df 93       	push	r29
     de8:	cf 93       	push	r28
     dea:	00 d0       	rcall	.+0      	; 0xdec <UART_SEND_string+0x6>
     dec:	00 d0       	rcall	.+0      	; 0xdee <UART_SEND_string+0x8>
     dee:	cd b7       	in	r28, 0x3d	; 61
     df0:	de b7       	in	r29, 0x3e	; 62
     df2:	9c 83       	std	Y+4, r25	; 0x04
     df4:	8b 83       	std	Y+3, r24	; 0x03
	int i=0;
     df6:	1a 82       	std	Y+2, r1	; 0x02
     df8:	19 82       	std	Y+1, r1	; 0x01
     dfa:	0f c0       	rjmp	.+30     	; 0xe1a <UART_SEND_string+0x34>
    while(array[i]!='\0')
    {

    	UART_SendChar(array[i]);
     dfc:	29 81       	ldd	r18, Y+1	; 0x01
     dfe:	3a 81       	ldd	r19, Y+2	; 0x02
     e00:	8b 81       	ldd	r24, Y+3	; 0x03
     e02:	9c 81       	ldd	r25, Y+4	; 0x04
     e04:	fc 01       	movw	r30, r24
     e06:	e2 0f       	add	r30, r18
     e08:	f3 1f       	adc	r31, r19
     e0a:	80 81       	ld	r24, Z
     e0c:	0e 94 cd 06 	call	0xd9a	; 0xd9a <UART_SendChar>
    	i++;
     e10:	89 81       	ldd	r24, Y+1	; 0x01
     e12:	9a 81       	ldd	r25, Y+2	; 0x02
     e14:	01 96       	adiw	r24, 0x01	; 1
     e16:	9a 83       	std	Y+2, r25	; 0x02
     e18:	89 83       	std	Y+1, r24	; 0x01


void UART_SEND_string(char *array)
{
	int i=0;
    while(array[i]!='\0')
     e1a:	29 81       	ldd	r18, Y+1	; 0x01
     e1c:	3a 81       	ldd	r19, Y+2	; 0x02
     e1e:	8b 81       	ldd	r24, Y+3	; 0x03
     e20:	9c 81       	ldd	r25, Y+4	; 0x04
     e22:	fc 01       	movw	r30, r24
     e24:	e2 0f       	add	r30, r18
     e26:	f3 1f       	adc	r31, r19
     e28:	80 81       	ld	r24, Z
     e2a:	88 23       	and	r24, r24
     e2c:	39 f7       	brne	.-50     	; 0xdfc <UART_SEND_string+0x16>

    	UART_SendChar(array[i]);
    	i++;
    }

}
     e2e:	0f 90       	pop	r0
     e30:	0f 90       	pop	r0
     e32:	0f 90       	pop	r0
     e34:	0f 90       	pop	r0
     e36:	cf 91       	pop	r28
     e38:	df 91       	pop	r29
     e3a:	08 95       	ret

00000e3c <UART_SEND_long_number>:


void UART_SEND_long_number(unsigned long number)
{
     e3c:	df 93       	push	r29
     e3e:	cf 93       	push	r28
     e40:	cd b7       	in	r28, 0x3d	; 61
     e42:	de b7       	in	r29, 0x3e	; 62
     e44:	68 97       	sbiw	r28, 0x18	; 24
     e46:	0f b6       	in	r0, 0x3f	; 63
     e48:	f8 94       	cli
     e4a:	de bf       	out	0x3e, r29	; 62
     e4c:	0f be       	out	0x3f, r0	; 63
     e4e:	cd bf       	out	0x3d, r28	; 61
     e50:	6d 8b       	std	Y+21, r22	; 0x15
     e52:	7e 8b       	std	Y+22, r23	; 0x16
     e54:	8f 8b       	std	Y+23, r24	; 0x17
     e56:	98 8f       	std	Y+24, r25	; 0x18
   char buffer[20];

   ultoa(number,buffer,10);
     e58:	8d 89       	ldd	r24, Y+21	; 0x15
     e5a:	9e 89       	ldd	r25, Y+22	; 0x16
     e5c:	af 89       	ldd	r26, Y+23	; 0x17
     e5e:	b8 8d       	ldd	r27, Y+24	; 0x18
     e60:	bc 01       	movw	r22, r24
     e62:	cd 01       	movw	r24, r26
     e64:	9e 01       	movw	r18, r28
     e66:	2f 5f       	subi	r18, 0xFF	; 255
     e68:	3f 4f       	sbci	r19, 0xFF	; 255
     e6a:	a9 01       	movw	r20, r18
     e6c:	2a e0       	ldi	r18, 0x0A	; 10
     e6e:	30 e0       	ldi	r19, 0x00	; 0
     e70:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <ultoa>
   UART_SEND_string(buffer);
     e74:	ce 01       	movw	r24, r28
     e76:	01 96       	adiw	r24, 0x01	; 1
     e78:	0e 94 f3 06 	call	0xde6	; 0xde6 <UART_SEND_string>


}
     e7c:	68 96       	adiw	r28, 0x18	; 24
     e7e:	0f b6       	in	r0, 0x3f	; 63
     e80:	f8 94       	cli
     e82:	de bf       	out	0x3e, r29	; 62
     e84:	0f be       	out	0x3f, r0	; 63
     e86:	cd bf       	out	0x3d, r28	; 61
     e88:	cf 91       	pop	r28
     e8a:	df 91       	pop	r29
     e8c:	08 95       	ret

00000e8e <UART_SEND_number>:


void UART_SEND_number(int number)
{
     e8e:	df 93       	push	r29
     e90:	cf 93       	push	r28
     e92:	cd b7       	in	r28, 0x3d	; 61
     e94:	de b7       	in	r29, 0x3e	; 62
     e96:	66 97       	sbiw	r28, 0x16	; 22
     e98:	0f b6       	in	r0, 0x3f	; 63
     e9a:	f8 94       	cli
     e9c:	de bf       	out	0x3e, r29	; 62
     e9e:	0f be       	out	0x3f, r0	; 63
     ea0:	cd bf       	out	0x3d, r28	; 61
     ea2:	9e 8b       	std	Y+22, r25	; 0x16
     ea4:	8d 8b       	std	Y+21, r24	; 0x15
   char buffer[20];

   itoa(number,buffer,10);
     ea6:	8d 89       	ldd	r24, Y+21	; 0x15
     ea8:	9e 89       	ldd	r25, Y+22	; 0x16
     eaa:	9e 01       	movw	r18, r28
     eac:	2f 5f       	subi	r18, 0xFF	; 255
     eae:	3f 4f       	sbci	r19, 0xFF	; 255
     eb0:	b9 01       	movw	r22, r18
     eb2:	4a e0       	ldi	r20, 0x0A	; 10
     eb4:	50 e0       	ldi	r21, 0x00	; 0
     eb6:	0e 94 41 0f 	call	0x1e82	; 0x1e82 <itoa>
   UART_SEND_string(buffer);
     eba:	ce 01       	movw	r24, r28
     ebc:	01 96       	adiw	r24, 0x01	; 1
     ebe:	0e 94 f3 06 	call	0xde6	; 0xde6 <UART_SEND_string>


}
     ec2:	66 96       	adiw	r28, 0x16	; 22
     ec4:	0f b6       	in	r0, 0x3f	; 63
     ec6:	f8 94       	cli
     ec8:	de bf       	out	0x3e, r29	; 62
     eca:	0f be       	out	0x3f, r0	; 63
     ecc:	cd bf       	out	0x3d, r28	; 61
     ece:	cf 91       	pop	r28
     ed0:	df 91       	pop	r29
     ed2:	08 95       	ret

00000ed4 <main>:
bool GPS_change_time_zone(GPS_info* GPS_information_orginal,GPS_info* GPS_information_modified );
bool GPS_Calculating_longitude_from_NMEA(GPS_info* GPS_information_orginal,GPS_info* GPS_information_modified );
bool GPS_Calculating_latitude_from_NMEA(GPS_info* GPS_information_orginal,GPS_info* GPS_information_modified );

int main(void)
{
     ed4:	df 93       	push	r29
     ed6:	cf 93       	push	r28
     ed8:	cd b7       	in	r28, 0x3d	; 61
     eda:	de b7       	in	r29, 0x3e	; 62
     edc:	c0 55       	subi	r28, 0x50	; 80
     ede:	d0 40       	sbci	r29, 0x00	; 0
     ee0:	0f b6       	in	r0, 0x3f	; 63
     ee2:	f8 94       	cli
     ee4:	de bf       	out	0x3e, r29	; 62
     ee6:	0f be       	out	0x3f, r0	; 63
     ee8:	cd bf       	out	0x3d, r28	; 61
	char c,i=0;
     eea:	19 82       	std	Y+1, r1	; 0x01
	GPS_info GPS_SKM55_information_original;
	GPS_info GPS_SKM55_information_modified;

	softuart_init();
     eec:	0e 94 b8 0c 	call	0x1970	; 0x1970 <softuart_init>
	softuart_turn_rx_on(); /* redundant - on by default */
     ef0:	0e 94 d7 0c 	call	0x19ae	; 0x19ae <softuart_turn_rx_on>
	sei();
     ef4:	78 94       	sei
	UART_init();
     ef6:	0e 94 b7 06 	call	0xd6e	; 0xd6e <UART_init>
	UART_SEND_string( "hi hello from here\r\n" );  // string "from RAM"
     efa:	80 e6       	ldi	r24, 0x60	; 96
     efc:	90 e0       	ldi	r25, 0x00	; 0
     efe:	0e 94 f3 06 	call	0xde6	; 0xde6 <UART_SEND_string>

	for (;;) {



		if ( softuart_kbhit() ) {
     f02:	0e 94 11 0d 	call	0x1a22	; 0x1a22 <softuart_kbhit>
     f06:	88 23       	and	r24, r24
     f08:	b1 f0       	breq	.+44     	; 0xf36 <main+0x62>
			c = softuart_getchar();
     f0a:	0e 94 ea 0c 	call	0x19d4	; 0x19d4 <softuart_getchar>
     f0e:	8a 83       	std	Y+2, r24	; 0x02
			//			softuart_putchar( '[' );
			RX_GPS_Search_buffer[counter++]=c;
     f10:	20 91 f4 02 	lds	r18, 0x02F4
     f14:	82 2f       	mov	r24, r18
     f16:	90 e0       	ldi	r25, 0x00	; 0
     f18:	fc 01       	movw	r30, r24
     f1a:	ee 59       	subi	r30, 0x9E	; 158
     f1c:	fd 4f       	sbci	r31, 0xFD	; 253
     f1e:	8a 81       	ldd	r24, Y+2	; 0x02
     f20:	80 83       	st	Z, r24
     f22:	82 2f       	mov	r24, r18
     f24:	8f 5f       	subi	r24, 0xFF	; 255
     f26:	80 93 f4 02 	sts	0x02F4, r24

			//			UART_SendChar(c);
			//			softuart_putchar( c );
			//			softuart_putchar( ']' );
			if(counter==100) 	Clear_REC_Buffer();
     f2a:	80 91 f4 02 	lds	r24, 0x02F4
     f2e:	84 36       	cpi	r24, 0x64	; 100
     f30:	11 f4       	brne	.+4      	; 0xf36 <main+0x62>
     f32:	0e 94 0b 08 	call	0x1016	; 0x1016 <Clear_REC_Buffer>
		}




		if(strstr(RX_GPS_Search_buffer,"GPGGA") )
     f36:	82 e6       	ldi	r24, 0x62	; 98
     f38:	92 e0       	ldi	r25, 0x02	; 2
     f3a:	25 e7       	ldi	r18, 0x75	; 117
     f3c:	30 e0       	ldi	r19, 0x00	; 0
     f3e:	b9 01       	movw	r22, r18
     f40:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <strstr>
     f44:	00 97       	sbiw	r24, 0x00	; 0
     f46:	31 f0       	breq	.+12     	; 0xf54 <main+0x80>
		{
			UART_SEND_string( "\r\n start \r\n" );
     f48:	8b e7       	ldi	r24, 0x7B	; 123
     f4a:	90 e0       	ldi	r25, 0x00	; 0
     f4c:	0e 94 f3 06 	call	0xde6	; 0xde6 <UART_SEND_string>
			Clear_REC_Buffer();
     f50:	0e 94 0b 08 	call	0x1016	; 0x1016 <Clear_REC_Buffer>
		}
		if(strstr(RX_GPS_Search_buffer,"GPGSA") )
     f54:	82 e6       	ldi	r24, 0x62	; 98
     f56:	92 e0       	ldi	r25, 0x02	; 2
     f58:	27 e8       	ldi	r18, 0x87	; 135
     f5a:	30 e0       	ldi	r19, 0x00	; 0
     f5c:	b9 01       	movw	r22, r18
     f5e:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <strstr>
     f62:	00 97       	sbiw	r24, 0x00	; 0
     f64:	71 f2       	breq	.-100    	; 0xf02 <main+0x2e>
		{

			GPS_Get_time_longitude_latitude_NMEA_format(&GPS_SKM55_information_original);
     f66:	ce 01       	movw	r24, r28
     f68:	03 96       	adiw	r24, 0x03	; 3
     f6a:	0e 94 1c 08 	call	0x1038	; 0x1038 <GPS_Get_time_longitude_latitude_NMEA_format>


			UART_SEND_string( "\r\n GMT Time zone            :  " );
     f6e:	8d e8       	ldi	r24, 0x8D	; 141
     f70:	90 e0       	ldi	r25, 0x00	; 0
     f72:	0e 94 f3 06 	call	0xde6	; 0xde6 <UART_SEND_string>
			UART_SEND_string(GPS_SKM55_information_original.time);
     f76:	ce 01       	movw	r24, r28
     f78:	03 96       	adiw	r24, 0x03	; 3
     f7a:	0e 94 f3 06 	call	0xde6	; 0xde6 <UART_SEND_string>
			UART_SEND_string( "\r\n longitude in NMEA Format :  " );
     f7e:	8d ea       	ldi	r24, 0xAD	; 173
     f80:	90 e0       	ldi	r25, 0x00	; 0
     f82:	0e 94 f3 06 	call	0xde6	; 0xde6 <UART_SEND_string>
			UART_SEND_string(GPS_SKM55_information_original.longitude);
     f86:	ce 01       	movw	r24, r28
     f88:	03 96       	adiw	r24, 0x03	; 3
     f8a:	09 96       	adiw	r24, 0x09	; 9
     f8c:	0e 94 f3 06 	call	0xde6	; 0xde6 <UART_SEND_string>
			UART_SEND_string( "\r\n latitude in NMEA Format  :  " );
     f90:	8d ec       	ldi	r24, 0xCD	; 205
     f92:	90 e0       	ldi	r25, 0x00	; 0
     f94:	0e 94 f3 06 	call	0xde6	; 0xde6 <UART_SEND_string>
			UART_SEND_string(GPS_SKM55_information_original.latitude);
     f98:	ce 01       	movw	r24, r28
     f9a:	03 96       	adiw	r24, 0x03	; 3
     f9c:	48 96       	adiw	r24, 0x18	; 24
     f9e:	0e 94 f3 06 	call	0xde6	; 0xde6 <UART_SEND_string>


			GPS_change_time_zone(&GPS_SKM55_information_original,&GPS_SKM55_information_modified);
     fa2:	ce 01       	movw	r24, r28
     fa4:	03 96       	adiw	r24, 0x03	; 3
     fa6:	9e 01       	movw	r18, r28
     fa8:	26 5d       	subi	r18, 0xD6	; 214
     faa:	3f 4f       	sbci	r19, 0xFF	; 255
     fac:	b9 01       	movw	r22, r18
     fae:	0e 94 e7 08 	call	0x11ce	; 0x11ce <GPS_change_time_zone>
			GPS_Calculating_longitude_from_NMEA(&GPS_SKM55_information_original,&GPS_SKM55_information_modified);
     fb2:	ce 01       	movw	r24, r28
     fb4:	03 96       	adiw	r24, 0x03	; 3
     fb6:	9e 01       	movw	r18, r28
     fb8:	26 5d       	subi	r18, 0xD6	; 214
     fba:	3f 4f       	sbci	r19, 0xFF	; 255
     fbc:	b9 01       	movw	r22, r18
     fbe:	0e 94 5d 09 	call	0x12ba	; 0x12ba <GPS_Calculating_longitude_from_NMEA>
			GPS_Calculating_latitude_from_NMEA(&GPS_SKM55_information_original,&GPS_SKM55_information_modified);
     fc2:	ce 01       	movw	r24, r28
     fc4:	03 96       	adiw	r24, 0x03	; 3
     fc6:	9e 01       	movw	r18, r28
     fc8:	26 5d       	subi	r18, 0xD6	; 214
     fca:	3f 4f       	sbci	r19, 0xFF	; 255
     fcc:	b9 01       	movw	r22, r18
     fce:	0e 94 82 0a 	call	0x1504	; 0x1504 <GPS_Calculating_latitude_from_NMEA>


			UART_SEND_string( "\r\n\r\n Egypt Time zone          :  " );
     fd2:	8d ee       	ldi	r24, 0xED	; 237
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	0e 94 f3 06 	call	0xde6	; 0xde6 <UART_SEND_string>
			UART_SEND_string(GPS_SKM55_information_modified.time);
     fda:	ce 01       	movw	r24, r28
     fdc:	8a 96       	adiw	r24, 0x2a	; 42
     fde:	0e 94 f3 06 	call	0xde6	; 0xde6 <UART_SEND_string>
			UART_SEND_string( "\r\n longitude in MAPS        :  " );
     fe2:	8f e0       	ldi	r24, 0x0F	; 15
     fe4:	91 e0       	ldi	r25, 0x01	; 1
     fe6:	0e 94 f3 06 	call	0xde6	; 0xde6 <UART_SEND_string>
			UART_SEND_string(GPS_SKM55_information_modified.longitude);
     fea:	ce 01       	movw	r24, r28
     fec:	8a 96       	adiw	r24, 0x2a	; 42
     fee:	09 96       	adiw	r24, 0x09	; 9
     ff0:	0e 94 f3 06 	call	0xde6	; 0xde6 <UART_SEND_string>
			UART_SEND_string( "\r\n latitude in MAPS         :  " );
     ff4:	8f e2       	ldi	r24, 0x2F	; 47
     ff6:	91 e0       	ldi	r25, 0x01	; 1
     ff8:	0e 94 f3 06 	call	0xde6	; 0xde6 <UART_SEND_string>
			UART_SEND_string(GPS_SKM55_information_modified.latitude);
     ffc:	ce 01       	movw	r24, r28
     ffe:	8a 96       	adiw	r24, 0x2a	; 42
    1000:	48 96       	adiw	r24, 0x18	; 24
    1002:	0e 94 f3 06 	call	0xde6	; 0xde6 <UART_SEND_string>


			UART_SEND_string( "\r\n End \r\n ");
    1006:	8f e4       	ldi	r24, 0x4F	; 79
    1008:	91 e0       	ldi	r25, 0x01	; 1
    100a:	0e 94 f3 06 	call	0xde6	; 0xde6 <UART_SEND_string>


			i=0;
    100e:	19 82       	std	Y+1, r1	; 0x01
			Clear_REC_Buffer();
    1010:	0e 94 0b 08 	call	0x1016	; 0x1016 <Clear_REC_Buffer>
    1014:	76 cf       	rjmp	.-276    	; 0xf02 <main+0x2e>

00001016 <Clear_REC_Buffer>:




void Clear_REC_Buffer(void)
{
    1016:	df 93       	push	r29
    1018:	cf 93       	push	r28
    101a:	cd b7       	in	r28, 0x3d	; 61
    101c:	de b7       	in	r29, 0x3e	; 62
	counter=0;
    101e:	10 92 f4 02 	sts	0x02F4, r1
	memset(RX_GPS_Search_buffer,0,DEFAULT_BUFFER_SIZE);
    1022:	82 e6       	ldi	r24, 0x62	; 98
    1024:	92 e0       	ldi	r25, 0x02	; 2
    1026:	60 e0       	ldi	r22, 0x00	; 0
    1028:	70 e0       	ldi	r23, 0x00	; 0
    102a:	44 e6       	ldi	r20, 0x64	; 100
    102c:	50 e0       	ldi	r21, 0x00	; 0
    102e:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <memset>
}
    1032:	cf 91       	pop	r28
    1034:	df 91       	pop	r29
    1036:	08 95       	ret

00001038 <GPS_Get_time_longitude_latitude_NMEA_format>:

bool GPS_Get_time_longitude_latitude_NMEA_format(GPS_info* GPS_information)
{
    1038:	df 93       	push	r29
    103a:	cf 93       	push	r28
    103c:	00 d0       	rcall	.+0      	; 0x103e <GPS_Get_time_longitude_latitude_NMEA_format+0x6>
    103e:	00 d0       	rcall	.+0      	; 0x1040 <GPS_Get_time_longitude_latitude_NMEA_format+0x8>
    1040:	0f 92       	push	r0
    1042:	cd b7       	in	r28, 0x3d	; 61
    1044:	de b7       	in	r29, 0x3e	; 62
    1046:	9d 83       	std	Y+5, r25	; 0x05
    1048:	8c 83       	std	Y+4, r24	; 0x04
	unsigned char RX_GPS_Search_buffer_idx=0,j=0,comma_counts=0;
    104a:	1b 82       	std	Y+3, r1	; 0x03
    104c:	1a 82       	std	Y+2, r1	; 0x02
    104e:	19 82       	std	Y+1, r1	; 0x01

	memset(GPS_information->time,0,9);
    1050:	8c 81       	ldd	r24, Y+4	; 0x04
    1052:	9d 81       	ldd	r25, Y+5	; 0x05
    1054:	60 e0       	ldi	r22, 0x00	; 0
    1056:	70 e0       	ldi	r23, 0x00	; 0
    1058:	49 e0       	ldi	r20, 0x09	; 9
    105a:	50 e0       	ldi	r21, 0x00	; 0
    105c:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <memset>
	memset(GPS_information->longitude,0,15);
    1060:	8c 81       	ldd	r24, Y+4	; 0x04
    1062:	9d 81       	ldd	r25, Y+5	; 0x05
    1064:	09 96       	adiw	r24, 0x09	; 9
    1066:	60 e0       	ldi	r22, 0x00	; 0
    1068:	70 e0       	ldi	r23, 0x00	; 0
    106a:	4f e0       	ldi	r20, 0x0F	; 15
    106c:	50 e0       	ldi	r21, 0x00	; 0
    106e:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <memset>
	memset(GPS_information->latitude,0,15);
    1072:	8c 81       	ldd	r24, Y+4	; 0x04
    1074:	9d 81       	ldd	r25, Y+5	; 0x05
    1076:	48 96       	adiw	r24, 0x18	; 24
    1078:	60 e0       	ldi	r22, 0x00	; 0
    107a:	70 e0       	ldi	r23, 0x00	; 0
    107c:	4f e0       	ldi	r20, 0x0F	; 15
    107e:	50 e0       	ldi	r21, 0x00	; 0
    1080:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <memset>
    1084:	91 c0       	rjmp	.+290    	; 0x11a8 <GPS_Get_time_longitude_latitude_NMEA_format+0x170>

	while(RX_GPS_Search_buffer[RX_GPS_Search_buffer_idx]!='\0')
	{

		if(RX_GPS_Search_buffer[RX_GPS_Search_buffer_idx]==',' )
    1086:	8b 81       	ldd	r24, Y+3	; 0x03
    1088:	88 2f       	mov	r24, r24
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	fc 01       	movw	r30, r24
    108e:	ee 59       	subi	r30, 0x9E	; 158
    1090:	fd 4f       	sbci	r31, 0xFD	; 253
    1092:	80 81       	ld	r24, Z
    1094:	8c 32       	cpi	r24, 0x2C	; 44
    1096:	09 f0       	breq	.+2      	; 0x109a <GPS_Get_time_longitude_latitude_NMEA_format+0x62>
    1098:	84 c0       	rjmp	.+264    	; 0x11a2 <GPS_Get_time_longitude_latitude_NMEA_format+0x16a>
		{
			comma_counts++;
    109a:	89 81       	ldd	r24, Y+1	; 0x01
    109c:	8f 5f       	subi	r24, 0xFF	; 255
    109e:	89 83       	std	Y+1, r24	; 0x01
			if(comma_counts==1)              //Get Time
    10a0:	89 81       	ldd	r24, Y+1	; 0x01
    10a2:	81 30       	cpi	r24, 0x01	; 1
    10a4:	71 f5       	brne	.+92     	; 0x1102 <GPS_Get_time_longitude_latitude_NMEA_format+0xca>
			{
				for(j=0;j<8;j++)
    10a6:	1a 82       	std	Y+2, r1	; 0x02
    10a8:	29 c0       	rjmp	.+82     	; 0x10fc <GPS_Get_time_longitude_latitude_NMEA_format+0xc4>
				{
					GPS_information->time[j]=RX_GPS_Search_buffer[++RX_GPS_Search_buffer_idx];
    10aa:	8a 81       	ldd	r24, Y+2	; 0x02
    10ac:	48 2f       	mov	r20, r24
    10ae:	50 e0       	ldi	r21, 0x00	; 0
    10b0:	8b 81       	ldd	r24, Y+3	; 0x03
    10b2:	8f 5f       	subi	r24, 0xFF	; 255
    10b4:	8b 83       	std	Y+3, r24	; 0x03
    10b6:	8b 81       	ldd	r24, Y+3	; 0x03
    10b8:	88 2f       	mov	r24, r24
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	fc 01       	movw	r30, r24
    10be:	ee 59       	subi	r30, 0x9E	; 158
    10c0:	fd 4f       	sbci	r31, 0xFD	; 253
    10c2:	20 81       	ld	r18, Z
    10c4:	8c 81       	ldd	r24, Y+4	; 0x04
    10c6:	9d 81       	ldd	r25, Y+5	; 0x05
    10c8:	fc 01       	movw	r30, r24
    10ca:	e4 0f       	add	r30, r20
    10cc:	f5 1f       	adc	r31, r21
    10ce:	20 83       	st	Z, r18
					if((j==1)||(j==4))
    10d0:	8a 81       	ldd	r24, Y+2	; 0x02
    10d2:	81 30       	cpi	r24, 0x01	; 1
    10d4:	19 f0       	breq	.+6      	; 0x10dc <GPS_Get_time_longitude_latitude_NMEA_format+0xa4>
    10d6:	8a 81       	ldd	r24, Y+2	; 0x02
    10d8:	84 30       	cpi	r24, 0x04	; 4
    10da:	69 f4       	brne	.+26     	; 0x10f6 <GPS_Get_time_longitude_latitude_NMEA_format+0xbe>
					{
						j++;
    10dc:	8a 81       	ldd	r24, Y+2	; 0x02
    10de:	8f 5f       	subi	r24, 0xFF	; 255
    10e0:	8a 83       	std	Y+2, r24	; 0x02
						GPS_information->time[j]=':';
    10e2:	8a 81       	ldd	r24, Y+2	; 0x02
    10e4:	28 2f       	mov	r18, r24
    10e6:	30 e0       	ldi	r19, 0x00	; 0
    10e8:	8c 81       	ldd	r24, Y+4	; 0x04
    10ea:	9d 81       	ldd	r25, Y+5	; 0x05
    10ec:	fc 01       	movw	r30, r24
    10ee:	e2 0f       	add	r30, r18
    10f0:	f3 1f       	adc	r31, r19
    10f2:	8a e3       	ldi	r24, 0x3A	; 58
    10f4:	80 83       	st	Z, r24
		if(RX_GPS_Search_buffer[RX_GPS_Search_buffer_idx]==',' )
		{
			comma_counts++;
			if(comma_counts==1)              //Get Time
			{
				for(j=0;j<8;j++)
    10f6:	8a 81       	ldd	r24, Y+2	; 0x02
    10f8:	8f 5f       	subi	r24, 0xFF	; 255
    10fa:	8a 83       	std	Y+2, r24	; 0x02
    10fc:	8a 81       	ldd	r24, Y+2	; 0x02
    10fe:	88 30       	cpi	r24, 0x08	; 8
    1100:	a0 f2       	brcs	.-88     	; 0x10aa <GPS_Get_time_longitude_latitude_NMEA_format+0x72>
						GPS_information->time[j]=':';
					}

				}
			}
			if(comma_counts==2)              //Get Longitude
    1102:	89 81       	ldd	r24, Y+1	; 0x01
    1104:	82 30       	cpi	r24, 0x02	; 2
    1106:	29 f5       	brne	.+74     	; 0x1152 <GPS_Get_time_longitude_latitude_NMEA_format+0x11a>
			{
				for(j=0;j<14;j++)
    1108:	1a 82       	std	Y+2, r1	; 0x02
    110a:	20 c0       	rjmp	.+64     	; 0x114c <GPS_Get_time_longitude_latitude_NMEA_format+0x114>
				{
					RX_GPS_Search_buffer_idx++;
    110c:	8b 81       	ldd	r24, Y+3	; 0x03
    110e:	8f 5f       	subi	r24, 0xFF	; 255
    1110:	8b 83       	std	Y+3, r24	; 0x03
					if(RX_GPS_Search_buffer[RX_GPS_Search_buffer_idx]==',') break;
    1112:	8b 81       	ldd	r24, Y+3	; 0x03
    1114:	88 2f       	mov	r24, r24
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	fc 01       	movw	r30, r24
    111a:	ee 59       	subi	r30, 0x9E	; 158
    111c:	fd 4f       	sbci	r31, 0xFD	; 253
    111e:	80 81       	ld	r24, Z
    1120:	8c 32       	cpi	r24, 0x2C	; 44
    1122:	b9 f0       	breq	.+46     	; 0x1152 <GPS_Get_time_longitude_latitude_NMEA_format+0x11a>
					GPS_information->longitude[j]=RX_GPS_Search_buffer[RX_GPS_Search_buffer_idx];
    1124:	8a 81       	ldd	r24, Y+2	; 0x02
    1126:	28 2f       	mov	r18, r24
    1128:	30 e0       	ldi	r19, 0x00	; 0
    112a:	8b 81       	ldd	r24, Y+3	; 0x03
    112c:	88 2f       	mov	r24, r24
    112e:	90 e0       	ldi	r25, 0x00	; 0
    1130:	fc 01       	movw	r30, r24
    1132:	ee 59       	subi	r30, 0x9E	; 158
    1134:	fd 4f       	sbci	r31, 0xFD	; 253
    1136:	40 81       	ld	r20, Z
    1138:	8c 81       	ldd	r24, Y+4	; 0x04
    113a:	9d 81       	ldd	r25, Y+5	; 0x05
    113c:	82 0f       	add	r24, r18
    113e:	93 1f       	adc	r25, r19
    1140:	fc 01       	movw	r30, r24
    1142:	39 96       	adiw	r30, 0x09	; 9
    1144:	40 83       	st	Z, r20

				}
			}
			if(comma_counts==2)              //Get Longitude
			{
				for(j=0;j<14;j++)
    1146:	8a 81       	ldd	r24, Y+2	; 0x02
    1148:	8f 5f       	subi	r24, 0xFF	; 255
    114a:	8a 83       	std	Y+2, r24	; 0x02
    114c:	8a 81       	ldd	r24, Y+2	; 0x02
    114e:	8e 30       	cpi	r24, 0x0E	; 14
    1150:	e8 f2       	brcs	.-70     	; 0x110c <GPS_Get_time_longitude_latitude_NMEA_format+0xd4>
					RX_GPS_Search_buffer_idx++;
					if(RX_GPS_Search_buffer[RX_GPS_Search_buffer_idx]==',') break;
					GPS_information->longitude[j]=RX_GPS_Search_buffer[RX_GPS_Search_buffer_idx];
				}
			}
			if(comma_counts==3)              //Get latitude
    1152:	89 81       	ldd	r24, Y+1	; 0x01
    1154:	83 30       	cpi	r24, 0x03	; 3
    1156:	29 f5       	brne	.+74     	; 0x11a2 <GPS_Get_time_longitude_latitude_NMEA_format+0x16a>
			{
				for(j=0;j<14;j++)
    1158:	1a 82       	std	Y+2, r1	; 0x02
    115a:	20 c0       	rjmp	.+64     	; 0x119c <GPS_Get_time_longitude_latitude_NMEA_format+0x164>
				{
					RX_GPS_Search_buffer_idx++;
    115c:	8b 81       	ldd	r24, Y+3	; 0x03
    115e:	8f 5f       	subi	r24, 0xFF	; 255
    1160:	8b 83       	std	Y+3, r24	; 0x03
					if(RX_GPS_Search_buffer[RX_GPS_Search_buffer_idx]==',') break;
    1162:	8b 81       	ldd	r24, Y+3	; 0x03
    1164:	88 2f       	mov	r24, r24
    1166:	90 e0       	ldi	r25, 0x00	; 0
    1168:	fc 01       	movw	r30, r24
    116a:	ee 59       	subi	r30, 0x9E	; 158
    116c:	fd 4f       	sbci	r31, 0xFD	; 253
    116e:	80 81       	ld	r24, Z
    1170:	8c 32       	cpi	r24, 0x2C	; 44
    1172:	b9 f0       	breq	.+46     	; 0x11a2 <GPS_Get_time_longitude_latitude_NMEA_format+0x16a>
					GPS_information->latitude[j]=RX_GPS_Search_buffer[RX_GPS_Search_buffer_idx];
    1174:	8a 81       	ldd	r24, Y+2	; 0x02
    1176:	28 2f       	mov	r18, r24
    1178:	30 e0       	ldi	r19, 0x00	; 0
    117a:	8b 81       	ldd	r24, Y+3	; 0x03
    117c:	88 2f       	mov	r24, r24
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	fc 01       	movw	r30, r24
    1182:	ee 59       	subi	r30, 0x9E	; 158
    1184:	fd 4f       	sbci	r31, 0xFD	; 253
    1186:	40 81       	ld	r20, Z
    1188:	8c 81       	ldd	r24, Y+4	; 0x04
    118a:	9d 81       	ldd	r25, Y+5	; 0x05
    118c:	82 0f       	add	r24, r18
    118e:	93 1f       	adc	r25, r19
    1190:	fc 01       	movw	r30, r24
    1192:	78 96       	adiw	r30, 0x18	; 24
    1194:	40 83       	st	Z, r20
					GPS_information->longitude[j]=RX_GPS_Search_buffer[RX_GPS_Search_buffer_idx];
				}
			}
			if(comma_counts==3)              //Get latitude
			{
				for(j=0;j<14;j++)
    1196:	8a 81       	ldd	r24, Y+2	; 0x02
    1198:	8f 5f       	subi	r24, 0xFF	; 255
    119a:	8a 83       	std	Y+2, r24	; 0x02
    119c:	8a 81       	ldd	r24, Y+2	; 0x02
    119e:	8e 30       	cpi	r24, 0x0E	; 14
    11a0:	e8 f2       	brcs	.-70     	; 0x115c <GPS_Get_time_longitude_latitude_NMEA_format+0x124>
					GPS_information->latitude[j]=RX_GPS_Search_buffer[RX_GPS_Search_buffer_idx];
				}
			}

		}
		RX_GPS_Search_buffer_idx++;
    11a2:	8b 81       	ldd	r24, Y+3	; 0x03
    11a4:	8f 5f       	subi	r24, 0xFF	; 255
    11a6:	8b 83       	std	Y+3, r24	; 0x03

	memset(GPS_information->time,0,9);
	memset(GPS_information->longitude,0,15);
	memset(GPS_information->latitude,0,15);

	while(RX_GPS_Search_buffer[RX_GPS_Search_buffer_idx]!='\0')
    11a8:	8b 81       	ldd	r24, Y+3	; 0x03
    11aa:	88 2f       	mov	r24, r24
    11ac:	90 e0       	ldi	r25, 0x00	; 0
    11ae:	fc 01       	movw	r30, r24
    11b0:	ee 59       	subi	r30, 0x9E	; 158
    11b2:	fd 4f       	sbci	r31, 0xFD	; 253
    11b4:	80 81       	ld	r24, Z
    11b6:	88 23       	and	r24, r24
    11b8:	09 f0       	breq	.+2      	; 0x11bc <GPS_Get_time_longitude_latitude_NMEA_format+0x184>
    11ba:	65 cf       	rjmp	.-310    	; 0x1086 <GPS_Get_time_longitude_latitude_NMEA_format+0x4e>
		RX_GPS_Search_buffer_idx++;
	}



	return 0;
    11bc:	80 e0       	ldi	r24, 0x00	; 0
}
    11be:	0f 90       	pop	r0
    11c0:	0f 90       	pop	r0
    11c2:	0f 90       	pop	r0
    11c4:	0f 90       	pop	r0
    11c6:	0f 90       	pop	r0
    11c8:	cf 91       	pop	r28
    11ca:	df 91       	pop	r29
    11cc:	08 95       	ret

000011ce <GPS_change_time_zone>:




bool GPS_change_time_zone(GPS_info* GPS_information_orginal,GPS_info* GPS_information_modified )
{
    11ce:	df 93       	push	r29
    11d0:	cf 93       	push	r28
    11d2:	00 d0       	rcall	.+0      	; 0x11d4 <GPS_change_time_zone+0x6>
    11d4:	00 d0       	rcall	.+0      	; 0x11d6 <GPS_change_time_zone+0x8>
    11d6:	00 d0       	rcall	.+0      	; 0x11d8 <GPS_change_time_zone+0xa>
    11d8:	cd b7       	in	r28, 0x3d	; 61
    11da:	de b7       	in	r29, 0x3e	; 62
    11dc:	9c 83       	std	Y+4, r25	; 0x04
    11de:	8b 83       	std	Y+3, r24	; 0x03
    11e0:	7e 83       	std	Y+6, r23	; 0x06
    11e2:	6d 83       	std	Y+5, r22	; 0x05
	unsigned char j=0,hour;
    11e4:	1a 82       	std	Y+2, r1	; 0x02

	memset(GPS_information_modified->time,0,9);
    11e6:	8d 81       	ldd	r24, Y+5	; 0x05
    11e8:	9e 81       	ldd	r25, Y+6	; 0x06
    11ea:	60 e0       	ldi	r22, 0x00	; 0
    11ec:	70 e0       	ldi	r23, 0x00	; 0
    11ee:	49 e0       	ldi	r20, 0x09	; 9
    11f0:	50 e0       	ldi	r21, 0x00	; 0
    11f2:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <memset>



	hour=GPS_information_orginal->time[0]-0x30;
    11f6:	eb 81       	ldd	r30, Y+3	; 0x03
    11f8:	fc 81       	ldd	r31, Y+4	; 0x04
    11fa:	80 81       	ld	r24, Z
    11fc:	80 53       	subi	r24, 0x30	; 48
    11fe:	89 83       	std	Y+1, r24	; 0x01
	hour*=10;
    1200:	89 81       	ldd	r24, Y+1	; 0x01
    1202:	88 2f       	mov	r24, r24
    1204:	90 e0       	ldi	r25, 0x00	; 0
    1206:	9c 01       	movw	r18, r24
    1208:	22 0f       	add	r18, r18
    120a:	33 1f       	adc	r19, r19
    120c:	c9 01       	movw	r24, r18
    120e:	88 0f       	add	r24, r24
    1210:	99 1f       	adc	r25, r25
    1212:	88 0f       	add	r24, r24
    1214:	99 1f       	adc	r25, r25
    1216:	82 0f       	add	r24, r18
    1218:	93 1f       	adc	r25, r19
    121a:	89 83       	std	Y+1, r24	; 0x01
	hour+=GPS_information_orginal->time[1]-0x30;
    121c:	eb 81       	ldd	r30, Y+3	; 0x03
    121e:	fc 81       	ldd	r31, Y+4	; 0x04
    1220:	91 81       	ldd	r25, Z+1	; 0x01
    1222:	89 81       	ldd	r24, Y+1	; 0x01
    1224:	89 0f       	add	r24, r25
    1226:	80 53       	subi	r24, 0x30	; 48
    1228:	89 83       	std	Y+1, r24	; 0x01

	if(hour==22)       hour=0;
    122a:	89 81       	ldd	r24, Y+1	; 0x01
    122c:	86 31       	cpi	r24, 0x16	; 22
    122e:	11 f4       	brne	.+4      	; 0x1234 <GPS_change_time_zone+0x66>
    1230:	19 82       	std	Y+1, r1	; 0x01
    1232:	09 c0       	rjmp	.+18     	; 0x1246 <GPS_change_time_zone+0x78>
	else if(hour==23)  hour=1;
    1234:	89 81       	ldd	r24, Y+1	; 0x01
    1236:	87 31       	cpi	r24, 0x17	; 23
    1238:	19 f4       	brne	.+6      	; 0x1240 <GPS_change_time_zone+0x72>
    123a:	81 e0       	ldi	r24, 0x01	; 1
    123c:	89 83       	std	Y+1, r24	; 0x01
    123e:	03 c0       	rjmp	.+6      	; 0x1246 <GPS_change_time_zone+0x78>
	else	           hour+=2;
    1240:	89 81       	ldd	r24, Y+1	; 0x01
    1242:	8e 5f       	subi	r24, 0xFE	; 254
    1244:	89 83       	std	Y+1, r24	; 0x01

	GPS_information_modified->time[0]=(hour/10)+0x30;
    1246:	89 81       	ldd	r24, Y+1	; 0x01
    1248:	9a e0       	ldi	r25, 0x0A	; 10
    124a:	69 2f       	mov	r22, r25
    124c:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <__udivmodqi4>
    1250:	80 5d       	subi	r24, 0xD0	; 208
    1252:	ed 81       	ldd	r30, Y+5	; 0x05
    1254:	fe 81       	ldd	r31, Y+6	; 0x06
    1256:	80 83       	st	Z, r24
	GPS_information_modified->time[1]=(hour%10)+0x30;
    1258:	89 81       	ldd	r24, Y+1	; 0x01
    125a:	9a e0       	ldi	r25, 0x0A	; 10
    125c:	69 2f       	mov	r22, r25
    125e:	0e 94 a6 0d 	call	0x1b4c	; 0x1b4c <__udivmodqi4>
    1262:	89 2f       	mov	r24, r25
    1264:	80 5d       	subi	r24, 0xD0	; 208
    1266:	ed 81       	ldd	r30, Y+5	; 0x05
    1268:	fe 81       	ldd	r31, Y+6	; 0x06
    126a:	81 83       	std	Z+1, r24	; 0x01

	for(j=2;j<8;j++)
    126c:	82 e0       	ldi	r24, 0x02	; 2
    126e:	8a 83       	std	Y+2, r24	; 0x02
    1270:	17 c0       	rjmp	.+46     	; 0x12a0 <GPS_change_time_zone+0xd2>
	{
		GPS_information_modified->time[j]=hour=GPS_information_orginal->time[j];
    1272:	8a 81       	ldd	r24, Y+2	; 0x02
    1274:	48 2f       	mov	r20, r24
    1276:	50 e0       	ldi	r21, 0x00	; 0
    1278:	8a 81       	ldd	r24, Y+2	; 0x02
    127a:	28 2f       	mov	r18, r24
    127c:	30 e0       	ldi	r19, 0x00	; 0
    127e:	8b 81       	ldd	r24, Y+3	; 0x03
    1280:	9c 81       	ldd	r25, Y+4	; 0x04
    1282:	fc 01       	movw	r30, r24
    1284:	e2 0f       	add	r30, r18
    1286:	f3 1f       	adc	r31, r19
    1288:	80 81       	ld	r24, Z
    128a:	89 83       	std	Y+1, r24	; 0x01
    128c:	8d 81       	ldd	r24, Y+5	; 0x05
    128e:	9e 81       	ldd	r25, Y+6	; 0x06
    1290:	fc 01       	movw	r30, r24
    1292:	e4 0f       	add	r30, r20
    1294:	f5 1f       	adc	r31, r21
    1296:	89 81       	ldd	r24, Y+1	; 0x01
    1298:	80 83       	st	Z, r24
	else	           hour+=2;

	GPS_information_modified->time[0]=(hour/10)+0x30;
	GPS_information_modified->time[1]=(hour%10)+0x30;

	for(j=2;j<8;j++)
    129a:	8a 81       	ldd	r24, Y+2	; 0x02
    129c:	8f 5f       	subi	r24, 0xFF	; 255
    129e:	8a 83       	std	Y+2, r24	; 0x02
    12a0:	8a 81       	ldd	r24, Y+2	; 0x02
    12a2:	88 30       	cpi	r24, 0x08	; 8
    12a4:	30 f3       	brcs	.-52     	; 0x1272 <GPS_change_time_zone+0xa4>
		GPS_information_modified->time[j]=hour=GPS_information_orginal->time[j];

	}


	return 1;
    12a6:	81 e0       	ldi	r24, 0x01	; 1
}
    12a8:	26 96       	adiw	r28, 0x06	; 6
    12aa:	0f b6       	in	r0, 0x3f	; 63
    12ac:	f8 94       	cli
    12ae:	de bf       	out	0x3e, r29	; 62
    12b0:	0f be       	out	0x3f, r0	; 63
    12b2:	cd bf       	out	0x3d, r28	; 61
    12b4:	cf 91       	pop	r28
    12b6:	df 91       	pop	r29
    12b8:	08 95       	ret

000012ba <GPS_Calculating_longitude_from_NMEA>:


bool GPS_Calculating_longitude_from_NMEA(GPS_info* GPS_information_orginal,GPS_info* GPS_information_modified )
{
    12ba:	df 93       	push	r29
    12bc:	cf 93       	push	r28
    12be:	cd b7       	in	r28, 0x3d	; 61
    12c0:	de b7       	in	r29, 0x3e	; 62
    12c2:	aa 97       	sbiw	r28, 0x2a	; 42
    12c4:	0f b6       	in	r0, 0x3f	; 63
    12c6:	f8 94       	cli
    12c8:	de bf       	out	0x3e, r29	; 62
    12ca:	0f be       	out	0x3f, r0	; 63
    12cc:	cd bf       	out	0x3d, r28	; 61
    12ce:	98 a7       	std	Y+40, r25	; 0x28
    12d0:	8f a3       	std	Y+39, r24	; 0x27
    12d2:	7a a7       	std	Y+42, r23	; 0x2a
    12d4:	69 a7       	std	Y+41, r22	; 0x29

	unsigned char i=0,j=0,Variable2=0;
    12d6:	1b 86       	std	Y+11, r1	; 0x0b
    12d8:	1a 86       	std	Y+10, r1	; 0x0a
    12da:	19 86       	std	Y+9, r1	; 0x09
	char *ptr;
	char    longitude_array[10]={0},longitude_buffer[15]={0};
    12dc:	8a e0       	ldi	r24, 0x0A	; 10
    12de:	fe 01       	movw	r30, r28
    12e0:	3e 96       	adiw	r30, 0x0e	; 14
    12e2:	df 01       	movw	r26, r30
    12e4:	98 2f       	mov	r25, r24
    12e6:	1d 92       	st	X+, r1
    12e8:	9a 95       	dec	r25
    12ea:	e9 f7       	brne	.-6      	; 0x12e6 <GPS_Calculating_longitude_from_NMEA+0x2c>
    12ec:	8f e0       	ldi	r24, 0x0F	; 15
    12ee:	fe 01       	movw	r30, r28
    12f0:	78 96       	adiw	r30, 0x18	; 24
    12f2:	df 01       	movw	r26, r30
    12f4:	98 2f       	mov	r25, r24
    12f6:	1d 92       	st	X+, r1
    12f8:	9a 95       	dec	r25
    12fa:	e9 f7       	brne	.-6      	; 0x12f6 <GPS_Calculating_longitude_from_NMEA+0x3c>
	unsigned long variable1=0;
    12fc:	1d 82       	std	Y+5, r1	; 0x05
    12fe:	1e 82       	std	Y+6, r1	; 0x06
    1300:	1f 82       	std	Y+7, r1	; 0x07
    1302:	18 86       	std	Y+8, r1	; 0x08
	double variable3=0;
    1304:	80 e0       	ldi	r24, 0x00	; 0
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	a0 e0       	ldi	r26, 0x00	; 0
    130a:	b0 e0       	ldi	r27, 0x00	; 0
    130c:	89 83       	std	Y+1, r24	; 0x01
    130e:	9a 83       	std	Y+2, r25	; 0x02
    1310:	ab 83       	std	Y+3, r26	; 0x03
    1312:	bc 83       	std	Y+4, r27	; 0x04

	memset(GPS_information_modified->longitude,0,15);
    1314:	89 a5       	ldd	r24, Y+41	; 0x29
    1316:	9a a5       	ldd	r25, Y+42	; 0x2a
    1318:	09 96       	adiw	r24, 0x09	; 9
    131a:	60 e0       	ldi	r22, 0x00	; 0
    131c:	70 e0       	ldi	r23, 0x00	; 0
    131e:	4f e0       	ldi	r20, 0x0F	; 15
    1320:	50 e0       	ldi	r21, 0x00	; 0
    1322:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <memset>


	for(i=0,j=0;GPS_information_orginal->longitude[i]!='\0';i++,j++)
    1326:	1b 86       	std	Y+11, r1	; 0x0b
    1328:	1a 86       	std	Y+10, r1	; 0x0a
    132a:	28 c0       	rjmp	.+80     	; 0x137c <GPS_Calculating_longitude_from_NMEA+0xc2>
	{
		if(GPS_information_orginal->longitude[i]=='.') i++;
    132c:	8b 85       	ldd	r24, Y+11	; 0x0b
    132e:	28 2f       	mov	r18, r24
    1330:	30 e0       	ldi	r19, 0x00	; 0
    1332:	8f a1       	ldd	r24, Y+39	; 0x27
    1334:	98 a5       	ldd	r25, Y+40	; 0x28
    1336:	82 0f       	add	r24, r18
    1338:	93 1f       	adc	r25, r19
    133a:	fc 01       	movw	r30, r24
    133c:	39 96       	adiw	r30, 0x09	; 9
    133e:	80 81       	ld	r24, Z
    1340:	8e 32       	cpi	r24, 0x2E	; 46
    1342:	19 f4       	brne	.+6      	; 0x134a <GPS_Calculating_longitude_from_NMEA+0x90>
    1344:	8b 85       	ldd	r24, Y+11	; 0x0b
    1346:	8f 5f       	subi	r24, 0xFF	; 255
    1348:	8b 87       	std	Y+11, r24	; 0x0b
		longitude_array[j]=GPS_information_orginal->longitude[i];
    134a:	8a 85       	ldd	r24, Y+10	; 0x0a
    134c:	48 2f       	mov	r20, r24
    134e:	50 e0       	ldi	r21, 0x00	; 0
    1350:	8b 85       	ldd	r24, Y+11	; 0x0b
    1352:	28 2f       	mov	r18, r24
    1354:	30 e0       	ldi	r19, 0x00	; 0
    1356:	8f a1       	ldd	r24, Y+39	; 0x27
    1358:	98 a5       	ldd	r25, Y+40	; 0x28
    135a:	82 0f       	add	r24, r18
    135c:	93 1f       	adc	r25, r19
    135e:	fc 01       	movw	r30, r24
    1360:	39 96       	adiw	r30, 0x09	; 9
    1362:	20 81       	ld	r18, Z
    1364:	ce 01       	movw	r24, r28
    1366:	0e 96       	adiw	r24, 0x0e	; 14
    1368:	fc 01       	movw	r30, r24
    136a:	e4 0f       	add	r30, r20
    136c:	f5 1f       	adc	r31, r21
    136e:	20 83       	st	Z, r18
	double variable3=0;

	memset(GPS_information_modified->longitude,0,15);


	for(i=0,j=0;GPS_information_orginal->longitude[i]!='\0';i++,j++)
    1370:	8b 85       	ldd	r24, Y+11	; 0x0b
    1372:	8f 5f       	subi	r24, 0xFF	; 255
    1374:	8b 87       	std	Y+11, r24	; 0x0b
    1376:	8a 85       	ldd	r24, Y+10	; 0x0a
    1378:	8f 5f       	subi	r24, 0xFF	; 255
    137a:	8a 87       	std	Y+10, r24	; 0x0a
    137c:	8b 85       	ldd	r24, Y+11	; 0x0b
    137e:	28 2f       	mov	r18, r24
    1380:	30 e0       	ldi	r19, 0x00	; 0
    1382:	8f a1       	ldd	r24, Y+39	; 0x27
    1384:	98 a5       	ldd	r25, Y+40	; 0x28
    1386:	82 0f       	add	r24, r18
    1388:	93 1f       	adc	r25, r19
    138a:	fc 01       	movw	r30, r24
    138c:	39 96       	adiw	r30, 0x09	; 9
    138e:	80 81       	ld	r24, Z
    1390:	88 23       	and	r24, r24
    1392:	61 f6       	brne	.-104    	; 0x132c <GPS_Calculating_longitude_from_NMEA+0x72>
		if(GPS_information_orginal->longitude[i]=='.') i++;
		longitude_array[j]=GPS_information_orginal->longitude[i];

	}

	Variable2=longitude_array[0]-0x30;
    1394:	8e 85       	ldd	r24, Y+14	; 0x0e
    1396:	80 53       	subi	r24, 0x30	; 48
    1398:	89 87       	std	Y+9, r24	; 0x09
	Variable2*=10;
    139a:	89 85       	ldd	r24, Y+9	; 0x09
    139c:	88 2f       	mov	r24, r24
    139e:	90 e0       	ldi	r25, 0x00	; 0
    13a0:	9c 01       	movw	r18, r24
    13a2:	22 0f       	add	r18, r18
    13a4:	33 1f       	adc	r19, r19
    13a6:	c9 01       	movw	r24, r18
    13a8:	88 0f       	add	r24, r24
    13aa:	99 1f       	adc	r25, r25
    13ac:	88 0f       	add	r24, r24
    13ae:	99 1f       	adc	r25, r25
    13b0:	82 0f       	add	r24, r18
    13b2:	93 1f       	adc	r25, r19
    13b4:	89 87       	std	Y+9, r24	; 0x09
	Variable2+=longitude_array[1]-0x30;
    13b6:	9f 85       	ldd	r25, Y+15	; 0x0f
    13b8:	89 85       	ldd	r24, Y+9	; 0x09
    13ba:	89 0f       	add	r24, r25
    13bc:	80 53       	subi	r24, 0x30	; 48
    13be:	89 87       	std	Y+9, r24	; 0x09


	variable1 = strtol(longitude_array+2, &ptr, 10);
    13c0:	ce 01       	movw	r24, r28
    13c2:	0e 96       	adiw	r24, 0x0e	; 14
    13c4:	02 96       	adiw	r24, 0x02	; 2
    13c6:	9e 01       	movw	r18, r28
    13c8:	24 5f       	subi	r18, 0xF4	; 244
    13ca:	3f 4f       	sbci	r19, 0xFF	; 255
    13cc:	b9 01       	movw	r22, r18
    13ce:	4a e0       	ldi	r20, 0x0A	; 10
    13d0:	50 e0       	ldi	r21, 0x00	; 0
    13d2:	0e 94 e9 0d 	call	0x1bd2	; 0x1bd2 <strtol>
    13d6:	dc 01       	movw	r26, r24
    13d8:	cb 01       	movw	r24, r22
    13da:	8d 83       	std	Y+5, r24	; 0x05
    13dc:	9e 83       	std	Y+6, r25	; 0x06
    13de:	af 83       	std	Y+7, r26	; 0x07
    13e0:	b8 87       	std	Y+8, r27	; 0x08

	variable3= (double)variable1/(double)600000;
    13e2:	6d 81       	ldd	r22, Y+5	; 0x05
    13e4:	7e 81       	ldd	r23, Y+6	; 0x06
    13e6:	8f 81       	ldd	r24, Y+7	; 0x07
    13e8:	98 85       	ldd	r25, Y+8	; 0x08
    13ea:	0e 94 49 04 	call	0x892	; 0x892 <__floatunsisf>
    13ee:	dc 01       	movw	r26, r24
    13f0:	cb 01       	movw	r24, r22
    13f2:	bc 01       	movw	r22, r24
    13f4:	cd 01       	movw	r24, r26
    13f6:	20 e0       	ldi	r18, 0x00	; 0
    13f8:	3c e7       	ldi	r19, 0x7C	; 124
    13fa:	42 e1       	ldi	r20, 0x12	; 18
    13fc:	59 e4       	ldi	r21, 0x49	; 73
    13fe:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    1402:	dc 01       	movw	r26, r24
    1404:	cb 01       	movw	r24, r22
    1406:	89 83       	std	Y+1, r24	; 0x01
    1408:	9a 83       	std	Y+2, r25	; 0x02
    140a:	ab 83       	std	Y+3, r26	; 0x03
    140c:	bc 83       	std	Y+4, r27	; 0x04
	variable3+=(double)Variable2;
    140e:	89 85       	ldd	r24, Y+9	; 0x09
    1410:	88 2f       	mov	r24, r24
    1412:	90 e0       	ldi	r25, 0x00	; 0
    1414:	a0 e0       	ldi	r26, 0x00	; 0
    1416:	b0 e0       	ldi	r27, 0x00	; 0
    1418:	bc 01       	movw	r22, r24
    141a:	cd 01       	movw	r24, r26
    141c:	0e 94 49 04 	call	0x892	; 0x892 <__floatunsisf>
    1420:	9b 01       	movw	r18, r22
    1422:	ac 01       	movw	r20, r24
    1424:	69 81       	ldd	r22, Y+1	; 0x01
    1426:	7a 81       	ldd	r23, Y+2	; 0x02
    1428:	8b 81       	ldd	r24, Y+3	; 0x03
    142a:	9c 81       	ldd	r25, Y+4	; 0x04
    142c:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <__addsf3>
    1430:	dc 01       	movw	r26, r24
    1432:	cb 01       	movw	r24, r22
    1434:	89 83       	std	Y+1, r24	; 0x01
    1436:	9a 83       	std	Y+2, r25	; 0x02
    1438:	ab 83       	std	Y+3, r26	; 0x03
    143a:	bc 83       	std	Y+4, r27	; 0x04

	variable3*=1000000;
    143c:	69 81       	ldd	r22, Y+1	; 0x01
    143e:	7a 81       	ldd	r23, Y+2	; 0x02
    1440:	8b 81       	ldd	r24, Y+3	; 0x03
    1442:	9c 81       	ldd	r25, Y+4	; 0x04
    1444:	20 e0       	ldi	r18, 0x00	; 0
    1446:	34 e2       	ldi	r19, 0x24	; 36
    1448:	44 e7       	ldi	r20, 0x74	; 116
    144a:	59 e4       	ldi	r21, 0x49	; 73
    144c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    1450:	dc 01       	movw	r26, r24
    1452:	cb 01       	movw	r24, r22
    1454:	89 83       	std	Y+1, r24	; 0x01
    1456:	9a 83       	std	Y+2, r25	; 0x02
    1458:	ab 83       	std	Y+3, r26	; 0x03
    145a:	bc 83       	std	Y+4, r27	; 0x04

	ultoa((unsigned long)variable3,longitude_buffer,10);
    145c:	69 81       	ldd	r22, Y+1	; 0x01
    145e:	7a 81       	ldd	r23, Y+2	; 0x02
    1460:	8b 81       	ldd	r24, Y+3	; 0x03
    1462:	9c 81       	ldd	r25, Y+4	; 0x04
    1464:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    1468:	dc 01       	movw	r26, r24
    146a:	cb 01       	movw	r24, r22
    146c:	9e 01       	movw	r18, r28
    146e:	28 5e       	subi	r18, 0xE8	; 232
    1470:	3f 4f       	sbci	r19, 0xFF	; 255
    1472:	bc 01       	movw	r22, r24
    1474:	cd 01       	movw	r24, r26
    1476:	a9 01       	movw	r20, r18
    1478:	2a e0       	ldi	r18, 0x0A	; 10
    147a:	30 e0       	ldi	r19, 0x00	; 0
    147c:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <ultoa>



	for(j=0,i=0;longitude_buffer[i]!='\0';j++,i++)
    1480:	1a 86       	std	Y+10, r1	; 0x0a
    1482:	1b 86       	std	Y+11, r1	; 0x0b
    1484:	2a c0       	rjmp	.+84     	; 0x14da <GPS_Calculating_longitude_from_NMEA+0x220>
	{
		GPS_information_modified->longitude[j]=longitude_buffer[i];
    1486:	8a 85       	ldd	r24, Y+10	; 0x0a
    1488:	48 2f       	mov	r20, r24
    148a:	50 e0       	ldi	r21, 0x00	; 0
    148c:	8b 85       	ldd	r24, Y+11	; 0x0b
    148e:	28 2f       	mov	r18, r24
    1490:	30 e0       	ldi	r19, 0x00	; 0
    1492:	ce 01       	movw	r24, r28
    1494:	48 96       	adiw	r24, 0x18	; 24
    1496:	fc 01       	movw	r30, r24
    1498:	e2 0f       	add	r30, r18
    149a:	f3 1f       	adc	r31, r19
    149c:	20 81       	ld	r18, Z
    149e:	89 a5       	ldd	r24, Y+41	; 0x29
    14a0:	9a a5       	ldd	r25, Y+42	; 0x2a
    14a2:	84 0f       	add	r24, r20
    14a4:	95 1f       	adc	r25, r21
    14a6:	fc 01       	movw	r30, r24
    14a8:	39 96       	adiw	r30, 0x09	; 9
    14aa:	20 83       	st	Z, r18
		if((j==1))
    14ac:	8a 85       	ldd	r24, Y+10	; 0x0a
    14ae:	81 30       	cpi	r24, 0x01	; 1
    14b0:	71 f4       	brne	.+28     	; 0x14ce <GPS_Calculating_longitude_from_NMEA+0x214>
		{
			j++;
    14b2:	8a 85       	ldd	r24, Y+10	; 0x0a
    14b4:	8f 5f       	subi	r24, 0xFF	; 255
    14b6:	8a 87       	std	Y+10, r24	; 0x0a
			GPS_information_modified->longitude[j]='.';
    14b8:	8a 85       	ldd	r24, Y+10	; 0x0a
    14ba:	28 2f       	mov	r18, r24
    14bc:	30 e0       	ldi	r19, 0x00	; 0
    14be:	89 a5       	ldd	r24, Y+41	; 0x29
    14c0:	9a a5       	ldd	r25, Y+42	; 0x2a
    14c2:	82 0f       	add	r24, r18
    14c4:	93 1f       	adc	r25, r19
    14c6:	fc 01       	movw	r30, r24
    14c8:	39 96       	adiw	r30, 0x09	; 9
    14ca:	8e e2       	ldi	r24, 0x2E	; 46
    14cc:	80 83       	st	Z, r24

	ultoa((unsigned long)variable3,longitude_buffer,10);



	for(j=0,i=0;longitude_buffer[i]!='\0';j++,i++)
    14ce:	8a 85       	ldd	r24, Y+10	; 0x0a
    14d0:	8f 5f       	subi	r24, 0xFF	; 255
    14d2:	8a 87       	std	Y+10, r24	; 0x0a
    14d4:	8b 85       	ldd	r24, Y+11	; 0x0b
    14d6:	8f 5f       	subi	r24, 0xFF	; 255
    14d8:	8b 87       	std	Y+11, r24	; 0x0b
    14da:	8b 85       	ldd	r24, Y+11	; 0x0b
    14dc:	28 2f       	mov	r18, r24
    14de:	30 e0       	ldi	r19, 0x00	; 0
    14e0:	ce 01       	movw	r24, r28
    14e2:	48 96       	adiw	r24, 0x18	; 24
    14e4:	fc 01       	movw	r30, r24
    14e6:	e2 0f       	add	r30, r18
    14e8:	f3 1f       	adc	r31, r19
    14ea:	80 81       	ld	r24, Z
    14ec:	88 23       	and	r24, r24
    14ee:	59 f6       	brne	.-106    	; 0x1486 <GPS_Calculating_longitude_from_NMEA+0x1cc>
		}

	}


	return 1;
    14f0:	81 e0       	ldi	r24, 0x01	; 1

}
    14f2:	aa 96       	adiw	r28, 0x2a	; 42
    14f4:	0f b6       	in	r0, 0x3f	; 63
    14f6:	f8 94       	cli
    14f8:	de bf       	out	0x3e, r29	; 62
    14fa:	0f be       	out	0x3f, r0	; 63
    14fc:	cd bf       	out	0x3d, r28	; 61
    14fe:	cf 91       	pop	r28
    1500:	df 91       	pop	r29
    1502:	08 95       	ret

00001504 <GPS_Calculating_latitude_from_NMEA>:



bool GPS_Calculating_latitude_from_NMEA(GPS_info* GPS_information_orginal,GPS_info* GPS_information_modified )
{
    1504:	df 93       	push	r29
    1506:	cf 93       	push	r28
    1508:	cd b7       	in	r28, 0x3d	; 61
    150a:	de b7       	in	r29, 0x3e	; 62
    150c:	aa 97       	sbiw	r28, 0x2a	; 42
    150e:	0f b6       	in	r0, 0x3f	; 63
    1510:	f8 94       	cli
    1512:	de bf       	out	0x3e, r29	; 62
    1514:	0f be       	out	0x3f, r0	; 63
    1516:	cd bf       	out	0x3d, r28	; 61
    1518:	98 a7       	std	Y+40, r25	; 0x28
    151a:	8f a3       	std	Y+39, r24	; 0x27
    151c:	7a a7       	std	Y+42, r23	; 0x2a
    151e:	69 a7       	std	Y+41, r22	; 0x29

	unsigned char i=0,j=0,Variable2=0;
    1520:	1b 86       	std	Y+11, r1	; 0x0b
    1522:	1a 86       	std	Y+10, r1	; 0x0a
    1524:	19 86       	std	Y+9, r1	; 0x09
	char *ptr;
	char latitude_array[10]={0},latitude_buffer[15]={0};
    1526:	8a e0       	ldi	r24, 0x0A	; 10
    1528:	fe 01       	movw	r30, r28
    152a:	3e 96       	adiw	r30, 0x0e	; 14
    152c:	df 01       	movw	r26, r30
    152e:	98 2f       	mov	r25, r24
    1530:	1d 92       	st	X+, r1
    1532:	9a 95       	dec	r25
    1534:	e9 f7       	brne	.-6      	; 0x1530 <GPS_Calculating_latitude_from_NMEA+0x2c>
    1536:	8f e0       	ldi	r24, 0x0F	; 15
    1538:	fe 01       	movw	r30, r28
    153a:	78 96       	adiw	r30, 0x18	; 24
    153c:	df 01       	movw	r26, r30
    153e:	98 2f       	mov	r25, r24
    1540:	1d 92       	st	X+, r1
    1542:	9a 95       	dec	r25
    1544:	e9 f7       	brne	.-6      	; 0x1540 <GPS_Calculating_latitude_from_NMEA+0x3c>
	unsigned long variable1=0;
    1546:	1d 82       	std	Y+5, r1	; 0x05
    1548:	1e 82       	std	Y+6, r1	; 0x06
    154a:	1f 82       	std	Y+7, r1	; 0x07
    154c:	18 86       	std	Y+8, r1	; 0x08
	double variable3=0;
    154e:	80 e0       	ldi	r24, 0x00	; 0
    1550:	90 e0       	ldi	r25, 0x00	; 0
    1552:	a0 e0       	ldi	r26, 0x00	; 0
    1554:	b0 e0       	ldi	r27, 0x00	; 0
    1556:	89 83       	std	Y+1, r24	; 0x01
    1558:	9a 83       	std	Y+2, r25	; 0x02
    155a:	ab 83       	std	Y+3, r26	; 0x03
    155c:	bc 83       	std	Y+4, r27	; 0x04
	memset(GPS_information_modified->latitude,0,15);
    155e:	89 a5       	ldd	r24, Y+41	; 0x29
    1560:	9a a5       	ldd	r25, Y+42	; 0x2a
    1562:	48 96       	adiw	r24, 0x18	; 24
    1564:	60 e0       	ldi	r22, 0x00	; 0
    1566:	70 e0       	ldi	r23, 0x00	; 0
    1568:	4f e0       	ldi	r20, 0x0F	; 15
    156a:	50 e0       	ldi	r21, 0x00	; 0
    156c:	0e 94 20 0f 	call	0x1e40	; 0x1e40 <memset>

	for(i=0,j=0;GPS_information_orginal->latitude[i]!='\0';i++,j++)
    1570:	1b 86       	std	Y+11, r1	; 0x0b
    1572:	1a 86       	std	Y+10, r1	; 0x0a
    1574:	28 c0       	rjmp	.+80     	; 0x15c6 <GPS_Calculating_latitude_from_NMEA+0xc2>
	{

		if(GPS_information_orginal->latitude[i]=='.') i++;
    1576:	8b 85       	ldd	r24, Y+11	; 0x0b
    1578:	28 2f       	mov	r18, r24
    157a:	30 e0       	ldi	r19, 0x00	; 0
    157c:	8f a1       	ldd	r24, Y+39	; 0x27
    157e:	98 a5       	ldd	r25, Y+40	; 0x28
    1580:	82 0f       	add	r24, r18
    1582:	93 1f       	adc	r25, r19
    1584:	fc 01       	movw	r30, r24
    1586:	78 96       	adiw	r30, 0x18	; 24
    1588:	80 81       	ld	r24, Z
    158a:	8e 32       	cpi	r24, 0x2E	; 46
    158c:	19 f4       	brne	.+6      	; 0x1594 <GPS_Calculating_latitude_from_NMEA+0x90>
    158e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1590:	8f 5f       	subi	r24, 0xFF	; 255
    1592:	8b 87       	std	Y+11, r24	; 0x0b
		latitude_array[j]=GPS_information_orginal->latitude[i];
    1594:	8a 85       	ldd	r24, Y+10	; 0x0a
    1596:	48 2f       	mov	r20, r24
    1598:	50 e0       	ldi	r21, 0x00	; 0
    159a:	8b 85       	ldd	r24, Y+11	; 0x0b
    159c:	28 2f       	mov	r18, r24
    159e:	30 e0       	ldi	r19, 0x00	; 0
    15a0:	8f a1       	ldd	r24, Y+39	; 0x27
    15a2:	98 a5       	ldd	r25, Y+40	; 0x28
    15a4:	82 0f       	add	r24, r18
    15a6:	93 1f       	adc	r25, r19
    15a8:	fc 01       	movw	r30, r24
    15aa:	78 96       	adiw	r30, 0x18	; 24
    15ac:	20 81       	ld	r18, Z
    15ae:	ce 01       	movw	r24, r28
    15b0:	0e 96       	adiw	r24, 0x0e	; 14
    15b2:	fc 01       	movw	r30, r24
    15b4:	e4 0f       	add	r30, r20
    15b6:	f5 1f       	adc	r31, r21
    15b8:	20 83       	st	Z, r18
	char latitude_array[10]={0},latitude_buffer[15]={0};
	unsigned long variable1=0;
	double variable3=0;
	memset(GPS_information_modified->latitude,0,15);

	for(i=0,j=0;GPS_information_orginal->latitude[i]!='\0';i++,j++)
    15ba:	8b 85       	ldd	r24, Y+11	; 0x0b
    15bc:	8f 5f       	subi	r24, 0xFF	; 255
    15be:	8b 87       	std	Y+11, r24	; 0x0b
    15c0:	8a 85       	ldd	r24, Y+10	; 0x0a
    15c2:	8f 5f       	subi	r24, 0xFF	; 255
    15c4:	8a 87       	std	Y+10, r24	; 0x0a
    15c6:	8b 85       	ldd	r24, Y+11	; 0x0b
    15c8:	28 2f       	mov	r18, r24
    15ca:	30 e0       	ldi	r19, 0x00	; 0
    15cc:	8f a1       	ldd	r24, Y+39	; 0x27
    15ce:	98 a5       	ldd	r25, Y+40	; 0x28
    15d0:	82 0f       	add	r24, r18
    15d2:	93 1f       	adc	r25, r19
    15d4:	fc 01       	movw	r30, r24
    15d6:	78 96       	adiw	r30, 0x18	; 24
    15d8:	80 81       	ld	r24, Z
    15da:	88 23       	and	r24, r24
    15dc:	61 f6       	brne	.-104    	; 0x1576 <GPS_Calculating_latitude_from_NMEA+0x72>
		if(GPS_information_orginal->latitude[i]=='.') i++;
		latitude_array[j]=GPS_information_orginal->latitude[i];

	}

	Variable2=latitude_array[1]-0x30;
    15de:	8f 85       	ldd	r24, Y+15	; 0x0f
    15e0:	80 53       	subi	r24, 0x30	; 48
    15e2:	89 87       	std	Y+9, r24	; 0x09
	Variable2*=10;
    15e4:	89 85       	ldd	r24, Y+9	; 0x09
    15e6:	88 2f       	mov	r24, r24
    15e8:	90 e0       	ldi	r25, 0x00	; 0
    15ea:	9c 01       	movw	r18, r24
    15ec:	22 0f       	add	r18, r18
    15ee:	33 1f       	adc	r19, r19
    15f0:	c9 01       	movw	r24, r18
    15f2:	88 0f       	add	r24, r24
    15f4:	99 1f       	adc	r25, r25
    15f6:	88 0f       	add	r24, r24
    15f8:	99 1f       	adc	r25, r25
    15fa:	82 0f       	add	r24, r18
    15fc:	93 1f       	adc	r25, r19
    15fe:	89 87       	std	Y+9, r24	; 0x09
	Variable2+=latitude_array[2]-0x30;
    1600:	98 89       	ldd	r25, Y+16	; 0x10
    1602:	89 85       	ldd	r24, Y+9	; 0x09
    1604:	89 0f       	add	r24, r25
    1606:	80 53       	subi	r24, 0x30	; 48
    1608:	89 87       	std	Y+9, r24	; 0x09


	variable1 = strtol(latitude_array+3, &ptr, 10);
    160a:	ce 01       	movw	r24, r28
    160c:	0e 96       	adiw	r24, 0x0e	; 14
    160e:	03 96       	adiw	r24, 0x03	; 3
    1610:	9e 01       	movw	r18, r28
    1612:	24 5f       	subi	r18, 0xF4	; 244
    1614:	3f 4f       	sbci	r19, 0xFF	; 255
    1616:	b9 01       	movw	r22, r18
    1618:	4a e0       	ldi	r20, 0x0A	; 10
    161a:	50 e0       	ldi	r21, 0x00	; 0
    161c:	0e 94 e9 0d 	call	0x1bd2	; 0x1bd2 <strtol>
    1620:	dc 01       	movw	r26, r24
    1622:	cb 01       	movw	r24, r22
    1624:	8d 83       	std	Y+5, r24	; 0x05
    1626:	9e 83       	std	Y+6, r25	; 0x06
    1628:	af 83       	std	Y+7, r26	; 0x07
    162a:	b8 87       	std	Y+8, r27	; 0x08

	variable3= (double)variable1/(double)600000;
    162c:	6d 81       	ldd	r22, Y+5	; 0x05
    162e:	7e 81       	ldd	r23, Y+6	; 0x06
    1630:	8f 81       	ldd	r24, Y+7	; 0x07
    1632:	98 85       	ldd	r25, Y+8	; 0x08
    1634:	0e 94 49 04 	call	0x892	; 0x892 <__floatunsisf>
    1638:	dc 01       	movw	r26, r24
    163a:	cb 01       	movw	r24, r22
    163c:	bc 01       	movw	r22, r24
    163e:	cd 01       	movw	r24, r26
    1640:	20 e0       	ldi	r18, 0x00	; 0
    1642:	3c e7       	ldi	r19, 0x7C	; 124
    1644:	42 e1       	ldi	r20, 0x12	; 18
    1646:	59 e4       	ldi	r21, 0x49	; 73
    1648:	0e 94 19 03 	call	0x632	; 0x632 <__divsf3>
    164c:	dc 01       	movw	r26, r24
    164e:	cb 01       	movw	r24, r22
    1650:	89 83       	std	Y+1, r24	; 0x01
    1652:	9a 83       	std	Y+2, r25	; 0x02
    1654:	ab 83       	std	Y+3, r26	; 0x03
    1656:	bc 83       	std	Y+4, r27	; 0x04
	variable3+=(double)Variable2;
    1658:	89 85       	ldd	r24, Y+9	; 0x09
    165a:	88 2f       	mov	r24, r24
    165c:	90 e0       	ldi	r25, 0x00	; 0
    165e:	a0 e0       	ldi	r26, 0x00	; 0
    1660:	b0 e0       	ldi	r27, 0x00	; 0
    1662:	bc 01       	movw	r22, r24
    1664:	cd 01       	movw	r24, r26
    1666:	0e 94 49 04 	call	0x892	; 0x892 <__floatunsisf>
    166a:	9b 01       	movw	r18, r22
    166c:	ac 01       	movw	r20, r24
    166e:	69 81       	ldd	r22, Y+1	; 0x01
    1670:	7a 81       	ldd	r23, Y+2	; 0x02
    1672:	8b 81       	ldd	r24, Y+3	; 0x03
    1674:	9c 81       	ldd	r25, Y+4	; 0x04
    1676:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <__addsf3>
    167a:	dc 01       	movw	r26, r24
    167c:	cb 01       	movw	r24, r22
    167e:	89 83       	std	Y+1, r24	; 0x01
    1680:	9a 83       	std	Y+2, r25	; 0x02
    1682:	ab 83       	std	Y+3, r26	; 0x03
    1684:	bc 83       	std	Y+4, r27	; 0x04

	variable3*=1000000;
    1686:	69 81       	ldd	r22, Y+1	; 0x01
    1688:	7a 81       	ldd	r23, Y+2	; 0x02
    168a:	8b 81       	ldd	r24, Y+3	; 0x03
    168c:	9c 81       	ldd	r25, Y+4	; 0x04
    168e:	20 e0       	ldi	r18, 0x00	; 0
    1690:	34 e2       	ldi	r19, 0x24	; 36
    1692:	44 e7       	ldi	r20, 0x74	; 116
    1694:	59 e4       	ldi	r21, 0x49	; 73
    1696:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
    169a:	dc 01       	movw	r26, r24
    169c:	cb 01       	movw	r24, r22
    169e:	89 83       	std	Y+1, r24	; 0x01
    16a0:	9a 83       	std	Y+2, r25	; 0x02
    16a2:	ab 83       	std	Y+3, r26	; 0x03
    16a4:	bc 83       	std	Y+4, r27	; 0x04

	ultoa((unsigned long)variable3,latitude_buffer,10);
    16a6:	69 81       	ldd	r22, Y+1	; 0x01
    16a8:	7a 81       	ldd	r23, Y+2	; 0x02
    16aa:	8b 81       	ldd	r24, Y+3	; 0x03
    16ac:	9c 81       	ldd	r25, Y+4	; 0x04
    16ae:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
    16b2:	dc 01       	movw	r26, r24
    16b4:	cb 01       	movw	r24, r22
    16b6:	9e 01       	movw	r18, r28
    16b8:	28 5e       	subi	r18, 0xE8	; 232
    16ba:	3f 4f       	sbci	r19, 0xFF	; 255
    16bc:	bc 01       	movw	r22, r24
    16be:	cd 01       	movw	r24, r26
    16c0:	a9 01       	movw	r20, r18
    16c2:	2a e0       	ldi	r18, 0x0A	; 10
    16c4:	30 e0       	ldi	r19, 0x00	; 0
    16c6:	0e 94 62 0f 	call	0x1ec4	; 0x1ec4 <ultoa>



	for(j=0,i=0;latitude_buffer[i]!='\0';j++,i++)
    16ca:	1a 86       	std	Y+10, r1	; 0x0a
    16cc:	1b 86       	std	Y+11, r1	; 0x0b
    16ce:	2a c0       	rjmp	.+84     	; 0x1724 <GPS_Calculating_latitude_from_NMEA+0x220>
	{
		GPS_information_modified->latitude[j]=latitude_buffer[i];
    16d0:	8a 85       	ldd	r24, Y+10	; 0x0a
    16d2:	48 2f       	mov	r20, r24
    16d4:	50 e0       	ldi	r21, 0x00	; 0
    16d6:	8b 85       	ldd	r24, Y+11	; 0x0b
    16d8:	28 2f       	mov	r18, r24
    16da:	30 e0       	ldi	r19, 0x00	; 0
    16dc:	ce 01       	movw	r24, r28
    16de:	48 96       	adiw	r24, 0x18	; 24
    16e0:	fc 01       	movw	r30, r24
    16e2:	e2 0f       	add	r30, r18
    16e4:	f3 1f       	adc	r31, r19
    16e6:	20 81       	ld	r18, Z
    16e8:	89 a5       	ldd	r24, Y+41	; 0x29
    16ea:	9a a5       	ldd	r25, Y+42	; 0x2a
    16ec:	84 0f       	add	r24, r20
    16ee:	95 1f       	adc	r25, r21
    16f0:	fc 01       	movw	r30, r24
    16f2:	78 96       	adiw	r30, 0x18	; 24
    16f4:	20 83       	st	Z, r18
		if((j==1))
    16f6:	8a 85       	ldd	r24, Y+10	; 0x0a
    16f8:	81 30       	cpi	r24, 0x01	; 1
    16fa:	71 f4       	brne	.+28     	; 0x1718 <GPS_Calculating_latitude_from_NMEA+0x214>
		{
			j++;
    16fc:	8a 85       	ldd	r24, Y+10	; 0x0a
    16fe:	8f 5f       	subi	r24, 0xFF	; 255
    1700:	8a 87       	std	Y+10, r24	; 0x0a
			GPS_information_modified->latitude[j]='.';
    1702:	8a 85       	ldd	r24, Y+10	; 0x0a
    1704:	28 2f       	mov	r18, r24
    1706:	30 e0       	ldi	r19, 0x00	; 0
    1708:	89 a5       	ldd	r24, Y+41	; 0x29
    170a:	9a a5       	ldd	r25, Y+42	; 0x2a
    170c:	82 0f       	add	r24, r18
    170e:	93 1f       	adc	r25, r19
    1710:	fc 01       	movw	r30, r24
    1712:	78 96       	adiw	r30, 0x18	; 24
    1714:	8e e2       	ldi	r24, 0x2E	; 46
    1716:	80 83       	st	Z, r24

	ultoa((unsigned long)variable3,latitude_buffer,10);



	for(j=0,i=0;latitude_buffer[i]!='\0';j++,i++)
    1718:	8a 85       	ldd	r24, Y+10	; 0x0a
    171a:	8f 5f       	subi	r24, 0xFF	; 255
    171c:	8a 87       	std	Y+10, r24	; 0x0a
    171e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1720:	8f 5f       	subi	r24, 0xFF	; 255
    1722:	8b 87       	std	Y+11, r24	; 0x0b
    1724:	8b 85       	ldd	r24, Y+11	; 0x0b
    1726:	28 2f       	mov	r18, r24
    1728:	30 e0       	ldi	r19, 0x00	; 0
    172a:	ce 01       	movw	r24, r28
    172c:	48 96       	adiw	r24, 0x18	; 24
    172e:	fc 01       	movw	r30, r24
    1730:	e2 0f       	add	r30, r18
    1732:	f3 1f       	adc	r31, r19
    1734:	80 81       	ld	r24, Z
    1736:	88 23       	and	r24, r24
    1738:	59 f6       	brne	.-106    	; 0x16d0 <GPS_Calculating_latitude_from_NMEA+0x1cc>
		}

	}


	return 1;
    173a:	81 e0       	ldi	r24, 0x01	; 1

}
    173c:	aa 96       	adiw	r28, 0x2a	; 42
    173e:	0f b6       	in	r0, 0x3f	; 63
    1740:	f8 94       	cli
    1742:	de bf       	out	0x3e, r29	; 62
    1744:	0f be       	out	0x3f, r0	; 63
    1746:	cd bf       	out	0x3d, r28	; 61
    1748:	cf 91       	pop	r28
    174a:	df 91       	pop	r29
    174c:	08 95       	ret

0000174e <__vector_10>:
#define set_tx_pin_high()      ( SOFTUART_TXPORT |=  ( 1 << SOFTUART_TXBIT ) )
#define set_tx_pin_low()       ( SOFTUART_TXPORT &= ~( 1 << SOFTUART_TXBIT ) )
#define get_rx_pin_status()    ( SOFTUART_RXPIN  &   ( 1 << SOFTUART_RXBIT ) )

ISR(SOFTUART_T_COMP_LABEL)
{
    174e:	1f 92       	push	r1
    1750:	0f 92       	push	r0
    1752:	0f b6       	in	r0, 0x3f	; 63
    1754:	0f 92       	push	r0
    1756:	11 24       	eor	r1, r1
    1758:	2f 93       	push	r18
    175a:	8f 93       	push	r24
    175c:	9f 93       	push	r25
    175e:	af 93       	push	r26
    1760:	bf 93       	push	r27
    1762:	ef 93       	push	r30
    1764:	ff 93       	push	r31
    1766:	df 93       	push	r29
    1768:	cf 93       	push	r28
    176a:	00 d0       	rcall	.+0      	; 0x176c <__vector_10+0x1e>
    176c:	0f 92       	push	r0
    176e:	cd b7       	in	r28, 0x3d	; 61
    1770:	de b7       	in	r29, 0x3e	; 62
	
	unsigned char start_bit, flag_in;
	unsigned char tmp;
	
	// Transmitter Section
	if ( flag_tx_busy == SU_TRUE ) {
    1772:	80 91 ef 02 	lds	r24, 0x02EF
    1776:	81 30       	cpi	r24, 0x01	; 1
    1778:	d1 f5       	brne	.+116    	; 0x17ee <__vector_10+0xa0>
		tmp = timer_tx_ctr;
    177a:	80 91 f0 02 	lds	r24, 0x02F0
    177e:	89 83       	std	Y+1, r24	; 0x01
		if ( --tmp == 0 ) { // if ( --timer_tx_ctr <= 0 )
    1780:	89 81       	ldd	r24, Y+1	; 0x01
    1782:	81 50       	subi	r24, 0x01	; 1
    1784:	89 83       	std	Y+1, r24	; 0x01
    1786:	89 81       	ldd	r24, Y+1	; 0x01
    1788:	88 23       	and	r24, r24
    178a:	71 f5       	brne	.+92     	; 0x17e8 <__vector_10+0x9a>
			if ( internal_tx_buffer & 0x01 ) {
    178c:	80 91 f2 02 	lds	r24, 0x02F2
    1790:	90 91 f3 02 	lds	r25, 0x02F3
    1794:	81 70       	andi	r24, 0x01	; 1
    1796:	90 70       	andi	r25, 0x00	; 0
    1798:	88 23       	and	r24, r24
    179a:	41 f0       	breq	.+16     	; 0x17ac <__vector_10+0x5e>
				set_tx_pin_high();
    179c:	a8 e3       	ldi	r26, 0x38	; 56
    179e:	b0 e0       	ldi	r27, 0x00	; 0
    17a0:	e8 e3       	ldi	r30, 0x38	; 56
    17a2:	f0 e0       	ldi	r31, 0x00	; 0
    17a4:	80 81       	ld	r24, Z
    17a6:	82 60       	ori	r24, 0x02	; 2
    17a8:	8c 93       	st	X, r24
    17aa:	07 c0       	rjmp	.+14     	; 0x17ba <__vector_10+0x6c>
			}
			else {
				set_tx_pin_low();
    17ac:	a8 e3       	ldi	r26, 0x38	; 56
    17ae:	b0 e0       	ldi	r27, 0x00	; 0
    17b0:	e8 e3       	ldi	r30, 0x38	; 56
    17b2:	f0 e0       	ldi	r31, 0x00	; 0
    17b4:	80 81       	ld	r24, Z
    17b6:	8d 7f       	andi	r24, 0xFD	; 253
    17b8:	8c 93       	st	X, r24
			}
			internal_tx_buffer >>= 1;
    17ba:	80 91 f2 02 	lds	r24, 0x02F2
    17be:	90 91 f3 02 	lds	r25, 0x02F3
    17c2:	96 95       	lsr	r25
    17c4:	87 95       	ror	r24
    17c6:	90 93 f3 02 	sts	0x02F3, r25
    17ca:	80 93 f2 02 	sts	0x02F2, r24
			tmp = 3; // timer_tx_ctr = 3;
    17ce:	83 e0       	ldi	r24, 0x03	; 3
    17d0:	89 83       	std	Y+1, r24	; 0x01
			if ( --bits_left_in_tx == 0 ) {
    17d2:	80 91 f1 02 	lds	r24, 0x02F1
    17d6:	81 50       	subi	r24, 0x01	; 1
    17d8:	80 93 f1 02 	sts	0x02F1, r24
    17dc:	80 91 f1 02 	lds	r24, 0x02F1
    17e0:	88 23       	and	r24, r24
    17e2:	11 f4       	brne	.+4      	; 0x17e8 <__vector_10+0x9a>
				flag_tx_busy = SU_FALSE;
    17e4:	10 92 ef 02 	sts	0x02EF, r1
			}
		}
		timer_tx_ctr = tmp;
    17e8:	89 81       	ldd	r24, Y+1	; 0x01
    17ea:	80 93 f0 02 	sts	0x02F0, r24
	}

	// Receiver Section
	if ( flag_rx_off == SU_FALSE ) {
    17ee:	80 91 ed 02 	lds	r24, 0x02ED
    17f2:	88 23       	and	r24, r24
    17f4:	09 f0       	breq	.+2      	; 0x17f8 <__vector_10+0xaa>
    17f6:	72 c0       	rjmp	.+228    	; 0x18dc <__vector_10+0x18e>
		if ( flag_rx_waiting_for_stop_bit ) {
    17f8:	80 91 ca 02 	lds	r24, 0x02CA
    17fc:	88 23       	and	r24, r24
    17fe:	29 f1       	breq	.+74     	; 0x184a <__vector_10+0xfc>
			if ( --timer_rx_ctr == 0 ) {
    1800:	80 91 c8 02 	lds	r24, 0x02C8
    1804:	81 50       	subi	r24, 0x01	; 1
    1806:	80 93 c8 02 	sts	0x02C8, r24
    180a:	80 91 c8 02 	lds	r24, 0x02C8
    180e:	88 23       	and	r24, r24
    1810:	09 f0       	breq	.+2      	; 0x1814 <__vector_10+0xc6>
    1812:	64 c0       	rjmp	.+200    	; 0x18dc <__vector_10+0x18e>
				flag_rx_waiting_for_stop_bit = SU_FALSE;
    1814:	10 92 ca 02 	sts	0x02CA, r1
				flag_rx_ready = SU_FALSE;
    1818:	10 92 ee 02 	sts	0x02EE, r1
				inbuf[qin] = internal_rx_buffer;
    181c:	80 91 eb 02 	lds	r24, 0x02EB
    1820:	88 2f       	mov	r24, r24
    1822:	90 e0       	ldi	r25, 0x00	; 0
    1824:	20 91 c6 02 	lds	r18, 0x02C6
    1828:	fc 01       	movw	r30, r24
    182a:	e5 53       	subi	r30, 0x35	; 53
    182c:	fd 4f       	sbci	r31, 0xFD	; 253
    182e:	20 83       	st	Z, r18
				if ( ++qin >= SOFTUART_IN_BUF_SIZE ) {
    1830:	80 91 eb 02 	lds	r24, 0x02EB
    1834:	8f 5f       	subi	r24, 0xFF	; 255
    1836:	80 93 eb 02 	sts	0x02EB, r24
    183a:	80 91 eb 02 	lds	r24, 0x02EB
    183e:	80 32       	cpi	r24, 0x20	; 32
    1840:	08 f4       	brcc	.+2      	; 0x1844 <__vector_10+0xf6>
    1842:	4c c0       	rjmp	.+152    	; 0x18dc <__vector_10+0x18e>
					// overflow - reset inbuf-index
					qin = 0;
    1844:	10 92 eb 02 	sts	0x02EB, r1
    1848:	49 c0       	rjmp	.+146    	; 0x18dc <__vector_10+0x18e>
				}
			}
		}
		else {  // rx_test_busy
			if ( flag_rx_ready == SU_FALSE ) {
    184a:	80 91 ee 02 	lds	r24, 0x02EE
    184e:	88 23       	and	r24, r24
    1850:	b9 f4       	brne	.+46     	; 0x1880 <__vector_10+0x132>
				start_bit = get_rx_pin_status();
    1852:	e6 e3       	ldi	r30, 0x36	; 54
    1854:	f0 e0       	ldi	r31, 0x00	; 0
    1856:	80 81       	ld	r24, Z
    1858:	81 70       	andi	r24, 0x01	; 1
    185a:	8b 83       	std	Y+3, r24	; 0x03
				// test for start bit
				if ( start_bit == 0 ) {
    185c:	8b 81       	ldd	r24, Y+3	; 0x03
    185e:	88 23       	and	r24, r24
    1860:	e9 f5       	brne	.+122    	; 0x18dc <__vector_10+0x18e>
					flag_rx_ready      = SU_TRUE;
    1862:	81 e0       	ldi	r24, 0x01	; 1
    1864:	80 93 ee 02 	sts	0x02EE, r24
					internal_rx_buffer = 0;
    1868:	10 92 c6 02 	sts	0x02C6, r1
					timer_rx_ctr       = 4;
    186c:	84 e0       	ldi	r24, 0x04	; 4
    186e:	80 93 c8 02 	sts	0x02C8, r24
					bits_left_in_rx    = RX_NUM_OF_BITS;
    1872:	88 e0       	ldi	r24, 0x08	; 8
    1874:	80 93 c7 02 	sts	0x02C7, r24
					rx_mask            = 1;
    1878:	81 e0       	ldi	r24, 0x01	; 1
    187a:	80 93 c9 02 	sts	0x02C9, r24
    187e:	2e c0       	rjmp	.+92     	; 0x18dc <__vector_10+0x18e>
				}
			}
			else {  // rx_busy
				tmp = timer_rx_ctr;
    1880:	80 91 c8 02 	lds	r24, 0x02C8
    1884:	89 83       	std	Y+1, r24	; 0x01
				if ( --tmp == 0 ) { // if ( --timer_rx_ctr == 0 ) {
    1886:	89 81       	ldd	r24, Y+1	; 0x01
    1888:	81 50       	subi	r24, 0x01	; 1
    188a:	89 83       	std	Y+1, r24	; 0x01
    188c:	89 81       	ldd	r24, Y+1	; 0x01
    188e:	88 23       	and	r24, r24
    1890:	11 f5       	brne	.+68     	; 0x18d6 <__vector_10+0x188>
					// rcv
					tmp = 3;
    1892:	83 e0       	ldi	r24, 0x03	; 3
    1894:	89 83       	std	Y+1, r24	; 0x01
					flag_in = get_rx_pin_status();
    1896:	e6 e3       	ldi	r30, 0x36	; 54
    1898:	f0 e0       	ldi	r31, 0x00	; 0
    189a:	80 81       	ld	r24, Z
    189c:	81 70       	andi	r24, 0x01	; 1
    189e:	8a 83       	std	Y+2, r24	; 0x02
					if ( flag_in ) {
    18a0:	8a 81       	ldd	r24, Y+2	; 0x02
    18a2:	88 23       	and	r24, r24
    18a4:	39 f0       	breq	.+14     	; 0x18b4 <__vector_10+0x166>
						internal_rx_buffer |= rx_mask;
    18a6:	80 91 c6 02 	lds	r24, 0x02C6
    18aa:	90 91 c9 02 	lds	r25, 0x02C9
    18ae:	89 2b       	or	r24, r25
    18b0:	80 93 c6 02 	sts	0x02C6, r24
					}
					rx_mask <<= 1;
    18b4:	80 91 c9 02 	lds	r24, 0x02C9
    18b8:	88 0f       	add	r24, r24
    18ba:	80 93 c9 02 	sts	0x02C9, r24
					if ( --bits_left_in_rx == 0 ) {
    18be:	80 91 c7 02 	lds	r24, 0x02C7
    18c2:	81 50       	subi	r24, 0x01	; 1
    18c4:	80 93 c7 02 	sts	0x02C7, r24
    18c8:	80 91 c7 02 	lds	r24, 0x02C7
    18cc:	88 23       	and	r24, r24
    18ce:	19 f4       	brne	.+6      	; 0x18d6 <__vector_10+0x188>
						flag_rx_waiting_for_stop_bit = SU_TRUE;
    18d0:	81 e0       	ldi	r24, 0x01	; 1
    18d2:	80 93 ca 02 	sts	0x02CA, r24
					}
				}
				timer_rx_ctr = tmp;
    18d6:	89 81       	ldd	r24, Y+1	; 0x01
    18d8:	80 93 c8 02 	sts	0x02C8, r24
			}
		}
	}
}
    18dc:	0f 90       	pop	r0
    18de:	0f 90       	pop	r0
    18e0:	0f 90       	pop	r0
    18e2:	cf 91       	pop	r28
    18e4:	df 91       	pop	r29
    18e6:	ff 91       	pop	r31
    18e8:	ef 91       	pop	r30
    18ea:	bf 91       	pop	r27
    18ec:	af 91       	pop	r26
    18ee:	9f 91       	pop	r25
    18f0:	8f 91       	pop	r24
    18f2:	2f 91       	pop	r18
    18f4:	0f 90       	pop	r0
    18f6:	0f be       	out	0x3f, r0	; 63
    18f8:	0f 90       	pop	r0
    18fa:	1f 90       	pop	r1
    18fc:	18 95       	reti

000018fe <io_init>:

static void io_init(void)
{
    18fe:	df 93       	push	r29
    1900:	cf 93       	push	r28
    1902:	cd b7       	in	r28, 0x3d	; 61
    1904:	de b7       	in	r29, 0x3e	; 62
	// TX-Pin as output
	SOFTUART_TXDDR |=  ( 1 << SOFTUART_TXBIT );
    1906:	a7 e3       	ldi	r26, 0x37	; 55
    1908:	b0 e0       	ldi	r27, 0x00	; 0
    190a:	e7 e3       	ldi	r30, 0x37	; 55
    190c:	f0 e0       	ldi	r31, 0x00	; 0
    190e:	80 81       	ld	r24, Z
    1910:	82 60       	ori	r24, 0x02	; 2
    1912:	8c 93       	st	X, r24
	// RX-Pin as input
	SOFTUART_RXDDR &= ~( 1 << SOFTUART_RXBIT );
    1914:	a7 e3       	ldi	r26, 0x37	; 55
    1916:	b0 e0       	ldi	r27, 0x00	; 0
    1918:	e7 e3       	ldi	r30, 0x37	; 55
    191a:	f0 e0       	ldi	r31, 0x00	; 0
    191c:	80 81       	ld	r24, Z
    191e:	8e 7f       	andi	r24, 0xFE	; 254
    1920:	8c 93       	st	X, r24
}
    1922:	cf 91       	pop	r28
    1924:	df 91       	pop	r29
    1926:	08 95       	ret

00001928 <timer_init>:

static void timer_init(void)
{
    1928:	df 93       	push	r29
    192a:	cf 93       	push	r28
    192c:	0f 92       	push	r0
    192e:	cd b7       	in	r28, 0x3d	; 61
    1930:	de b7       	in	r29, 0x3e	; 62
	unsigned char sreg_tmp;
	
	sreg_tmp = SREG;
    1932:	ef e5       	ldi	r30, 0x5F	; 95
    1934:	f0 e0       	ldi	r31, 0x00	; 0
    1936:	80 81       	ld	r24, Z
    1938:	89 83       	std	Y+1, r24	; 0x01
	cli();
    193a:	f8 94       	cli
	
	SOFTUART_T_COMP_REG = SOFTUART_TIMERTOP;     /* set top */
    193c:	ec e5       	ldi	r30, 0x5C	; 92
    193e:	f0 e0       	ldi	r31, 0x00	; 0
    1940:	81 e2       	ldi	r24, 0x21	; 33
    1942:	80 83       	st	Z, r24

	SOFTUART_T_CONTR_REG = 0b00001010;
    1944:	e3 e5       	ldi	r30, 0x53	; 83
    1946:	f0 e0       	ldi	r31, 0x00	; 0
    1948:	8a e0       	ldi	r24, 0x0A	; 10
    194a:	80 83       	st	Z, r24
//	SOFTUART_T_CONTR_REGB = SOFTUART_CTC_MASKB | SOFTUART_PRESC_MASKB;

	SOFTUART_T_INTCTL_REG |= SOFTUART_CMPINT_EN_MASK;
    194c:	a9 e5       	ldi	r26, 0x59	; 89
    194e:	b0 e0       	ldi	r27, 0x00	; 0
    1950:	e9 e5       	ldi	r30, 0x59	; 89
    1952:	f0 e0       	ldi	r31, 0x00	; 0
    1954:	80 81       	ld	r24, Z
    1956:	82 60       	ori	r24, 0x02	; 2
    1958:	8c 93       	st	X, r24

	SOFTUART_T_CNT_REG = 0; /* reset counter */
    195a:	e2 e5       	ldi	r30, 0x52	; 82
    195c:	f0 e0       	ldi	r31, 0x00	; 0
    195e:	10 82       	st	Z, r1
	
	SREG = sreg_tmp;
    1960:	ef e5       	ldi	r30, 0x5F	; 95
    1962:	f0 e0       	ldi	r31, 0x00	; 0
    1964:	89 81       	ldd	r24, Y+1	; 0x01
    1966:	80 83       	st	Z, r24
}
    1968:	0f 90       	pop	r0
    196a:	cf 91       	pop	r28
    196c:	df 91       	pop	r29
    196e:	08 95       	ret

00001970 <softuart_init>:

void softuart_init( void )
{
    1970:	df 93       	push	r29
    1972:	cf 93       	push	r28
    1974:	cd b7       	in	r28, 0x3d	; 61
    1976:	de b7       	in	r29, 0x3e	; 62
	flag_tx_busy  = SU_FALSE;
    1978:	10 92 ef 02 	sts	0x02EF, r1
	flag_rx_ready = SU_FALSE;
    197c:	10 92 ee 02 	sts	0x02EE, r1
	flag_rx_off   = SU_FALSE;
    1980:	10 92 ed 02 	sts	0x02ED, r1
	
	set_tx_pin_high(); /* mt: set to high to avoid garbage on init */
    1984:	a8 e3       	ldi	r26, 0x38	; 56
    1986:	b0 e0       	ldi	r27, 0x00	; 0
    1988:	e8 e3       	ldi	r30, 0x38	; 56
    198a:	f0 e0       	ldi	r31, 0x00	; 0
    198c:	80 81       	ld	r24, Z
    198e:	82 60       	ori	r24, 0x02	; 2
    1990:	8c 93       	st	X, r24

	io_init();
    1992:	0e 94 7f 0c 	call	0x18fe	; 0x18fe <io_init>
	timer_init();
    1996:	0e 94 94 0c 	call	0x1928	; 0x1928 <timer_init>
}
    199a:	cf 91       	pop	r28
    199c:	df 91       	pop	r29
    199e:	08 95       	ret

000019a0 <idle>:

static void idle(void)
{
    19a0:	df 93       	push	r29
    19a2:	cf 93       	push	r28
    19a4:	cd b7       	in	r28, 0x3d	; 61
    19a6:	de b7       	in	r29, 0x3e	; 62
	// timeout handling goes here 
	// - but there is a "softuart_kbhit" in this code...
	// add watchdog-reset here if needed
}
    19a8:	cf 91       	pop	r28
    19aa:	df 91       	pop	r29
    19ac:	08 95       	ret

000019ae <softuart_turn_rx_on>:

void softuart_turn_rx_on( void )
{
    19ae:	df 93       	push	r29
    19b0:	cf 93       	push	r28
    19b2:	cd b7       	in	r28, 0x3d	; 61
    19b4:	de b7       	in	r29, 0x3e	; 62
	flag_rx_off = SU_FALSE;
    19b6:	10 92 ed 02 	sts	0x02ED, r1
}
    19ba:	cf 91       	pop	r28
    19bc:	df 91       	pop	r29
    19be:	08 95       	ret

000019c0 <softuart_turn_rx_off>:

void softuart_turn_rx_off( void )
{
    19c0:	df 93       	push	r29
    19c2:	cf 93       	push	r28
    19c4:	cd b7       	in	r28, 0x3d	; 61
    19c6:	de b7       	in	r29, 0x3e	; 62
	flag_rx_off = SU_TRUE;
    19c8:	81 e0       	ldi	r24, 0x01	; 1
    19ca:	80 93 ed 02 	sts	0x02ED, r24
}
    19ce:	cf 91       	pop	r28
    19d0:	df 91       	pop	r29
    19d2:	08 95       	ret

000019d4 <softuart_getchar>:

char softuart_getchar( void )
{
    19d4:	df 93       	push	r29
    19d6:	cf 93       	push	r28
    19d8:	0f 92       	push	r0
    19da:	cd b7       	in	r28, 0x3d	; 61
    19dc:	de b7       	in	r29, 0x3e	; 62
    19de:	02 c0       	rjmp	.+4      	; 0x19e4 <softuart_getchar+0x10>
	char ch;

	while ( qout == qin ) {
		idle();
    19e0:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <idle>

char softuart_getchar( void )
{
	char ch;

	while ( qout == qin ) {
    19e4:	90 91 ec 02 	lds	r25, 0x02EC
    19e8:	80 91 eb 02 	lds	r24, 0x02EB
    19ec:	98 17       	cp	r25, r24
    19ee:	c1 f3       	breq	.-16     	; 0x19e0 <softuart_getchar+0xc>
		idle();
	}
	ch = inbuf[qout];
    19f0:	80 91 ec 02 	lds	r24, 0x02EC
    19f4:	88 2f       	mov	r24, r24
    19f6:	90 e0       	ldi	r25, 0x00	; 0
    19f8:	fc 01       	movw	r30, r24
    19fa:	e5 53       	subi	r30, 0x35	; 53
    19fc:	fd 4f       	sbci	r31, 0xFD	; 253
    19fe:	80 81       	ld	r24, Z
    1a00:	89 83       	std	Y+1, r24	; 0x01
	if ( ++qout >= SOFTUART_IN_BUF_SIZE ) {
    1a02:	80 91 ec 02 	lds	r24, 0x02EC
    1a06:	8f 5f       	subi	r24, 0xFF	; 255
    1a08:	80 93 ec 02 	sts	0x02EC, r24
    1a0c:	80 91 ec 02 	lds	r24, 0x02EC
    1a10:	80 32       	cpi	r24, 0x20	; 32
    1a12:	10 f0       	brcs	.+4      	; 0x1a18 <softuart_getchar+0x44>
		qout = 0;
    1a14:	10 92 ec 02 	sts	0x02EC, r1
	}
	
	return( ch );
    1a18:	89 81       	ldd	r24, Y+1	; 0x01
}
    1a1a:	0f 90       	pop	r0
    1a1c:	cf 91       	pop	r28
    1a1e:	df 91       	pop	r29
    1a20:	08 95       	ret

00001a22 <softuart_kbhit>:

unsigned char softuart_kbhit( void )
{
    1a22:	df 93       	push	r29
    1a24:	cf 93       	push	r28
    1a26:	0f 92       	push	r0
    1a28:	cd b7       	in	r28, 0x3d	; 61
    1a2a:	de b7       	in	r29, 0x3e	; 62
	return( qin != qout );
    1a2c:	90 91 eb 02 	lds	r25, 0x02EB
    1a30:	80 91 ec 02 	lds	r24, 0x02EC
    1a34:	19 82       	std	Y+1, r1	; 0x01
    1a36:	98 17       	cp	r25, r24
    1a38:	11 f0       	breq	.+4      	; 0x1a3e <softuart_kbhit+0x1c>
    1a3a:	81 e0       	ldi	r24, 0x01	; 1
    1a3c:	89 83       	std	Y+1, r24	; 0x01
    1a3e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1a40:	0f 90       	pop	r0
    1a42:	cf 91       	pop	r28
    1a44:	df 91       	pop	r29
    1a46:	08 95       	ret

00001a48 <softuart_flush_input_buffer>:

void softuart_flush_input_buffer( void )
{
    1a48:	df 93       	push	r29
    1a4a:	cf 93       	push	r28
    1a4c:	cd b7       	in	r28, 0x3d	; 61
    1a4e:	de b7       	in	r29, 0x3e	; 62
	qin  = 0;
    1a50:	10 92 eb 02 	sts	0x02EB, r1
	qout = 0;
    1a54:	10 92 ec 02 	sts	0x02EC, r1
}
    1a58:	cf 91       	pop	r28
    1a5a:	df 91       	pop	r29
    1a5c:	08 95       	ret

00001a5e <softuart_transmit_busy>:
	
unsigned char softuart_transmit_busy( void ) 
{
    1a5e:	df 93       	push	r29
    1a60:	cf 93       	push	r28
    1a62:	0f 92       	push	r0
    1a64:	cd b7       	in	r28, 0x3d	; 61
    1a66:	de b7       	in	r29, 0x3e	; 62
	return ( flag_tx_busy == SU_TRUE ) ? 1 : 0;
    1a68:	80 91 ef 02 	lds	r24, 0x02EF
    1a6c:	19 82       	std	Y+1, r1	; 0x01
    1a6e:	81 30       	cpi	r24, 0x01	; 1
    1a70:	11 f4       	brne	.+4      	; 0x1a76 <softuart_transmit_busy+0x18>
    1a72:	81 e0       	ldi	r24, 0x01	; 1
    1a74:	89 83       	std	Y+1, r24	; 0x01
    1a76:	89 81       	ldd	r24, Y+1	; 0x01
}
    1a78:	0f 90       	pop	r0
    1a7a:	cf 91       	pop	r28
    1a7c:	df 91       	pop	r29
    1a7e:	08 95       	ret

00001a80 <softuart_putchar>:

void softuart_putchar( const char ch )
{
    1a80:	df 93       	push	r29
    1a82:	cf 93       	push	r28
    1a84:	0f 92       	push	r0
    1a86:	cd b7       	in	r28, 0x3d	; 61
    1a88:	de b7       	in	r29, 0x3e	; 62
    1a8a:	89 83       	std	Y+1, r24	; 0x01
	while ( flag_tx_busy == SU_TRUE ) {
    1a8c:	80 91 ef 02 	lds	r24, 0x02EF
    1a90:	81 30       	cpi	r24, 0x01	; 1
    1a92:	e1 f3       	breq	.-8      	; 0x1a8c <softuart_putchar+0xc>
		; // wait for transmitter ready
		  // add watchdog-reset here if needed;
	}

	// invoke_UART_transmit
	timer_tx_ctr       = 3;
    1a94:	83 e0       	ldi	r24, 0x03	; 3
    1a96:	80 93 f0 02 	sts	0x02F0, r24
	bits_left_in_tx    = TX_NUM_OF_BITS;
    1a9a:	8a e0       	ldi	r24, 0x0A	; 10
    1a9c:	80 93 f1 02 	sts	0x02F1, r24
	internal_tx_buffer = ( ch << 1 ) | 0x200;
    1aa0:	89 81       	ldd	r24, Y+1	; 0x01
    1aa2:	88 2f       	mov	r24, r24
    1aa4:	90 e0       	ldi	r25, 0x00	; 0
    1aa6:	88 0f       	add	r24, r24
    1aa8:	99 1f       	adc	r25, r25
    1aaa:	92 60       	ori	r25, 0x02	; 2
    1aac:	90 93 f3 02 	sts	0x02F3, r25
    1ab0:	80 93 f2 02 	sts	0x02F2, r24
	flag_tx_busy       = SU_TRUE;
    1ab4:	81 e0       	ldi	r24, 0x01	; 1
    1ab6:	80 93 ef 02 	sts	0x02EF, r24
}
    1aba:	0f 90       	pop	r0
    1abc:	cf 91       	pop	r28
    1abe:	df 91       	pop	r29
    1ac0:	08 95       	ret

00001ac2 <softuart_puts>:
	
void softuart_puts( const char *s )
{
    1ac2:	df 93       	push	r29
    1ac4:	cf 93       	push	r28
    1ac6:	00 d0       	rcall	.+0      	; 0x1ac8 <softuart_puts+0x6>
    1ac8:	cd b7       	in	r28, 0x3d	; 61
    1aca:	de b7       	in	r29, 0x3e	; 62
    1acc:	9a 83       	std	Y+2, r25	; 0x02
    1ace:	89 83       	std	Y+1, r24	; 0x01
    1ad0:	0b c0       	rjmp	.+22     	; 0x1ae8 <softuart_puts+0x26>
	while ( *s ) {
		softuart_putchar( *s++ );
    1ad2:	e9 81       	ldd	r30, Y+1	; 0x01
    1ad4:	fa 81       	ldd	r31, Y+2	; 0x02
    1ad6:	20 81       	ld	r18, Z
    1ad8:	89 81       	ldd	r24, Y+1	; 0x01
    1ada:	9a 81       	ldd	r25, Y+2	; 0x02
    1adc:	01 96       	adiw	r24, 0x01	; 1
    1ade:	9a 83       	std	Y+2, r25	; 0x02
    1ae0:	89 83       	std	Y+1, r24	; 0x01
    1ae2:	82 2f       	mov	r24, r18
    1ae4:	0e 94 40 0d 	call	0x1a80	; 0x1a80 <softuart_putchar>
	flag_tx_busy       = SU_TRUE;
}
	
void softuart_puts( const char *s )
{
	while ( *s ) {
    1ae8:	e9 81       	ldd	r30, Y+1	; 0x01
    1aea:	fa 81       	ldd	r31, Y+2	; 0x02
    1aec:	80 81       	ld	r24, Z
    1aee:	88 23       	and	r24, r24
    1af0:	81 f7       	brne	.-32     	; 0x1ad2 <softuart_puts+0x10>
		softuart_putchar( *s++ );
	}
}
    1af2:	0f 90       	pop	r0
    1af4:	0f 90       	pop	r0
    1af6:	cf 91       	pop	r28
    1af8:	df 91       	pop	r29
    1afa:	08 95       	ret

00001afc <softuart_puts_p>:
	
void softuart_puts_p( const char *prg_s )
{
    1afc:	df 93       	push	r29
    1afe:	cf 93       	push	r28
    1b00:	00 d0       	rcall	.+0      	; 0x1b02 <softuart_puts_p+0x6>
    1b02:	00 d0       	rcall	.+0      	; 0x1b04 <softuart_puts_p+0x8>
    1b04:	00 d0       	rcall	.+0      	; 0x1b06 <softuart_puts_p+0xa>
    1b06:	cd b7       	in	r28, 0x3d	; 61
    1b08:	de b7       	in	r29, 0x3e	; 62
    1b0a:	9e 83       	std	Y+6, r25	; 0x06
    1b0c:	8d 83       	std	Y+5, r24	; 0x05
    1b0e:	03 c0       	rjmp	.+6      	; 0x1b16 <softuart_puts_p+0x1a>
	char c;

	while ( ( c = pgm_read_byte( prg_s++ ) ) ) {
		softuart_putchar(c);
    1b10:	8c 81       	ldd	r24, Y+4	; 0x04
    1b12:	0e 94 40 0d 	call	0x1a80	; 0x1a80 <softuart_putchar>
	
void softuart_puts_p( const char *prg_s )
{
	char c;

	while ( ( c = pgm_read_byte( prg_s++ ) ) ) {
    1b16:	8d 81       	ldd	r24, Y+5	; 0x05
    1b18:	9e 81       	ldd	r25, Y+6	; 0x06
    1b1a:	9b 83       	std	Y+3, r25	; 0x03
    1b1c:	8a 83       	std	Y+2, r24	; 0x02
    1b1e:	8d 81       	ldd	r24, Y+5	; 0x05
    1b20:	9e 81       	ldd	r25, Y+6	; 0x06
    1b22:	01 96       	adiw	r24, 0x01	; 1
    1b24:	9e 83       	std	Y+6, r25	; 0x06
    1b26:	8d 83       	std	Y+5, r24	; 0x05
    1b28:	ea 81       	ldd	r30, Y+2	; 0x02
    1b2a:	fb 81       	ldd	r31, Y+3	; 0x03
    1b2c:	84 91       	lpm	r24, Z+
    1b2e:	89 83       	std	Y+1, r24	; 0x01
    1b30:	89 81       	ldd	r24, Y+1	; 0x01
    1b32:	8c 83       	std	Y+4, r24	; 0x04
    1b34:	8c 81       	ldd	r24, Y+4	; 0x04
    1b36:	88 23       	and	r24, r24
    1b38:	59 f7       	brne	.-42     	; 0x1b10 <softuart_puts_p+0x14>
		softuart_putchar(c);
	}
}
    1b3a:	26 96       	adiw	r28, 0x06	; 6
    1b3c:	0f b6       	in	r0, 0x3f	; 63
    1b3e:	f8 94       	cli
    1b40:	de bf       	out	0x3e, r29	; 62
    1b42:	0f be       	out	0x3f, r0	; 63
    1b44:	cd bf       	out	0x3d, r28	; 61
    1b46:	cf 91       	pop	r28
    1b48:	df 91       	pop	r29
    1b4a:	08 95       	ret

00001b4c <__udivmodqi4>:
    1b4c:	99 1b       	sub	r25, r25
    1b4e:	79 e0       	ldi	r23, 0x09	; 9
    1b50:	04 c0       	rjmp	.+8      	; 0x1b5a <__udivmodqi4_ep>

00001b52 <__udivmodqi4_loop>:
    1b52:	99 1f       	adc	r25, r25
    1b54:	96 17       	cp	r25, r22
    1b56:	08 f0       	brcs	.+2      	; 0x1b5a <__udivmodqi4_ep>
    1b58:	96 1b       	sub	r25, r22

00001b5a <__udivmodqi4_ep>:
    1b5a:	88 1f       	adc	r24, r24
    1b5c:	7a 95       	dec	r23
    1b5e:	c9 f7       	brne	.-14     	; 0x1b52 <__udivmodqi4_loop>
    1b60:	80 95       	com	r24
    1b62:	08 95       	ret

00001b64 <__prologue_saves__>:
    1b64:	2f 92       	push	r2
    1b66:	3f 92       	push	r3
    1b68:	4f 92       	push	r4
    1b6a:	5f 92       	push	r5
    1b6c:	6f 92       	push	r6
    1b6e:	7f 92       	push	r7
    1b70:	8f 92       	push	r8
    1b72:	9f 92       	push	r9
    1b74:	af 92       	push	r10
    1b76:	bf 92       	push	r11
    1b78:	cf 92       	push	r12
    1b7a:	df 92       	push	r13
    1b7c:	ef 92       	push	r14
    1b7e:	ff 92       	push	r15
    1b80:	0f 93       	push	r16
    1b82:	1f 93       	push	r17
    1b84:	cf 93       	push	r28
    1b86:	df 93       	push	r29
    1b88:	cd b7       	in	r28, 0x3d	; 61
    1b8a:	de b7       	in	r29, 0x3e	; 62
    1b8c:	ca 1b       	sub	r28, r26
    1b8e:	db 0b       	sbc	r29, r27
    1b90:	0f b6       	in	r0, 0x3f	; 63
    1b92:	f8 94       	cli
    1b94:	de bf       	out	0x3e, r29	; 62
    1b96:	0f be       	out	0x3f, r0	; 63
    1b98:	cd bf       	out	0x3d, r28	; 61
    1b9a:	09 94       	ijmp

00001b9c <__epilogue_restores__>:
    1b9c:	2a 88       	ldd	r2, Y+18	; 0x12
    1b9e:	39 88       	ldd	r3, Y+17	; 0x11
    1ba0:	48 88       	ldd	r4, Y+16	; 0x10
    1ba2:	5f 84       	ldd	r5, Y+15	; 0x0f
    1ba4:	6e 84       	ldd	r6, Y+14	; 0x0e
    1ba6:	7d 84       	ldd	r7, Y+13	; 0x0d
    1ba8:	8c 84       	ldd	r8, Y+12	; 0x0c
    1baa:	9b 84       	ldd	r9, Y+11	; 0x0b
    1bac:	aa 84       	ldd	r10, Y+10	; 0x0a
    1bae:	b9 84       	ldd	r11, Y+9	; 0x09
    1bb0:	c8 84       	ldd	r12, Y+8	; 0x08
    1bb2:	df 80       	ldd	r13, Y+7	; 0x07
    1bb4:	ee 80       	ldd	r14, Y+6	; 0x06
    1bb6:	fd 80       	ldd	r15, Y+5	; 0x05
    1bb8:	0c 81       	ldd	r16, Y+4	; 0x04
    1bba:	1b 81       	ldd	r17, Y+3	; 0x03
    1bbc:	aa 81       	ldd	r26, Y+2	; 0x02
    1bbe:	b9 81       	ldd	r27, Y+1	; 0x01
    1bc0:	ce 0f       	add	r28, r30
    1bc2:	d1 1d       	adc	r29, r1
    1bc4:	0f b6       	in	r0, 0x3f	; 63
    1bc6:	f8 94       	cli
    1bc8:	de bf       	out	0x3e, r29	; 62
    1bca:	0f be       	out	0x3f, r0	; 63
    1bcc:	cd bf       	out	0x3d, r28	; 61
    1bce:	ed 01       	movw	r28, r26
    1bd0:	08 95       	ret

00001bd2 <strtol>:
    1bd2:	2f 92       	push	r2
    1bd4:	3f 92       	push	r3
    1bd6:	5f 92       	push	r5
    1bd8:	6f 92       	push	r6
    1bda:	7f 92       	push	r7
    1bdc:	8f 92       	push	r8
    1bde:	9f 92       	push	r9
    1be0:	af 92       	push	r10
    1be2:	bf 92       	push	r11
    1be4:	cf 92       	push	r12
    1be6:	df 92       	push	r13
    1be8:	ef 92       	push	r14
    1bea:	ff 92       	push	r15
    1bec:	0f 93       	push	r16
    1bee:	1f 93       	push	r17
    1bf0:	cf 93       	push	r28
    1bf2:	df 93       	push	r29
    1bf4:	8c 01       	movw	r16, r24
    1bf6:	1b 01       	movw	r2, r22
    1bf8:	ea 01       	movw	r28, r20
    1bfa:	61 15       	cp	r22, r1
    1bfc:	71 05       	cpc	r23, r1
    1bfe:	19 f0       	breq	.+6      	; 0x1c06 <strtol+0x34>
    1c00:	fb 01       	movw	r30, r22
    1c02:	91 83       	std	Z+1, r25	; 0x01
    1c04:	80 83       	st	Z, r24
    1c06:	20 97       	sbiw	r28, 0x00	; 0
    1c08:	49 f0       	breq	.+18     	; 0x1c1c <strtol+0x4a>
    1c0a:	ce 01       	movw	r24, r28
    1c0c:	02 97       	sbiw	r24, 0x02	; 2
    1c0e:	83 97       	sbiw	r24, 0x23	; 35
    1c10:	28 f0       	brcs	.+10     	; 0x1c1c <strtol+0x4a>
    1c12:	20 e0       	ldi	r18, 0x00	; 0
    1c14:	30 e0       	ldi	r19, 0x00	; 0
    1c16:	40 e0       	ldi	r20, 0x00	; 0
    1c18:	50 e0       	ldi	r21, 0x00	; 0
    1c1a:	f6 c0       	rjmp	.+492    	; 0x1e08 <strtol+0x236>
    1c1c:	f8 01       	movw	r30, r16
    1c1e:	a1 90       	ld	r10, Z+
    1c20:	8f 01       	movw	r16, r30
    1c22:	8a 2d       	mov	r24, r10
    1c24:	90 e0       	ldi	r25, 0x00	; 0
    1c26:	0e 94 18 0f 	call	0x1e30	; 0x1e30 <isspace>
    1c2a:	89 2b       	or	r24, r25
    1c2c:	b9 f7       	brne	.-18     	; 0x1c1c <strtol+0x4a>
    1c2e:	fd e2       	ldi	r31, 0x2D	; 45
    1c30:	af 16       	cp	r10, r31
    1c32:	31 f4       	brne	.+12     	; 0x1c40 <strtol+0x6e>
    1c34:	f8 01       	movw	r30, r16
    1c36:	a1 90       	ld	r10, Z+
    1c38:	8f 01       	movw	r16, r30
    1c3a:	55 24       	eor	r5, r5
    1c3c:	53 94       	inc	r5
    1c3e:	07 c0       	rjmp	.+14     	; 0x1c4e <strtol+0x7c>
    1c40:	fb e2       	ldi	r31, 0x2B	; 43
    1c42:	af 16       	cp	r10, r31
    1c44:	19 f4       	brne	.+6      	; 0x1c4c <strtol+0x7a>
    1c46:	f8 01       	movw	r30, r16
    1c48:	a1 90       	ld	r10, Z+
    1c4a:	8f 01       	movw	r16, r30
    1c4c:	55 24       	eor	r5, r5
    1c4e:	20 97       	sbiw	r28, 0x00	; 0
    1c50:	19 f0       	breq	.+6      	; 0x1c58 <strtol+0x86>
    1c52:	c0 31       	cpi	r28, 0x10	; 16
    1c54:	d1 05       	cpc	r29, r1
    1c56:	c1 f4       	brne	.+48     	; 0x1c88 <strtol+0xb6>
    1c58:	f0 e3       	ldi	r31, 0x30	; 48
    1c5a:	af 16       	cp	r10, r31
    1c5c:	79 f4       	brne	.+30     	; 0x1c7c <strtol+0xaa>
    1c5e:	f8 01       	movw	r30, r16
    1c60:	80 81       	ld	r24, Z
    1c62:	88 37       	cpi	r24, 0x78	; 120
    1c64:	11 f0       	breq	.+4      	; 0x1c6a <strtol+0x98>
    1c66:	88 35       	cpi	r24, 0x58	; 88
    1c68:	49 f4       	brne	.+18     	; 0x1c7c <strtol+0xaa>
    1c6a:	f8 01       	movw	r30, r16
    1c6c:	a1 80       	ldd	r10, Z+1	; 0x01
    1c6e:	0e 5f       	subi	r16, 0xFE	; 254
    1c70:	1f 4f       	sbci	r17, 0xFF	; 255
    1c72:	f2 e0       	ldi	r31, 0x02	; 2
    1c74:	5f 2a       	or	r5, r31
    1c76:	c0 e1       	ldi	r28, 0x10	; 16
    1c78:	d0 e0       	ldi	r29, 0x00	; 0
    1c7a:	06 c0       	rjmp	.+12     	; 0x1c88 <strtol+0xb6>
    1c7c:	20 97       	sbiw	r28, 0x00	; 0
    1c7e:	21 f4       	brne	.+8      	; 0x1c88 <strtol+0xb6>
    1c80:	80 e3       	ldi	r24, 0x30	; 48
    1c82:	a8 16       	cp	r10, r24
    1c84:	e9 f4       	brne	.+58     	; 0x1cc0 <strtol+0xee>
    1c86:	27 c0       	rjmp	.+78     	; 0x1cd6 <strtol+0x104>
    1c88:	c8 30       	cpi	r28, 0x08	; 8
    1c8a:	d1 05       	cpc	r29, r1
    1c8c:	31 f1       	breq	.+76     	; 0x1cda <strtol+0x108>
    1c8e:	c9 30       	cpi	r28, 0x09	; 9
    1c90:	d1 05       	cpc	r29, r1
    1c92:	24 f4       	brge	.+8      	; 0x1c9c <strtol+0xca>
    1c94:	c2 30       	cpi	r28, 0x02	; 2
    1c96:	d1 05       	cpc	r29, r1
    1c98:	31 f5       	brne	.+76     	; 0x1ce6 <strtol+0x114>
    1c9a:	0c c0       	rjmp	.+24     	; 0x1cb4 <strtol+0xe2>
    1c9c:	ca 30       	cpi	r28, 0x0A	; 10
    1c9e:	d1 05       	cpc	r29, r1
    1ca0:	89 f0       	breq	.+34     	; 0x1cc4 <strtol+0xf2>
    1ca2:	c0 31       	cpi	r28, 0x10	; 16
    1ca4:	d1 05       	cpc	r29, r1
    1ca6:	f9 f4       	brne	.+62     	; 0x1ce6 <strtol+0x114>
    1ca8:	c1 2c       	mov	r12, r1
    1caa:	d1 2c       	mov	r13, r1
    1cac:	e1 2c       	mov	r14, r1
    1cae:	b8 e0       	ldi	r27, 0x08	; 8
    1cb0:	fb 2e       	mov	r15, r27
    1cb2:	28 c0       	rjmp	.+80     	; 0x1d04 <strtol+0x132>
    1cb4:	c1 2c       	mov	r12, r1
    1cb6:	d1 2c       	mov	r13, r1
    1cb8:	e1 2c       	mov	r14, r1
    1cba:	a0 e4       	ldi	r26, 0x40	; 64
    1cbc:	fa 2e       	mov	r15, r26
    1cbe:	22 c0       	rjmp	.+68     	; 0x1d04 <strtol+0x132>
    1cc0:	ca e0       	ldi	r28, 0x0A	; 10
    1cc2:	d0 e0       	ldi	r29, 0x00	; 0
    1cc4:	fc ec       	ldi	r31, 0xCC	; 204
    1cc6:	cf 2e       	mov	r12, r31
    1cc8:	fc ec       	ldi	r31, 0xCC	; 204
    1cca:	df 2e       	mov	r13, r31
    1ccc:	fc ec       	ldi	r31, 0xCC	; 204
    1cce:	ef 2e       	mov	r14, r31
    1cd0:	fc e0       	ldi	r31, 0x0C	; 12
    1cd2:	ff 2e       	mov	r15, r31
    1cd4:	17 c0       	rjmp	.+46     	; 0x1d04 <strtol+0x132>
    1cd6:	c8 e0       	ldi	r28, 0x08	; 8
    1cd8:	d0 e0       	ldi	r29, 0x00	; 0
    1cda:	c1 2c       	mov	r12, r1
    1cdc:	d1 2c       	mov	r13, r1
    1cde:	e1 2c       	mov	r14, r1
    1ce0:	e0 e1       	ldi	r30, 0x10	; 16
    1ce2:	fe 2e       	mov	r15, r30
    1ce4:	0f c0       	rjmp	.+30     	; 0x1d04 <strtol+0x132>
    1ce6:	9e 01       	movw	r18, r28
    1ce8:	44 27       	eor	r20, r20
    1cea:	37 fd       	sbrc	r19, 7
    1cec:	40 95       	com	r20
    1cee:	54 2f       	mov	r21, r20
    1cf0:	60 e0       	ldi	r22, 0x00	; 0
    1cf2:	70 e0       	ldi	r23, 0x00	; 0
    1cf4:	80 e0       	ldi	r24, 0x00	; 0
    1cf6:	90 e8       	ldi	r25, 0x80	; 128
    1cf8:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__udivmodsi4>
    1cfc:	c9 01       	movw	r24, r18
    1cfe:	da 01       	movw	r26, r20
    1d00:	6c 01       	movw	r12, r24
    1d02:	7d 01       	movw	r14, r26
    1d04:	20 e0       	ldi	r18, 0x00	; 0
    1d06:	30 e0       	ldi	r19, 0x00	; 0
    1d08:	40 e0       	ldi	r20, 0x00	; 0
    1d0a:	50 e0       	ldi	r21, 0x00	; 0
    1d0c:	60 e0       	ldi	r22, 0x00	; 0
    1d0e:	3e 01       	movw	r6, r28
    1d10:	88 24       	eor	r8, r8
    1d12:	77 fc       	sbrc	r7, 7
    1d14:	80 94       	com	r8
    1d16:	98 2c       	mov	r9, r8
    1d18:	70 ed       	ldi	r23, 0xD0	; 208
    1d1a:	b7 2e       	mov	r11, r23
    1d1c:	ba 0c       	add	r11, r10
    1d1e:	e9 e0       	ldi	r30, 0x09	; 9
    1d20:	eb 15       	cp	r30, r11
    1d22:	70 f4       	brcc	.+28     	; 0x1d40 <strtol+0x16e>
    1d24:	8a 2d       	mov	r24, r10
    1d26:	81 54       	subi	r24, 0x41	; 65
    1d28:	8a 31       	cpi	r24, 0x1A	; 26
    1d2a:	18 f4       	brcc	.+6      	; 0x1d32 <strtol+0x160>
    1d2c:	99 ec       	ldi	r25, 0xC9	; 201
    1d2e:	b9 2e       	mov	r11, r25
    1d30:	06 c0       	rjmp	.+12     	; 0x1d3e <strtol+0x16c>
    1d32:	8a 2d       	mov	r24, r10
    1d34:	81 56       	subi	r24, 0x61	; 97
    1d36:	8a 31       	cpi	r24, 0x1A	; 26
    1d38:	50 f5       	brcc	.+84     	; 0x1d8e <strtol+0x1bc>
    1d3a:	89 ea       	ldi	r24, 0xA9	; 169
    1d3c:	b8 2e       	mov	r11, r24
    1d3e:	ba 0c       	add	r11, r10
    1d40:	8b 2d       	mov	r24, r11
    1d42:	90 e0       	ldi	r25, 0x00	; 0
    1d44:	8c 17       	cp	r24, r28
    1d46:	9d 07       	cpc	r25, r29
    1d48:	14 f5       	brge	.+68     	; 0x1d8e <strtol+0x1bc>
    1d4a:	6f 3f       	cpi	r22, 0xFF	; 255
    1d4c:	e1 f0       	breq	.+56     	; 0x1d86 <strtol+0x1b4>
    1d4e:	c2 16       	cp	r12, r18
    1d50:	d3 06       	cpc	r13, r19
    1d52:	e4 06       	cpc	r14, r20
    1d54:	f5 06       	cpc	r15, r21
    1d56:	b0 f0       	brcs	.+44     	; 0x1d84 <strtol+0x1b2>
    1d58:	ca 01       	movw	r24, r20
    1d5a:	b9 01       	movw	r22, r18
    1d5c:	a4 01       	movw	r20, r8
    1d5e:	93 01       	movw	r18, r6
    1d60:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <__mulsi3>
    1d64:	9b 01       	movw	r18, r22
    1d66:	ac 01       	movw	r20, r24
    1d68:	2b 0d       	add	r18, r11
    1d6a:	31 1d       	adc	r19, r1
    1d6c:	41 1d       	adc	r20, r1
    1d6e:	51 1d       	adc	r21, r1
    1d70:	21 30       	cpi	r18, 0x01	; 1
    1d72:	f0 e0       	ldi	r31, 0x00	; 0
    1d74:	3f 07       	cpc	r19, r31
    1d76:	f0 e0       	ldi	r31, 0x00	; 0
    1d78:	4f 07       	cpc	r20, r31
    1d7a:	f0 e8       	ldi	r31, 0x80	; 128
    1d7c:	5f 07       	cpc	r21, r31
    1d7e:	10 f4       	brcc	.+4      	; 0x1d84 <strtol+0x1b2>
    1d80:	61 e0       	ldi	r22, 0x01	; 1
    1d82:	01 c0       	rjmp	.+2      	; 0x1d86 <strtol+0x1b4>
    1d84:	6f ef       	ldi	r22, 0xFF	; 255
    1d86:	f8 01       	movw	r30, r16
    1d88:	a1 90       	ld	r10, Z+
    1d8a:	8f 01       	movw	r16, r30
    1d8c:	c5 cf       	rjmp	.-118    	; 0x1d18 <strtol+0x146>
    1d8e:	21 14       	cp	r2, r1
    1d90:	31 04       	cpc	r3, r1
    1d92:	81 f0       	breq	.+32     	; 0x1db4 <strtol+0x1e2>
    1d94:	66 23       	and	r22, r22
    1d96:	31 f0       	breq	.+12     	; 0x1da4 <strtol+0x1d2>
    1d98:	01 50       	subi	r16, 0x01	; 1
    1d9a:	10 40       	sbci	r17, 0x00	; 0
    1d9c:	f1 01       	movw	r30, r2
    1d9e:	11 83       	std	Z+1, r17	; 0x01
    1da0:	00 83       	st	Z, r16
    1da2:	08 c0       	rjmp	.+16     	; 0x1db4 <strtol+0x1e2>
    1da4:	51 fe       	sbrs	r5, 1
    1da6:	1a c0       	rjmp	.+52     	; 0x1ddc <strtol+0x20a>
    1da8:	02 50       	subi	r16, 0x02	; 2
    1daa:	10 40       	sbci	r17, 0x00	; 0
    1dac:	f1 01       	movw	r30, r2
    1dae:	11 83       	std	Z+1, r17	; 0x01
    1db0:	00 83       	st	Z, r16
    1db2:	14 c0       	rjmp	.+40     	; 0x1ddc <strtol+0x20a>
    1db4:	67 ff       	sbrs	r22, 7
    1db6:	12 c0       	rjmp	.+36     	; 0x1ddc <strtol+0x20a>
    1db8:	50 fc       	sbrc	r5, 0
    1dba:	05 c0       	rjmp	.+10     	; 0x1dc6 <strtol+0x1f4>
    1dbc:	2f ef       	ldi	r18, 0xFF	; 255
    1dbe:	3f ef       	ldi	r19, 0xFF	; 255
    1dc0:	4f ef       	ldi	r20, 0xFF	; 255
    1dc2:	5f e7       	ldi	r21, 0x7F	; 127
    1dc4:	04 c0       	rjmp	.+8      	; 0x1dce <strtol+0x1fc>
    1dc6:	20 e0       	ldi	r18, 0x00	; 0
    1dc8:	30 e0       	ldi	r19, 0x00	; 0
    1dca:	40 e0       	ldi	r20, 0x00	; 0
    1dcc:	50 e8       	ldi	r21, 0x80	; 128
    1dce:	82 e2       	ldi	r24, 0x22	; 34
    1dd0:	90 e0       	ldi	r25, 0x00	; 0
    1dd2:	90 93 f6 02 	sts	0x02F6, r25
    1dd6:	80 93 f5 02 	sts	0x02F5, r24
    1dda:	16 c0       	rjmp	.+44     	; 0x1e08 <strtol+0x236>
    1ddc:	50 fe       	sbrs	r5, 0
    1dde:	08 c0       	rjmp	.+16     	; 0x1df0 <strtol+0x21e>
    1de0:	50 95       	com	r21
    1de2:	40 95       	com	r20
    1de4:	30 95       	com	r19
    1de6:	21 95       	neg	r18
    1de8:	3f 4f       	sbci	r19, 0xFF	; 255
    1dea:	4f 4f       	sbci	r20, 0xFF	; 255
    1dec:	5f 4f       	sbci	r21, 0xFF	; 255
    1dee:	0c c0       	rjmp	.+24     	; 0x1e08 <strtol+0x236>
    1df0:	57 ff       	sbrs	r21, 7
    1df2:	0a c0       	rjmp	.+20     	; 0x1e08 <strtol+0x236>
    1df4:	82 e2       	ldi	r24, 0x22	; 34
    1df6:	90 e0       	ldi	r25, 0x00	; 0
    1df8:	90 93 f6 02 	sts	0x02F6, r25
    1dfc:	80 93 f5 02 	sts	0x02F5, r24
    1e00:	2f ef       	ldi	r18, 0xFF	; 255
    1e02:	3f ef       	ldi	r19, 0xFF	; 255
    1e04:	4f ef       	ldi	r20, 0xFF	; 255
    1e06:	5f e7       	ldi	r21, 0x7F	; 127
    1e08:	b9 01       	movw	r22, r18
    1e0a:	ca 01       	movw	r24, r20
    1e0c:	df 91       	pop	r29
    1e0e:	cf 91       	pop	r28
    1e10:	1f 91       	pop	r17
    1e12:	0f 91       	pop	r16
    1e14:	ff 90       	pop	r15
    1e16:	ef 90       	pop	r14
    1e18:	df 90       	pop	r13
    1e1a:	cf 90       	pop	r12
    1e1c:	bf 90       	pop	r11
    1e1e:	af 90       	pop	r10
    1e20:	9f 90       	pop	r9
    1e22:	8f 90       	pop	r8
    1e24:	7f 90       	pop	r7
    1e26:	6f 90       	pop	r6
    1e28:	5f 90       	pop	r5
    1e2a:	3f 90       	pop	r3
    1e2c:	2f 90       	pop	r2
    1e2e:	08 95       	ret

00001e30 <isspace>:
    1e30:	91 11       	cpse	r25, r1
    1e32:	6d c0       	rjmp	.+218    	; 0x1f0e <__ctype_isfalse>
    1e34:	80 32       	cpi	r24, 0x20	; 32
    1e36:	19 f0       	breq	.+6      	; 0x1e3e <isspace+0xe>
    1e38:	89 50       	subi	r24, 0x09	; 9
    1e3a:	85 50       	subi	r24, 0x05	; 5
    1e3c:	d0 f7       	brcc	.-12     	; 0x1e32 <isspace+0x2>
    1e3e:	08 95       	ret

00001e40 <memset>:
    1e40:	dc 01       	movw	r26, r24
    1e42:	01 c0       	rjmp	.+2      	; 0x1e46 <memset+0x6>
    1e44:	6d 93       	st	X+, r22
    1e46:	41 50       	subi	r20, 0x01	; 1
    1e48:	50 40       	sbci	r21, 0x00	; 0
    1e4a:	e0 f7       	brcc	.-8      	; 0x1e44 <memset+0x4>
    1e4c:	08 95       	ret

00001e4e <strstr>:
    1e4e:	fb 01       	movw	r30, r22
    1e50:	51 91       	ld	r21, Z+
    1e52:	55 23       	and	r21, r21
    1e54:	a9 f0       	breq	.+42     	; 0x1e80 <strstr+0x32>
    1e56:	bf 01       	movw	r22, r30
    1e58:	dc 01       	movw	r26, r24
    1e5a:	4d 91       	ld	r20, X+
    1e5c:	45 17       	cp	r20, r21
    1e5e:	41 11       	cpse	r20, r1
    1e60:	e1 f7       	brne	.-8      	; 0x1e5a <strstr+0xc>
    1e62:	59 f4       	brne	.+22     	; 0x1e7a <strstr+0x2c>
    1e64:	cd 01       	movw	r24, r26
    1e66:	01 90       	ld	r0, Z+
    1e68:	00 20       	and	r0, r0
    1e6a:	49 f0       	breq	.+18     	; 0x1e7e <strstr+0x30>
    1e6c:	4d 91       	ld	r20, X+
    1e6e:	40 15       	cp	r20, r0
    1e70:	41 11       	cpse	r20, r1
    1e72:	c9 f3       	breq	.-14     	; 0x1e66 <strstr+0x18>
    1e74:	fb 01       	movw	r30, r22
    1e76:	41 11       	cpse	r20, r1
    1e78:	ef cf       	rjmp	.-34     	; 0x1e58 <strstr+0xa>
    1e7a:	81 e0       	ldi	r24, 0x01	; 1
    1e7c:	90 e0       	ldi	r25, 0x00	; 0
    1e7e:	01 97       	sbiw	r24, 0x01	; 1
    1e80:	08 95       	ret

00001e82 <itoa>:
    1e82:	fb 01       	movw	r30, r22
    1e84:	9f 01       	movw	r18, r30
    1e86:	e8 94       	clt
    1e88:	42 30       	cpi	r20, 0x02	; 2
    1e8a:	c4 f0       	brlt	.+48     	; 0x1ebc <itoa+0x3a>
    1e8c:	45 32       	cpi	r20, 0x25	; 37
    1e8e:	b4 f4       	brge	.+44     	; 0x1ebc <itoa+0x3a>
    1e90:	4a 30       	cpi	r20, 0x0A	; 10
    1e92:	29 f4       	brne	.+10     	; 0x1e9e <itoa+0x1c>
    1e94:	97 fb       	bst	r25, 7
    1e96:	1e f4       	brtc	.+6      	; 0x1e9e <itoa+0x1c>
    1e98:	90 95       	com	r25
    1e9a:	81 95       	neg	r24
    1e9c:	9f 4f       	sbci	r25, 0xFF	; 255
    1e9e:	64 2f       	mov	r22, r20
    1ea0:	77 27       	eor	r23, r23
    1ea2:	0e 94 b9 0f 	call	0x1f72	; 0x1f72 <__udivmodhi4>
    1ea6:	80 5d       	subi	r24, 0xD0	; 208
    1ea8:	8a 33       	cpi	r24, 0x3A	; 58
    1eaa:	0c f0       	brlt	.+2      	; 0x1eae <itoa+0x2c>
    1eac:	89 5d       	subi	r24, 0xD9	; 217
    1eae:	81 93       	st	Z+, r24
    1eb0:	cb 01       	movw	r24, r22
    1eb2:	00 97       	sbiw	r24, 0x00	; 0
    1eb4:	a1 f7       	brne	.-24     	; 0x1e9e <itoa+0x1c>
    1eb6:	16 f4       	brtc	.+4      	; 0x1ebc <itoa+0x3a>
    1eb8:	5d e2       	ldi	r21, 0x2D	; 45
    1eba:	51 93       	st	Z+, r21
    1ebc:	10 82       	st	Z, r1
    1ebe:	c9 01       	movw	r24, r18
    1ec0:	0c 94 8a 0f 	jmp	0x1f14	; 0x1f14 <strrev>

00001ec4 <ultoa>:
    1ec4:	fa 01       	movw	r30, r20
    1ec6:	cf 93       	push	r28
    1ec8:	ff 93       	push	r31
    1eca:	ef 93       	push	r30
    1ecc:	22 30       	cpi	r18, 0x02	; 2
    1ece:	cc f0       	brlt	.+50     	; 0x1f02 <ultoa+0x3e>
    1ed0:	25 32       	cpi	r18, 0x25	; 37
    1ed2:	bc f4       	brge	.+46     	; 0x1f02 <ultoa+0x3e>
    1ed4:	c2 2f       	mov	r28, r18
    1ed6:	2c 2f       	mov	r18, r28
    1ed8:	33 27       	eor	r19, r19
    1eda:	44 27       	eor	r20, r20
    1edc:	55 27       	eor	r21, r21
    1ede:	ff 93       	push	r31
    1ee0:	ef 93       	push	r30
    1ee2:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <__udivmodsi4>
    1ee6:	ef 91       	pop	r30
    1ee8:	ff 91       	pop	r31
    1eea:	60 5d       	subi	r22, 0xD0	; 208
    1eec:	6a 33       	cpi	r22, 0x3A	; 58
    1eee:	0c f0       	brlt	.+2      	; 0x1ef2 <ultoa+0x2e>
    1ef0:	69 5d       	subi	r22, 0xD9	; 217
    1ef2:	61 93       	st	Z+, r22
    1ef4:	b9 01       	movw	r22, r18
    1ef6:	ca 01       	movw	r24, r20
    1ef8:	60 50       	subi	r22, 0x00	; 0
    1efa:	70 40       	sbci	r23, 0x00	; 0
    1efc:	80 40       	sbci	r24, 0x00	; 0
    1efe:	90 40       	sbci	r25, 0x00	; 0
    1f00:	51 f7       	brne	.-44     	; 0x1ed6 <ultoa+0x12>
    1f02:	10 82       	st	Z, r1
    1f04:	8f 91       	pop	r24
    1f06:	9f 91       	pop	r25
    1f08:	cf 91       	pop	r28
    1f0a:	0c 94 8a 0f 	jmp	0x1f14	; 0x1f14 <strrev>

00001f0e <__ctype_isfalse>:
    1f0e:	99 27       	eor	r25, r25
    1f10:	88 27       	eor	r24, r24

00001f12 <__ctype_istrue>:
    1f12:	08 95       	ret

00001f14 <strrev>:
    1f14:	dc 01       	movw	r26, r24
    1f16:	fc 01       	movw	r30, r24
    1f18:	67 2f       	mov	r22, r23
    1f1a:	71 91       	ld	r23, Z+
    1f1c:	77 23       	and	r23, r23
    1f1e:	e1 f7       	brne	.-8      	; 0x1f18 <strrev+0x4>
    1f20:	32 97       	sbiw	r30, 0x02	; 2
    1f22:	04 c0       	rjmp	.+8      	; 0x1f2c <strrev+0x18>
    1f24:	7c 91       	ld	r23, X
    1f26:	6d 93       	st	X+, r22
    1f28:	70 83       	st	Z, r23
    1f2a:	62 91       	ld	r22, -Z
    1f2c:	ae 17       	cp	r26, r30
    1f2e:	bf 07       	cpc	r27, r31
    1f30:	c8 f3       	brcs	.-14     	; 0x1f24 <strrev+0x10>
    1f32:	08 95       	ret

00001f34 <__mulsi3>:
    1f34:	62 9f       	mul	r22, r18
    1f36:	d0 01       	movw	r26, r0
    1f38:	73 9f       	mul	r23, r19
    1f3a:	f0 01       	movw	r30, r0
    1f3c:	82 9f       	mul	r24, r18
    1f3e:	e0 0d       	add	r30, r0
    1f40:	f1 1d       	adc	r31, r1
    1f42:	64 9f       	mul	r22, r20
    1f44:	e0 0d       	add	r30, r0
    1f46:	f1 1d       	adc	r31, r1
    1f48:	92 9f       	mul	r25, r18
    1f4a:	f0 0d       	add	r31, r0
    1f4c:	83 9f       	mul	r24, r19
    1f4e:	f0 0d       	add	r31, r0
    1f50:	74 9f       	mul	r23, r20
    1f52:	f0 0d       	add	r31, r0
    1f54:	65 9f       	mul	r22, r21
    1f56:	f0 0d       	add	r31, r0
    1f58:	99 27       	eor	r25, r25
    1f5a:	72 9f       	mul	r23, r18
    1f5c:	b0 0d       	add	r27, r0
    1f5e:	e1 1d       	adc	r30, r1
    1f60:	f9 1f       	adc	r31, r25
    1f62:	63 9f       	mul	r22, r19
    1f64:	b0 0d       	add	r27, r0
    1f66:	e1 1d       	adc	r30, r1
    1f68:	f9 1f       	adc	r31, r25
    1f6a:	bd 01       	movw	r22, r26
    1f6c:	cf 01       	movw	r24, r30
    1f6e:	11 24       	eor	r1, r1
    1f70:	08 95       	ret

00001f72 <__udivmodhi4>:
    1f72:	aa 1b       	sub	r26, r26
    1f74:	bb 1b       	sub	r27, r27
    1f76:	51 e1       	ldi	r21, 0x11	; 17
    1f78:	07 c0       	rjmp	.+14     	; 0x1f88 <__udivmodhi4_ep>

00001f7a <__udivmodhi4_loop>:
    1f7a:	aa 1f       	adc	r26, r26
    1f7c:	bb 1f       	adc	r27, r27
    1f7e:	a6 17       	cp	r26, r22
    1f80:	b7 07       	cpc	r27, r23
    1f82:	10 f0       	brcs	.+4      	; 0x1f88 <__udivmodhi4_ep>
    1f84:	a6 1b       	sub	r26, r22
    1f86:	b7 0b       	sbc	r27, r23

00001f88 <__udivmodhi4_ep>:
    1f88:	88 1f       	adc	r24, r24
    1f8a:	99 1f       	adc	r25, r25
    1f8c:	5a 95       	dec	r21
    1f8e:	a9 f7       	brne	.-22     	; 0x1f7a <__udivmodhi4_loop>
    1f90:	80 95       	com	r24
    1f92:	90 95       	com	r25
    1f94:	bc 01       	movw	r22, r24
    1f96:	cd 01       	movw	r24, r26
    1f98:	08 95       	ret

00001f9a <__udivmodsi4>:
    1f9a:	a1 e2       	ldi	r26, 0x21	; 33
    1f9c:	1a 2e       	mov	r1, r26
    1f9e:	aa 1b       	sub	r26, r26
    1fa0:	bb 1b       	sub	r27, r27
    1fa2:	fd 01       	movw	r30, r26
    1fa4:	0d c0       	rjmp	.+26     	; 0x1fc0 <__udivmodsi4_ep>

00001fa6 <__udivmodsi4_loop>:
    1fa6:	aa 1f       	adc	r26, r26
    1fa8:	bb 1f       	adc	r27, r27
    1faa:	ee 1f       	adc	r30, r30
    1fac:	ff 1f       	adc	r31, r31
    1fae:	a2 17       	cp	r26, r18
    1fb0:	b3 07       	cpc	r27, r19
    1fb2:	e4 07       	cpc	r30, r20
    1fb4:	f5 07       	cpc	r31, r21
    1fb6:	20 f0       	brcs	.+8      	; 0x1fc0 <__udivmodsi4_ep>
    1fb8:	a2 1b       	sub	r26, r18
    1fba:	b3 0b       	sbc	r27, r19
    1fbc:	e4 0b       	sbc	r30, r20
    1fbe:	f5 0b       	sbc	r31, r21

00001fc0 <__udivmodsi4_ep>:
    1fc0:	66 1f       	adc	r22, r22
    1fc2:	77 1f       	adc	r23, r23
    1fc4:	88 1f       	adc	r24, r24
    1fc6:	99 1f       	adc	r25, r25
    1fc8:	1a 94       	dec	r1
    1fca:	69 f7       	brne	.-38     	; 0x1fa6 <__udivmodsi4_loop>
    1fcc:	60 95       	com	r22
    1fce:	70 95       	com	r23
    1fd0:	80 95       	com	r24
    1fd2:	90 95       	com	r25
    1fd4:	9b 01       	movw	r18, r22
    1fd6:	ac 01       	movw	r20, r24
    1fd8:	bd 01       	movw	r22, r26
    1fda:	cf 01       	movw	r24, r30
    1fdc:	08 95       	ret

00001fde <_exit>:
    1fde:	f8 94       	cli

00001fe0 <__stop_program>:
    1fe0:	ff cf       	rjmp	.-2      	; 0x1fe0 <__stop_program>
